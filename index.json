{
  "api/dotnet/AuthorizationAPI.Controllers.AuthorizeController.html": {
    "href": "api/dotnet/AuthorizationAPI.Controllers.AuthorizeController.html",
    "title": "Class AuthorizeController | FoundationaLLM",
    "keywords": "Class AuthorizeController Namespace AuthorizationAPI.Controllers Assembly AuthorizationAPI.dll Provides methods for processing authorization requests. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"authorize\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class AuthorizeController Inheritance object AuthorizeController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizeController(IAuthorizationCore) Provides methods for processing authorization requests. public AuthorizeController(IAuthorizationCore authorizationCore) Parameters authorizationCore IAuthorizationCore The IAuthorizationCore service used to process authorization requests. Methods ProcessAuthorizationRequest(ActionAuthorizationRequest) [HttpPost(Name = \"ProcessAuthorizationRequest\")] public IActionResult ProcessAuthorizationRequest(ActionAuthorizationRequest request) Parameters request ActionAuthorizationRequest Returns IActionResult"
  },
  "api/dotnet/AuthorizationAPI.Controllers.html": {
    "href": "api/dotnet/AuthorizationAPI.Controllers.html",
    "title": "Namespace AuthorizationAPI.Controllers | FoundationaLLM",
    "keywords": "Namespace AuthorizationAPI.Controllers Classes AuthorizeController Provides methods for processing authorization requests."
  },
  "api/dotnet/FoundationaLLM.Agent.Constants.AgentResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Constants.AgentResourceProviderActions.html",
    "title": "Class AgentResourceProviderActions | FoundationaLLM",
    "keywords": "Class AgentResourceProviderActions Namespace FoundationaLLM.Agent.Constants Assembly FoundationaLLM.Agent.dll The names of the actions implemented by the Agent resource provider. public static class AgentResourceProviderActions Inheritance object AgentResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Agent.Constants.AgentResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Constants.AgentResourceTypeNames.html",
    "title": "Class AgentResourceTypeNames | FoundationaLLM",
    "keywords": "Class AgentResourceTypeNames Namespace FoundationaLLM.Agent.Constants Assembly FoundationaLLM.Agent.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Agent resource provider. public class AgentResourceTypeNames Inheritance object AgentResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Agents Agents. public const string Agents = \"agents\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Agent.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Constants.html",
    "title": "Namespace FoundationaLLM.Agent.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.Constants Classes AgentResourceProviderActions The names of the actions implemented by the Agent resource provider. AgentResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Agent resource provider."
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReference.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReference.html",
    "title": "Class AgentReference | FoundationaLLM",
    "keywords": "Class AgentReference Namespace FoundationaLLM.Agent.Models.Resources Assembly FoundationaLLM.Agent.dll Provides details about an agent. public class AgentReference : ResourceReference Inheritance object ResourceReference AgentReference Inherited Members ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentType The object type of the agent. [JsonIgnore] public Type AgentType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReferenceStore.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReferenceStore.html",
    "title": "Class AgentReferenceStore | FoundationaLLM",
    "keywords": "Class AgentReferenceStore Namespace FoundationaLLM.Agent.Models.Resources Assembly FoundationaLLM.Agent.dll Models the content of the agent reference store managed by the FoundationaLLM.Agent resource provider. public class AgentReferenceStore Inheritance object AgentReferenceStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentReferences The list of all agents registered in the system. public required List<AgentReference> AgentReferences { get; set; } Property Value List<AgentReference> Methods FromDictionary(Dictionary<string, AgentReference>) Creates a new instance of the AgentReferenceStore from a dictionary. public static AgentReferenceStore FromDictionary(Dictionary<string, AgentReference> dictionary) Parameters dictionary Dictionary<string, AgentReference> A string-based dictionary of AgentReference values. Returns AgentReferenceStore The AgentReferenceStore object created from the dictionary. ToDictionary() Creates a string-based dictionary of AgentReference values from the current object. public Dictionary<string, AgentReference> ToDictionary() Returns Dictionary<string, AgentReference> The string-based dictionary of AgentReference values from the current object."
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Agent.Models.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.Models.Resources Classes AgentReference Provides details about an agent. AgentReferenceStore Models the content of the agent reference store managed by the FoundationaLLM.Agent resource provider."
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderMetadata.html",
    "title": "Class AgentResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AgentResourceProviderMetadata Namespace FoundationaLLM.Agent.ResourceProviders Assembly FoundationaLLM.Agent.dll Provides metadata for the FoundationaLLM.Agent resource provider. public static class AgentResourceProviderMetadata Inheritance object AgentResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderService.html",
    "title": "Class AgentResourceProviderService | FoundationaLLM",
    "keywords": "Class AgentResourceProviderService Namespace FoundationaLLM.Agent.ResourceProviders Assembly FoundationaLLM.Agent.dll Implements the FoundationaLLM.Agent resource provider. public class AgentResourceProviderService : ResourceProviderServiceBase, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase AgentResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase._authorizationService ResourceProviderServiceBase._storageService ResourceProviderServiceBase._eventService ResourceProviderServiceBase._resourceValidatorFactory ResourceProviderServiceBase._logger ResourceProviderServiceBase._instanceSettings ResourceProviderServiceBase._storageContainerName ResourceProviderServiceBase._serializerSettings ResourceProviderServiceBase.Name ResourceProviderServiceBase.IsInitialized ResourceProviderServiceBase.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.GetResource<T>(string) ResourceProviderServiceBase.UpsertResourceAsync<T>(string, T) ResourceProviderServiceBase.GetResourceInternal<T>(ResourcePath) ResourceProviderServiceBase.UpsertResourceAsync<T>(ResourcePath, T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, ILoggerFactory) Implements the FoundationaLLM.Agent resource provider. public AgentResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task ExecuteActionAsync(ResourcePath, string) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. Returns Task<object> Exceptions NotImplementedException GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsyncInternal(ResourcePath) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsyncInternal(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Agent.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.ResourceProviders Classes AgentResourceProviderMetadata Provides metadata for the FoundationaLLM.Agent resource provider. AgentResourceProviderService Implements the FoundationaLLM.Agent resource provider."
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.AgentBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.AgentBaseValidator.html",
    "title": "Class AgentBaseValidator | FoundationaLLM",
    "keywords": "Class AgentBaseValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the AgentBase model. public class AgentBaseValidator : AbstractValidator<AgentBase>, IValidator<AgentBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AgentBase> AgentBaseValidator Implements IValidator<AgentBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AgentBase>.Validate(AgentBase) AbstractValidator<AgentBase>.ValidateAsync(AgentBase, CancellationToken) AbstractValidator<AgentBase>.Validate(ValidationContext<AgentBase>) AbstractValidator<AgentBase>.ValidateAsync(ValidationContext<AgentBase>, CancellationToken) AbstractValidator<AgentBase>.CreateDescriptor() AbstractValidator<AgentBase>.RuleFor<TProperty>(Expression<Func<AgentBase, TProperty>>) AbstractValidator<AgentBase>.Transform<TProperty, TTransformed>(Expression<Func<AgentBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AgentBase>.Transform<TProperty, TTransformed>(Expression<Func<AgentBase, TProperty>>, Func<AgentBase, TProperty, TTransformed>) AbstractValidator<AgentBase>.RuleForEach<TElement>(Expression<Func<AgentBase, IEnumerable<TElement>>>) AbstractValidator<AgentBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AgentBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AgentBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AgentBase, IEnumerable<TElement>>>, Func<AgentBase, TElement, TTransformed>) AbstractValidator<AgentBase>.RuleSet(string, Action) AbstractValidator<AgentBase>.When(Func<AgentBase, bool>, Action) AbstractValidator<AgentBase>.When(Func<AgentBase, ValidationContext<AgentBase>, bool>, Action) AbstractValidator<AgentBase>.Unless(Func<AgentBase, bool>, Action) AbstractValidator<AgentBase>.Unless(Func<AgentBase, ValidationContext<AgentBase>, bool>, Action) AbstractValidator<AgentBase>.WhenAsync(Func<AgentBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.WhenAsync(Func<AgentBase, ValidationContext<AgentBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.UnlessAsync(Func<AgentBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.UnlessAsync(Func<AgentBase, ValidationContext<AgentBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.Include(IValidator<AgentBase>) AbstractValidator<AgentBase>.Include<TValidator>(Func<AgentBase, TValidator>) AbstractValidator<AgentBase>.GetEnumerator() AbstractValidator<AgentBase>.EnsureInstanceNotNull(object) AbstractValidator<AgentBase>.PreValidate(ValidationContext<AgentBase>, ValidationResult) AbstractValidator<AgentBase>.RaiseValidationException(ValidationContext<AgentBase>, ValidationResult) AbstractValidator<AgentBase>.OnRuleAdded(IValidationRule<AgentBase>) AbstractValidator<AgentBase>.CascadeMode AbstractValidator<AgentBase>.ClassLevelCascadeMode AbstractValidator<AgentBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentBaseValidator() Configures the validation rules for the AgentBase model. public AgentBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.InternalContextAgentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.InternalContextAgentValidator.html",
    "title": "Class InternalContextAgentValidator | FoundationaLLM",
    "keywords": "Class InternalContextAgentValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the InternalContextAgent model. public class InternalContextAgentValidator : AbstractValidator<InternalContextAgent>, IValidator<InternalContextAgent>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<InternalContextAgent> InternalContextAgentValidator Implements IValidator<InternalContextAgent> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<InternalContextAgent>.Validate(InternalContextAgent) AbstractValidator<InternalContextAgent>.ValidateAsync(InternalContextAgent, CancellationToken) AbstractValidator<InternalContextAgent>.Validate(ValidationContext<InternalContextAgent>) AbstractValidator<InternalContextAgent>.ValidateAsync(ValidationContext<InternalContextAgent>, CancellationToken) AbstractValidator<InternalContextAgent>.CreateDescriptor() AbstractValidator<InternalContextAgent>.RuleFor<TProperty>(Expression<Func<InternalContextAgent, TProperty>>) AbstractValidator<InternalContextAgent>.Transform<TProperty, TTransformed>(Expression<Func<InternalContextAgent, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<InternalContextAgent>.Transform<TProperty, TTransformed>(Expression<Func<InternalContextAgent, TProperty>>, Func<InternalContextAgent, TProperty, TTransformed>) AbstractValidator<InternalContextAgent>.RuleForEach<TElement>(Expression<Func<InternalContextAgent, IEnumerable<TElement>>>) AbstractValidator<InternalContextAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<InternalContextAgent, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<InternalContextAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<InternalContextAgent, IEnumerable<TElement>>>, Func<InternalContextAgent, TElement, TTransformed>) AbstractValidator<InternalContextAgent>.RuleSet(string, Action) AbstractValidator<InternalContextAgent>.When(Func<InternalContextAgent, bool>, Action) AbstractValidator<InternalContextAgent>.When(Func<InternalContextAgent, ValidationContext<InternalContextAgent>, bool>, Action) AbstractValidator<InternalContextAgent>.Unless(Func<InternalContextAgent, bool>, Action) AbstractValidator<InternalContextAgent>.Unless(Func<InternalContextAgent, ValidationContext<InternalContextAgent>, bool>, Action) AbstractValidator<InternalContextAgent>.WhenAsync(Func<InternalContextAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<InternalContextAgent>.WhenAsync(Func<InternalContextAgent, ValidationContext<InternalContextAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<InternalContextAgent>.UnlessAsync(Func<InternalContextAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<InternalContextAgent>.UnlessAsync(Func<InternalContextAgent, ValidationContext<InternalContextAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<InternalContextAgent>.Include(IValidator<InternalContextAgent>) AbstractValidator<InternalContextAgent>.Include<TValidator>(Func<InternalContextAgent, TValidator>) AbstractValidator<InternalContextAgent>.GetEnumerator() AbstractValidator<InternalContextAgent>.EnsureInstanceNotNull(object) AbstractValidator<InternalContextAgent>.PreValidate(ValidationContext<InternalContextAgent>, ValidationResult) AbstractValidator<InternalContextAgent>.RaiseValidationException(ValidationContext<InternalContextAgent>, ValidationResult) AbstractValidator<InternalContextAgent>.OnRuleAdded(IValidationRule<InternalContextAgent>) AbstractValidator<InternalContextAgent>.CascadeMode AbstractValidator<InternalContextAgent>.ClassLevelCascadeMode AbstractValidator<InternalContextAgent>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors InternalContextAgentValidator() Configures the validation rules for the InternalContextAgent model. public InternalContextAgentValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.KnowledgeManagementAgentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.KnowledgeManagementAgentValidator.html",
    "title": "Class KnowledgeManagementAgentValidator | FoundationaLLM",
    "keywords": "Class KnowledgeManagementAgentValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the KnowledgeManagementAgent model. public class KnowledgeManagementAgentValidator : AbstractValidator<KnowledgeManagementAgent>, IValidator<KnowledgeManagementAgent>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<KnowledgeManagementAgent> KnowledgeManagementAgentValidator Implements IValidator<KnowledgeManagementAgent> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<KnowledgeManagementAgent>.Validate(KnowledgeManagementAgent) AbstractValidator<KnowledgeManagementAgent>.ValidateAsync(KnowledgeManagementAgent, CancellationToken) AbstractValidator<KnowledgeManagementAgent>.Validate(ValidationContext<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.ValidateAsync(ValidationContext<KnowledgeManagementAgent>, CancellationToken) AbstractValidator<KnowledgeManagementAgent>.CreateDescriptor() AbstractValidator<KnowledgeManagementAgent>.RuleFor<TProperty>(Expression<Func<KnowledgeManagementAgent, TProperty>>) AbstractValidator<KnowledgeManagementAgent>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeManagementAgent, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeManagementAgent, TProperty>>, Func<KnowledgeManagementAgent, TProperty, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.RuleForEach<TElement>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>) AbstractValidator<KnowledgeManagementAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>, Func<KnowledgeManagementAgent, TElement, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.RuleSet(string, Action) AbstractValidator<KnowledgeManagementAgent>.When(Func<KnowledgeManagementAgent, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.When(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.Unless(Func<KnowledgeManagementAgent, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.Unless(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.WhenAsync(Func<KnowledgeManagementAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.WhenAsync(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.UnlessAsync(Func<KnowledgeManagementAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.UnlessAsync(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.Include(IValidator<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.Include<TValidator>(Func<KnowledgeManagementAgent, TValidator>) AbstractValidator<KnowledgeManagementAgent>.GetEnumerator() AbstractValidator<KnowledgeManagementAgent>.EnsureInstanceNotNull(object) AbstractValidator<KnowledgeManagementAgent>.PreValidate(ValidationContext<KnowledgeManagementAgent>, ValidationResult) AbstractValidator<KnowledgeManagementAgent>.RaiseValidationException(ValidationContext<KnowledgeManagementAgent>, ValidationResult) AbstractValidator<KnowledgeManagementAgent>.OnRuleAdded(IValidationRule<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.CascadeMode AbstractValidator<KnowledgeManagementAgent>.ClassLevelCascadeMode AbstractValidator<KnowledgeManagementAgent>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgentValidator() Configures the validation rules for the KnowledgeManagementAgent model. public KnowledgeManagementAgentValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.html",
    "title": "Namespace FoundationaLLM.Agent.Validation.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.Validation.Metadata Classes AgentBaseValidator Validator for the AgentBase model. InternalContextAgentValidator Validator for the InternalContextAgent model. KnowledgeManagementAgentValidator Validator for the KnowledgeManagementAgent model."
  },
  "api/dotnet/FoundationaLLM.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.html",
    "title": "Namespace FoundationaLLM.Agent | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent Namespaces FoundationaLLM.Agent.Constants FoundationaLLM.Agent.Models.Resources FoundationaLLM.Agent.ResourceProviders FoundationaLLM.Agent.Validation.Metadata"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.CacheController.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.CacheController.html",
    "title": "Class CacheController | FoundationaLLM",
    "keywords": "Class CacheController Namespace FoundationaLLM.AgentFactory.API.Controllers Assembly FoundationaLLM.AgentFactory.API.dll Provides methods for managing the agents artifacts cache. [ApiController] [Route(\"[controller]\")] public class CacheController : ControllerBase Inheritance object ControllerBase CacheController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CacheController(ICacheService) Provides methods for managing the agents artifacts cache. public CacheController(ICacheService cacheService) Parameters cacheService ICacheService The ICacheService cache holding the agents artifacts. Methods Remove(string) Removes an object from the cache by its name. [HttpPost(\"item/{name}/remove\")] public IActionResult Remove(string name) Parameters name string The name of the object to be removed from the cache. Returns IActionResult RemoveCategory(string) Removes all objects belonging to a category from the cache. [HttpPost(\"category/{name}/remove\")] public IActionResult RemoveCategory(string name) Parameters name string The name of the category of objects to be removed from the cache. Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.AgentFactory.API.Controllers Assembly FoundationaLLM.AgentFactory.API.dll OrchestrationController class [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Agent Factory orchestration controller Constructors OrchestrationController(IAgentFactoryService, ILogger<OrchestrationController>) OrchestrationController class public OrchestrationController(IAgentFactoryService agentFactoryService, ILogger<OrchestrationController> logger) Parameters agentFactoryService IAgentFactoryService logger ILogger<OrchestrationController> Remarks Constructor for the Agent Factory orchestration controller Methods GetCompletion(CompletionRequest) Retrieves a completion from an orchestration service [HttpPost(\"completion\")] public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.AgentFactory.API.Controllers Assembly FoundationaLLM.AgentFactory.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Agent Factory API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Agent Factory API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.html",
    "title": "Namespace FoundationaLLM.AgentFactory.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.API.Controllers Classes CacheController Provides methods for managing the agents artifacts cache. OrchestrationController OrchestrationController class StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.AgentFactory.API Assembly FoundationaLLM.AgentFactory.API.dll Program class for the Agent Factory API public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Agent Factory API public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Warmup.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Warmup.html",
    "title": "Class Warmup | FoundationaLLM",
    "keywords": "Class Warmup Namespace FoundationaLLM.AgentFactory.API Assembly FoundationaLLM.AgentFactory.API.dll Warms up the cache containing agent-related artifacts public class Warmup : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService Warmup Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Warmup(ICacheService, IServiceScopeFactory, ILogger<Warmup>) Warms up the cache containing agent-related artifacts public Warmup(ICacheService cacheService, IServiceScopeFactory serviceScopeFactory, ILogger<Warmup> logger) Parameters cacheService ICacheService The ICacheService providing caching operations. serviceScopeFactory IServiceScopeFactory The IServiceScopeFactory used to create the scope used to instantiate hub API services. logger ILogger<Warmup> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.html",
    "title": "Namespace FoundationaLLM.AgentFactory.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.API Namespaces FoundationaLLM.AgentFactory.API.Controllers Classes Program Program class for the Agent Factory API Warmup Warms up the cache containing agent-related artifacts"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAgentFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAgentFactoryService.html",
    "title": "Interface IAgentFactoryService | FoundationaLLM",
    "keywords": "Interface IAgentFactoryService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for the Agent Factory Service public interface IAgentFactoryService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Status Status value to return when the APIs status endpoint is called. string Status { get; } Property Value string Methods GetCompletion(CompletionRequest) Retrieve a completion from the configured orchestration service. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAzureAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAzureAIDirectService.html",
    "title": "Interface IAzureAIDirectService | FoundationaLLM",
    "keywords": "Interface IAzureAIDirectService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for going directly to Azure AI for orchestration. public interface IAzureAIDirectService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.IsInitialized ILLMOrchestrationService.GetCompletion(LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAzureOpenAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAzureOpenAIDirectService.html",
    "title": "Interface IAzureOpenAIDirectService | FoundationaLLM",
    "keywords": "Interface IAzureOpenAIDirectService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for going directly to Azure OpenAI for orchestration. public interface IAzureOpenAIDirectService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.IsInitialized ILLMOrchestrationService.GetCompletion(LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Interfaces Interfaces IAgentFactoryService Interface for the Agent Factory Service IAzureAIDirectService Interface for going directly to Azure AI for orchestration. IAzureOpenAIDirectService Interface for going directly to Azure OpenAI for orchestration."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.AgentFactorySettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.AgentFactorySettings.html",
    "title": "Class AgentFactorySettings | FoundationaLLM",
    "keywords": "Class AgentFactorySettings Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll Settings for an Agent Factory. Currenlty only sets the default orchestration (Semantickernal, LangChain) public record AgentFactorySettings : IEquatable<AgentFactorySettings> Inheritance object AgentFactorySettings Implements IEquatable<AgentFactorySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultOrchestrationService The default orchenstration service (SemanticKernal, LangChain) public string? DefaultOrchestrationService { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.AzureAIDirectServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.AzureAIDirectServiceSettings.html",
    "title": "Class AzureAIDirectServiceSettings | FoundationaLLM",
    "keywords": "Class AzureAIDirectServiceSettings Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for an Azure AI direct service. public class AzureAIDirectServiceSettings : SettingsBase Inheritance object SettingsBase AzureAIDirectServiceSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions Classes AgentFactorySettings Settings for an Agent Factory. Currenlty only sets the default orchestration (Semantickernal, LangChain) AzureAIDirectServiceSettings The settings configuration options for an Azure AI direct service."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.InternalContextOrchestration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.InternalContextOrchestration.html",
    "title": "Class InternalContextOrchestration | FoundationaLLM",
    "keywords": "Class InternalContextOrchestration Namespace FoundationaLLM.AgentFactory.Core.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Knowledge Management orchestration. public class InternalContextOrchestration : OrchestrationBase Inheritance object OrchestrationBase InternalContextOrchestration Inherited Members OrchestrationBase._agentMetadata OrchestrationBase._orchestrationService OrchestrationBase._promptHubService OrchestrationBase._dataSourceHubService object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for default agent. Constructors InternalContextOrchestration(InternalContextAgent, ICallContext, ILLMOrchestrationService, IPromptHubAPIService, IDataSourceHubAPIService, ILogger<OrchestrationBase>) Knowledge Management orchestration. public InternalContextOrchestration(InternalContextAgent agent, ICallContext callContext, ILLMOrchestrationService orchestrationService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService, ILogger<OrchestrationBase> logger) Parameters agent InternalContextAgent The InternalContextAgent agent. callContext ICallContext The call context of the request being handled. orchestrationService ILLMOrchestrationService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService logger ILogger<OrchestrationBase> The logger used for logging. Remarks Constructor for default agent. Methods Configure(CompletionRequest) This will setup the agent based on its metadata. public override Task Configure(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public override Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.KnowledgeManagementOrchestration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.KnowledgeManagementOrchestration.html",
    "title": "Class KnowledgeManagementOrchestration | FoundationaLLM",
    "keywords": "Class KnowledgeManagementOrchestration Namespace FoundationaLLM.AgentFactory.Core.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Knowledge Management orchestration. public class KnowledgeManagementOrchestration : OrchestrationBase Inheritance object OrchestrationBase KnowledgeManagementOrchestration Inherited Members OrchestrationBase._agentMetadata OrchestrationBase._orchestrationService OrchestrationBase._promptHubService OrchestrationBase._dataSourceHubService object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for default agent. Constructors KnowledgeManagementOrchestration(KnowledgeManagementAgent, ICallContext, ILLMOrchestrationService, IPromptHubAPIService, IDataSourceHubAPIService, ILogger<OrchestrationBase>) Knowledge Management orchestration. public KnowledgeManagementOrchestration(KnowledgeManagementAgent agent, ICallContext callContext, ILLMOrchestrationService orchestrationService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService, ILogger<OrchestrationBase> logger) Parameters agent KnowledgeManagementAgent The KnowledgeManagementAgent agent. callContext ICallContext The call context of the request being handled. orchestrationService ILLMOrchestrationService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService logger ILogger<OrchestrationBase> The logger used for logging. Remarks Constructor for default agent. Methods Configure(CompletionRequest) This will setup the agent based on its metadata. public override Task Configure(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public override Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.OrchestrationBase.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.OrchestrationBase.html",
    "title": "Class OrchestrationBase | FoundationaLLM",
    "keywords": "Class OrchestrationBase Namespace FoundationaLLM.AgentFactory.Core.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Base class for an orchestration involving a FoundationaLLM agent. public class OrchestrationBase Inheritance object OrchestrationBase Derived InternalContextOrchestration KnowledgeManagementOrchestration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the AgentBase class. Constructors OrchestrationBase(AgentMetadata?, ILLMOrchestrationService, IPromptHubAPIService, IDataSourceHubAPIService) Base class for an orchestration involving a FoundationaLLM agent. public OrchestrationBase(AgentMetadata? agentMetadata, ILLMOrchestrationService orchestrationService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService) Parameters agentMetadata AgentMetadata orchestrationService ILLMOrchestrationService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService Remarks Constructor for the AgentBase class. Fields _agentMetadata The agent metadata. protected readonly AgentMetadata? _agentMetadata Field Value AgentMetadata _dataSourceHubService The data source hub for the agent. protected readonly IDataSourceHubAPIService _dataSourceHubService Field Value IDataSourceHubAPIService _orchestrationService The orchestration service for the agent. protected readonly ILLMOrchestrationService _orchestrationService Field Value ILLMOrchestrationService _promptHubService The prompt hub for the agent. protected readonly IPromptHubAPIService _promptHubService Field Value IPromptHubAPIService Methods Configure(CompletionRequest) This will setup the agent based on its metadata. public virtual Task Configure(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public virtual Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.OrchestrationBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.OrchestrationBuilder.html",
    "title": "Class OrchestrationBuilder | FoundationaLLM",
    "keywords": "Class OrchestrationBuilder Namespace FoundationaLLM.AgentFactory.Core.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Builds an orchestration for a FoundationaLLM agent. public class OrchestrationBuilder Inheritance object OrchestrationBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Build(CompletionRequest, ICacheService, ICallContext, IConfiguration, Dictionary<string, IResourceProviderService>, IAgentHubAPIService, IEnumerable<ILLMOrchestrationService>, IPromptHubAPIService, IDataSourceHubAPIService, ILoggerFactory) Builds the orchestration based on the user prompt, the session id, and the call context. public static Task<OrchestrationBase?> Build(CompletionRequest completionRequest, ICacheService cacheService, ICallContext callContext, IConfiguration configuration, Dictionary<string, IResourceProviderService> resourceProviderServices, IAgentHubAPIService agentHubAPIService, IEnumerable<ILLMOrchestrationService> orchestrationServices, IPromptHubAPIService promptHubAPIService, IDataSourceHubAPIService dataSourceHubAPIService, ILoggerFactory loggerFactory) Parameters completionRequest CompletionRequest The CompletionRequest containing details about the completion request. cacheService ICacheService The ICacheService used to cache agent-related artifacts. callContext ICallContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. resourceProviderServices Dictionary<string, IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. agentHubAPIService IAgentHubAPIService orchestrationServices IEnumerable<ILLMOrchestrationService> promptHubAPIService IPromptHubAPIService dataSourceHubAPIService IDataSourceHubAPIService loggerFactory ILoggerFactory The logger factory used to create new loggers. Returns Task<OrchestrationBase> Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Orchestration.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Orchestration Classes InternalContextOrchestration Knowledge Management orchestration. KnowledgeManagementOrchestration Knowledge Management orchestration. OrchestrationBase Base class for an orchestration involving a FoundationaLLM agent. OrchestrationBuilder Builds an orchestration for a FoundationaLLM agent."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AgentFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AgentFactoryService.html",
    "title": "Class AgentFactoryService | FoundationaLLM",
    "keywords": "Class AgentFactoryService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll AgentFactoryService class. public class AgentFactoryService : IAgentFactoryService Inheritance object AgentFactoryService Implements IAgentFactoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentFactoryService(IEnumerable<IResourceProviderService>, IEnumerable<ILLMOrchestrationService>, ICacheService, ICallContext, IConfiguration, IAgentHubAPIService, IPromptHubAPIService, IDataSourceHubAPIService, ILoggerFactory) Constructor for the Agent Factory Service. public AgentFactoryService(IEnumerable<IResourceProviderService> resourceProviderServices, IEnumerable<ILLMOrchestrationService> orchestrationServices, ICacheService cacheService, ICallContext callContext, IConfiguration configuration, IAgentHubAPIService agentHubService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers. orchestrationServices IEnumerable<ILLMOrchestrationService> cacheService ICacheService The ICacheService used to cache agent-related artifacts. callContext ICallContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. agentHubService IAgentHubAPIService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService loggerFactory ILoggerFactory The logger factory used to create loggers. Properties Status Returns the status of the Semantic Kernel. public string Status { get; } Property Value string Methods GetCompletion(CompletionRequest) Retrieve a completion from the configured orchestration service. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AzureAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AzureAIDirectService.html",
    "title": "Class AzureAIDirectService | FoundationaLLM",
    "keywords": "Class AzureAIDirectService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll The Azure AI direct orchestration service. public class AzureAIDirectService : IAzureAIDirectService, ILLMOrchestrationService Inheritance object AzureAIDirectService Implements IAzureAIDirectService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIDirectService(ICallContext, ILogger<AzureAIDirectService>, IConfiguration, IHttpClientFactoryService, IEnumerable<IResourceProviderService>) The Azure AI direct orchestration service. public AzureAIDirectService(ICallContext callContext, ILogger<AzureAIDirectService> logger, IConfiguration configuration, IHttpClientFactoryService httpClientFactoryService, IEnumerable<IResourceProviderService> resourceProviderServices) Parameters callContext ICallContext The ICallContext providing details about the call context. logger ILogger<AzureAIDirectService> The logger used for logging. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. Properties IsInitialized Flag indicating if the orchestration service has been initialized. public bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(LLMCompletionRequest request) Parameters request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AzureOpenAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AzureOpenAIDirectService.html",
    "title": "Class AzureOpenAIDirectService | FoundationaLLM",
    "keywords": "Class AzureOpenAIDirectService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll The Azure OpenAI direct orchestration service. public class AzureOpenAIDirectService : IAzureOpenAIDirectService, ILLMOrchestrationService Inheritance object AzureOpenAIDirectService Implements IAzureOpenAIDirectService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIDirectService(ICallContext, ILogger<AzureOpenAIDirectService>, IConfiguration, IHttpClientFactoryService, IEnumerable<IResourceProviderService>) The Azure OpenAI direct orchestration service. public AzureOpenAIDirectService(ICallContext callContext, ILogger<AzureOpenAIDirectService> logger, IConfiguration configuration, IHttpClientFactoryService httpClientFactoryService, IEnumerable<IResourceProviderService> resourceProviderServices) Parameters callContext ICallContext logger ILogger<AzureOpenAIDirectService> The logger used for logging. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. Properties IsInitialized Flag indicating if the orchestration service has been initialized. public bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(LLMCompletionRequest request) Parameters request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Services Classes AgentFactoryService AgentFactoryService class. AzureAIDirectService The Azure AI direct orchestration service. AzureOpenAIDirectService The Azure OpenAI direct orchestration service."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core Namespaces FoundationaLLM.AgentFactory.Core.Interfaces FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions FoundationaLLM.AgentFactory.Core.Orchestration FoundationaLLM.AgentFactory.Core.Services"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILLMOrchestrationService.html",
    "title": "Interface ILLMOrchestrationService | FoundationaLLM",
    "keywords": "Interface ILLMOrchestrationService Namespace FoundationaLLM.AgentFactory.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll LLM Orchestration Service interface public interface ILLMOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Flag indicating if the orchestration service has been initialized. bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMCompletionRequest) Method for retrieving a completion from the orchestration service. Task<LLMCompletionResponse> GetCompletion(LLMCompletionRequest request) Parameters request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILangChainService.html",
    "title": "Interface ILangChainService | FoundationaLLM",
    "keywords": "Interface ILangChainService Namespace FoundationaLLM.AgentFactory.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for the LangChain Orchestration Service public interface ILangChainService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.IsInitialized ILLMOrchestrationService.GetCompletion(LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "keywords": "Interface ISemanticKernelService Namespace FoundationaLLM.AgentFactory.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface to define the core methods of a Semantic Kernal Service public interface ISemanticKernelService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.IsInitialized ILLMOrchestrationService.GetCompletion(LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Interfaces Interfaces ILLMOrchestrationService LLM Orchestration Service interface ILangChainService Interface for the LangChain Orchestration Service ISemanticKernelService Interface to define the core methods of a Semantic Kernal Service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.LangChainServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.LangChainServiceSettings.html",
    "title": "Class LangChainServiceSettings | FoundationaLLM",
    "keywords": "Class LangChainServiceSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a LangChain Service public class LangChainServiceSettings : SettingsBase Inheritance object SettingsBase LangChainServiceSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a SemanticKernalService public class SemanticKernelServiceSettings : SettingsBase Inheritance object SettingsBase SemanticKernelServiceSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Classes LangChainServiceSettings The settings configuration options for a LangChain Service SemanticKernelServiceSettings The settings configuration options for a SemanticKernalService"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Services.LangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Services.LangChainService.html",
    "title": "Class LangChainService | FoundationaLLM",
    "keywords": "Class LangChainService Namespace FoundationaLLM.AgentFactory.Services Assembly FoundationaLLM.AgentFactory.Core.dll The LangChain orchestration service. public class LangChainService : ILangChainService, ILLMOrchestrationService Inheritance object LangChainService Implements ILangChainService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LangChainService(IOptions<LangChainServiceSettings>, ILogger<LangChainService>, IHttpClientFactoryService) LangChain Orchestration Service public LangChainService(IOptions<LangChainServiceSettings> options, ILogger<LangChainService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<LangChainServiceSettings> logger ILogger<LangChainService> httpClientFactoryService IHttpClientFactoryService Properties IsInitialized Flag indicating whether the orchestration service has been initialized. public bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMCompletionRequest) Executes a completion request against the orchestration service. public Task<LLMCompletionResponse> GetCompletion(LLMCompletionRequest request) Parameters request LLMCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "keywords": "Class SemanticKernelService Namespace FoundationaLLM.AgentFactory.Services Assembly FoundationaLLM.AgentFactory.Core.dll The FoundationaLLM Semantic Kernal Service public class SemanticKernelService : ISemanticKernelService, ILLMOrchestrationService Inheritance object SemanticKernelService Implements ISemanticKernelService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Semantic Kernal Service Constructors SemanticKernelService(IOptions<SemanticKernelServiceSettings>, ILogger<SemanticKernelService>, IHttpClientFactoryService) The FoundationaLLM Semantic Kernal Service public SemanticKernelService(IOptions<SemanticKernelServiceSettings> options, ILogger<SemanticKernelService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<SemanticKernelServiceSettings> logger ILogger<SemanticKernelService> httpClientFactoryService IHttpClientFactoryService Remarks Constructor for the Semantic Kernal Service Properties IsInitialized Checks the Semantic Service returns a call to signal it is initialized and ready for requests. public bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMCompletionRequest) Gets a completion from the Semantic Kernel service. public Task<LLMCompletionResponse> GetCompletion(LLMCompletionRequest request) Parameters request LLMCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Services.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Services.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Services Classes LangChainService The LangChain orchestration service. SemanticKernelService The FoundationaLLM Semantic Kernal Service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.html",
    "title": "Namespace FoundationaLLM.AgentFactory | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory Namespaces FoundationaLLM.AgentFactory.API FoundationaLLM.AgentFactory.Core FoundationaLLM.AgentFactory.Interfaces FoundationaLLM.AgentFactory.Models.ConfigurationOptions FoundationaLLM.AgentFactory.Services"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Authorization.API.Controllers Assembly AuthorizationAPI.dll Provides methods for checking the status of the service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"status\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Authorization.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.API.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Authorization.Constants.AuthorizableActionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Constants.AuthorizableActionNames.html",
    "title": "Class AuthorizableActionNames | FoundationaLLM",
    "keywords": "Class AuthorizableActionNames Namespace FoundationaLLM.Authorization.Constants Assembly FoundationaLLM.Authorization.dll Provides the names of the authorizable actions managed by the FoundationaLLM.Authorization provider. public static class AuthorizableActionNames Inheritance object AuthorizableActionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Agent_Agents_Delete Delete agents. public const string FoundationaLLM_Agent_Agents_Delete = \"FoundationaLLM.Agent/agents/delete\" Field Value string FoundationaLLM_Agent_Agents_Read Read agents. public const string FoundationaLLM_Agent_Agents_Read = \"FoundationaLLM.Agent/agents/read\" Field Value string FoundationaLLM_Agent_Agents_Write Create or update agents. public const string FoundationaLLM_Agent_Agents_Write = \"FoundationaLLM.Agent/agents/write\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Delete Delete role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Delete = \"FoundationaLLM.Authorization/roleAssignments/delete\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Read Read role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Read = \"FoundationaLLM.Authorization/roleAssignments/read\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Write Create or update role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Write = \"FoundationaLLM.Authorization/roleAssignments/write\" Field Value string FoundationaLLM_Completion_ChatSessions_Delete Delete chat sessions. public const string FoundationaLLM_Completion_ChatSessions_Delete = \"FoundationaLLM.Completion/chatSessions/delete\" Field Value string FoundationaLLM_Completion_ChatSessions_Read Read chat sessions. public const string FoundationaLLM_Completion_ChatSessions_Read = \"FoundationaLLM.Completion/chatSessions/read\" Field Value string FoundationaLLM_Completion_ChatSessions_Write Create or update chat sessions. public const string FoundationaLLM_Completion_ChatSessions_Write = \"FoundationaLLM.Completion/chatSessions/write\" Field Value string FoundationaLLM_Completion_DirectCompletions_Delete Delete direct completions. public const string FoundationaLLM_Completion_DirectCompletions_Delete = \"FoundationaLLM.Completion/directCompletions/delete\" Field Value string FoundationaLLM_Completion_DirectCompletions_Read Read direct completions. public const string FoundationaLLM_Completion_DirectCompletions_Read = \"FoundationaLLM.Completion/directCompletions/read\" Field Value string FoundationaLLM_Completion_DirectCompletions_Write Create or update direct completions. public const string FoundationaLLM_Completion_DirectCompletions_Write = \"FoundationaLLM.Completion/directCompletions/write\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Delete Delete app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Delete = \"FoundationaLLM.Configuration/appConfigurations/delete\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Read Read app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Read = \"FoundationaLLM.Configuration/appConfigurations/read\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Write Create or update app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Write = \"FoundationaLLM.Configuration/appConfigurations/write\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Delete Delete key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Delete = \"FoundationaLLM.Configuration/keyVaultSecrets/delete\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Read Read key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Read = \"FoundationaLLM.Configuration/keyVaultSecrets/read\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Write Create or update key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Write = \"FoundationaLLM.Configuration/keyVaultSecrets/write\" Field Value string FoundationaLLM_DataSource_DataSources_Delete Delete data sources. public const string FoundationaLLM_DataSource_DataSources_Delete = \"FoundationaLLM.DataSource/dataSources/delete\" Field Value string FoundationaLLM_DataSource_DataSources_Read Read data sources. public const string FoundationaLLM_DataSource_DataSources_Read = \"FoundationaLLM.DataSource/dataSources/read\" Field Value string FoundationaLLM_DataSource_DataSources_Write Create or update data sources. public const string FoundationaLLM_DataSource_DataSources_Write = \"FoundationaLLM.DataSource/dataSources/write\" Field Value string FoundationaLLM_Prompt_Prompts_Delete Delete prompts. public const string FoundationaLLM_Prompt_Prompts_Delete = \"FoundationaLLM.Prompt/prompts/delete\" Field Value string FoundationaLLM_Prompt_Prompts_Read Read prompts. public const string FoundationaLLM_Prompt_Prompts_Read = \"FoundationaLLM.Prompt/prompts/read\" Field Value string FoundationaLLM_Prompt_Prompts_Write Create or update prompts. public const string FoundationaLLM_Prompt_Prompts_Write = \"FoundationaLLM.Prompt/prompts/write\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Delete Delete vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Delete = \"FoundationaLLM.Vectorization/contentSourceProfiles/delete\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Read Read vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Read = \"FoundationaLLM.Vectorization/contentSourceProfiles/read\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Write Create or update vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Write = \"FoundationaLLM.Vectorization/contentSourceProfiles/write\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Delete Delete vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Delete = \"FoundationaLLM.Vectorization/indexingProfiles/delete\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Read Read vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Read = \"FoundationaLLM.Vectorization/indexingProfiles/read\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Write Create or update vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Write = \"FoundationaLLM.Vectorization/indexingProfiles/write\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Delete Delete vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Delete = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/delete\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Read Read vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Read = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/read\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Write Create or update vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Write = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/write\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Delete Delete vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Delete = \"FoundationaLLM.Vectorization/textPartitioningProfiles/delete\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Read Read vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Read = \"FoundationaLLM.Vectorization/textPartitioningProfiles/read\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Write Create or update vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Write = \"FoundationaLLM.Vectorization/textPartitioningProfiles/write\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Delete Delete vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Delete = \"FoundationaLLM.Vectorization/vectorizationRequests/delete\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Read Read vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Read = \"FoundationaLLM.Vectorization/vectorizationRequests/read\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Write Create or update vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Write = \"FoundationaLLM.Vectorization/vectorizationRequests/write\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Authorization.Constants.AuthorizationResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Constants.AuthorizationResourceProviderActions.html",
    "title": "Class AuthorizationResourceProviderActions | FoundationaLLM",
    "keywords": "Class AuthorizationResourceProviderActions Namespace FoundationaLLM.Authorization.Constants Assembly FoundationaLLM.Authorization.dll The names of the actions implemented by the Authorization resource provider. public static class AuthorizationResourceProviderActions Inheritance object AuthorizationResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Constants.AuthorizationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Constants.AuthorizationResourceTypeNames.html",
    "title": "Class AuthorizationResourceTypeNames | FoundationaLLM",
    "keywords": "Class AuthorizationResourceTypeNames Namespace FoundationaLLM.Authorization.Constants Assembly FoundationaLLM.Authorization.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Authorization resource provider. public static class AuthorizationResourceTypeNames Inheritance object AuthorizationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RoleAssignments Action authorization requests. public const string RoleAssignments = \"roleAssignments\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Authorization.Constants.PrincipalTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Constants.PrincipalTypes.html",
    "title": "Class PrincipalTypes | FoundationaLLM",
    "keywords": "Class PrincipalTypes Namespace FoundationaLLM.Authorization.Constants Assembly FoundationaLLM.Authorization.dll The types of security principals. public static class PrincipalTypes Inheritance object PrincipalTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Group The group security principal type. public const string Group = \"Group\" Field Value string ServicePrincipal The service principal security principal type. public const string ServicePrincipal = \"ServicePrincipal\" Field Value string User The user security principal type. public const string User = \"User\" Field Value string Methods IsValidPrincipalType(string) Determines if the specified principal type is valid. public static bool IsValidPrincipalType(string principalType) Parameters principalType string The name of the principal type to validate. Returns bool True if the specified principal type is valid."
  },
  "api/dotnet/FoundationaLLM.Authorization.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Constants.html",
    "title": "Namespace FoundationaLLM.Authorization.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Constants Classes AuthorizableActionNames Provides the names of the authorizable actions managed by the FoundationaLLM.Authorization provider. AuthorizationResourceProviderActions The names of the actions implemented by the Authorization resource provider. AuthorizationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Authorization resource provider. PrincipalTypes The types of security principals."
  },
  "api/dotnet/FoundationaLLM.Authorization.Interfaces.IAuthorizationCore.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Interfaces.IAuthorizationCore.html",
    "title": "Interface IAuthorizationCore | FoundationaLLM",
    "keywords": "Interface IAuthorizationCore Namespace FoundationaLLM.Authorization.Interfaces Assembly FoundationaLLM.Authorization.dll Defines the methods for authorization core. public interface IAuthorizationCore Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessAuthorizationRequest(ActionAuthorizationRequest) Processes an authorization request. ActionAuthorizationResult ProcessAuthorizationRequest(ActionAuthorizationRequest authorizationRequest) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest containing the details of the authorization request. Returns ActionAuthorizationResult An ActionAuthorizationResult indicating whether the requested authorization was successfull or not."
  },
  "api/dotnet/FoundationaLLM.Authorization.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Interfaces.html",
    "title": "Namespace FoundationaLLM.Authorization.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Interfaces Interfaces IAuthorizationCore Defines the methods for authorization core."
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.AuthorizableAction.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.AuthorizableAction.html",
    "title": "Class AuthorizableAction | FoundationaLLM",
    "keywords": "Class AuthorizableAction Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. public record AuthorizableAction : IEquatable<AuthorizableAction> Inheritance object AuthorizableAction Implements IEquatable<AuthorizableAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizableAction(string, string, string) Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. public AuthorizableAction(string Name, string Description, string Category) Parameters Name string The name of the authorizable action. Description string The description of the authorizable action. Category string The category of the authorizable action. Properties Category The category of the authorizable action. public string Category { get; init; } Property Value string Description The description of the authorizable action. public string Description { get; init; } Property Value string Name The name of the authorizable action. public string Name { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.AuthorizableActions.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.AuthorizableActions.html",
    "title": "Class AuthorizableActions | FoundationaLLM",
    "keywords": "Class AuthorizableActions Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Defines all authorizable actions managed by the FoundationaLLM.Authorization resource provider. public static class AuthorizableActions Inheritance object AuthorizableActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Actions public static readonly ReadOnlyDictionary<string, AuthorizableAction> Actions Field Value ReadOnlyDictionary<string, AuthorizableAction> Methods GetMatchingActions(string) Selects all actions whose names match the specified action pattern. public static List<string> GetMatchingActions(string actionPattern) Parameters actionPattern string The action pattern used for selection. Returns List<string> The list of matching action names."
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationCoreSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationCoreSettings.html",
    "title": "Class AuthorizationCoreSettings | FoundationaLLM",
    "keywords": "Class AuthorizationCoreSettings Namespace FoundationaLLM.Authorization.Models.Configuration Assembly FoundationaLLM.Authorization.dll Configuration settings for the authorization core. public class AuthorizationCoreSettings Inheritance object AuthorizationCoreSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceIds The list of instance identifiers of the FoundationaLLM instances that are managed by the authorization core. public List<string> InstanceIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationServiceSettings.html",
    "title": "Class AuthorizationServiceSettings | FoundationaLLM",
    "keywords": "Class AuthorizationServiceSettings Namespace FoundationaLLM.Authorization.Models.Configuration Assembly FoundationaLLM.Authorization.dll public record AuthorizationServiceSettings : IEquatable<AuthorizationServiceSettings> Inheritance object AuthorizationServiceSettings Implements IEquatable<AuthorizationServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIScope public required string APIScope { get; set; } Property Value string APIUrl public required string APIUrl { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Authorization.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Models.Configuration Classes AuthorizationCoreSettings Configuration settings for the authorization core. AuthorizationServiceSettings"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.RoleAssignment.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.RoleAssignment.html",
    "title": "Class RoleAssignment | FoundationaLLM",
    "keywords": "Class RoleAssignment Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Represents a security role assignment. public class RoleAssignment : ResourceBase Inheritance object ResourceName ResourceBase RoleAssignment Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedActions The explicit list of all allowed actions resulting from expanding all wildcards. [JsonIgnore] public HashSet<string> AllowedActions { get; set; } Property Value HashSet<string> PrincipalId The unique identifier of the security principal to which the role is assigned. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string PrincipalType The type of the security principal to which the role is assigned. Can be User, Group, or ServicePrincipal. [JsonPropertyName(\"principal_type\")] public required string PrincipalType { get; set; } Property Value string RoleDefinition The RoleDefinition referenced by the RoleDefinitionId property. [JsonIgnore] public RoleDefinition? RoleDefinition { get; set; } Property Value RoleDefinition RoleDefinitionId The unique identifier of the role definition. [JsonPropertyName(\"role_definition_id\")] public required string RoleDefinitionId { get; set; } Property Value string Scope The scope at which the role is assigned. [JsonPropertyName(\"scope\")] public required string Scope { get; set; } Property Value string ScopeResourcePath The ResourcePath resulting from parsing the scope path. [JsonIgnore] public ResourcePath? ScopeResourcePath { get; set; } Property Value ResourcePath Methods Enrich(List<string>) public void Enrich(List<string> allowedInstanceIds) Parameters allowedInstanceIds List<string>"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.RoleAssignmentStore.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.RoleAssignmentStore.html",
    "title": "Class RoleAssignmentStore | FoundationaLLM",
    "keywords": "Class RoleAssignmentStore Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Models the content of the role assignments store managed by the FoundationaLLM.Authorization resource provider. public class RoleAssignmentStore Inheritance object RoleAssignmentStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The unique identifier of the FoundationaLLM instance. [JsonPropertyName(\"instance_id\")] public required string InstanceId { get; set; } Property Value string RoleAssignments The list of all role assignments in the FoundationaLLM instance. [JsonPropertyName(\"role_assignments\")] public required List<RoleAssignment> RoleAssignments { get; set; } Property Value List<RoleAssignment> Methods EnrichRoleAssignments() Loads calculated properties for all role assignments. public void EnrichRoleAssignments()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.RoleDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.RoleDefinition.html",
    "title": "Class RoleDefinition | FoundationaLLM",
    "keywords": "Class RoleDefinition Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Contains information about a security role definition. public class RoleDefinition : ResourceBase Inheritance object ResourceName ResourceBase RoleDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssignableScopes The list of scopes at which the role can be assigned. [JsonPropertyName(\"assignable_scopes\")] [JsonPropertyOrder(1)] public List<string> AssignableScopes { get; set; } Property Value List<string> Deleted Indicates whether the resource has been logically deleted. [JsonIgnore] public override bool Deleted { get; set; } Property Value bool Permissions The permissions associated with the security role definition. [JsonPropertyName(\"permissions\")] [JsonPropertyOrder(2)] public List<RoleDefinitionPermissions> Permissions { get; set; } Property Value List<RoleDefinitionPermissions> Methods GetAllowedActions() public List<string> GetAllowedActions() Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.RoleDefinitionPermissions.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.RoleDefinitionPermissions.html",
    "title": "Class RoleDefinitionPermissions | FoundationaLLM",
    "keywords": "Class RoleDefinitionPermissions Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Manages the permissions associated with a security role definition. public class RoleDefinitionPermissions Inheritance object RoleDefinitionPermissions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions Allowed control plane actions. [JsonPropertyName(\"actions\")] [JsonPropertyOrder(1)] public List<string> Actions { get; set; } Property Value List<string> DataActions Allowed data plane actions. [JsonPropertyName(\"data_actions\")] [JsonPropertyOrder(3)] public List<string> DataActions { get; set; } Property Value List<string> NotActions Denied control plane actions. [JsonPropertyName(\"not_actions\")] [JsonPropertyOrder(2)] public List<string> NotActions { get; set; } Property Value List<string> NotDataActions Denied data plane actions. [JsonPropertyName(\"not_data_actions\")] [JsonPropertyOrder(4)] public List<string> NotDataActions { get; set; } Property Value List<string> Methods GetAllowedActions() public List<string> GetAllowedActions() Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.RoleDefinitions.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.RoleDefinitions.html",
    "title": "Class RoleDefinitions | FoundationaLLM",
    "keywords": "Class RoleDefinitions Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll public static class RoleDefinitions Inheritance object RoleDefinitions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All public static readonly ReadOnlyDictionary<string, RoleDefinition> All Field Value ReadOnlyDictionary<string, RoleDefinition>"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.html",
    "title": "Namespace FoundationaLLM.Authorization.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Models Namespaces FoundationaLLM.Authorization.Models.Configuration Classes AuthorizableAction Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. AuthorizableActions Defines all authorizable actions managed by the FoundationaLLM.Authorization resource provider. RoleAssignment Represents a security role assignment. RoleAssignmentStore Models the content of the role assignments store managed by the FoundationaLLM.Authorization resource provider. RoleDefinition Contains information about a security role definition. RoleDefinitionPermissions Manages the permissions associated with a security role definition. RoleDefinitions"
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderMetadata.html",
    "title": "Class AuthorizationResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AuthorizationResourceProviderMetadata Namespace FoundationaLLM.Authorization.ResourceProviders Assembly FoundationaLLM.Authorization.dll Provides metadata for the FoundationaLLM.Authorization resource provider. public class AuthorizationResourceProviderMetadata Inheritance object AuthorizationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderService.html",
    "title": "Class AuthorizationResourceProviderService | FoundationaLLM",
    "keywords": "Class AuthorizationResourceProviderService Namespace FoundationaLLM.Authorization.ResourceProviders Assembly FoundationaLLM.Authorization.dll Implements the FoundationaLLM.Authorization resource provider. public class AuthorizationResourceProviderService : ResourceProviderServiceBase, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase AuthorizationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase._authorizationService ResourceProviderServiceBase._storageService ResourceProviderServiceBase._eventService ResourceProviderServiceBase._resourceValidatorFactory ResourceProviderServiceBase._logger ResourceProviderServiceBase._instanceSettings ResourceProviderServiceBase._storageContainerName ResourceProviderServiceBase._serializerSettings ResourceProviderServiceBase.Name ResourceProviderServiceBase.IsInitialized ResourceProviderServiceBase.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.GetResourcesAsyncInternal(ResourcePath) ResourceProviderServiceBase.UpsertResourceAsync(ResourcePath, string) ResourceProviderServiceBase.ExecuteActionAsync(ResourcePath, string) ResourceProviderServiceBase.DeleteResourceAsync(ResourcePath) ResourceProviderServiceBase.GetResource<T>(string) ResourceProviderServiceBase.UpsertResourceAsync<T>(string, T) ResourceProviderServiceBase.GetResourceInternal<T>(ResourcePath) ResourceProviderServiceBase.UpsertResourceAsync<T>(ResourcePath, T) ResourceProviderServiceBase.HandleEvents(EventSetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IResourceValidatorFactory, ILoggerFactory) Implements the FoundationaLLM.Authorization resource provider. public AuthorizationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IResourceValidatorFactory resourceValidatorFactory, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Authorization.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.ResourceProviders Classes AuthorizationResourceProviderMetadata Provides metadata for the FoundationaLLM.Authorization resource provider. AuthorizationResourceProviderService Implements the FoundationaLLM.Authorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationCore.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationCore.html",
    "title": "Class AuthorizationCore | FoundationaLLM",
    "keywords": "Class AuthorizationCore Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll Implements the core authorization engine. public class AuthorizationCore : IAuthorizationCore Inheritance object AuthorizationCore Implements IAuthorizationCore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationCore(IOptions<AuthorizationCoreSettings>, IStorageService, IResourceValidatorFactory, ILogger<AuthorizationCore>) Creates a new instance of the AuthorizationCore class. public AuthorizationCore(IOptions<AuthorizationCoreSettings> options, IStorageService storageService, IResourceValidatorFactory resourceValidatorFactory, ILogger<AuthorizationCore> logger) Parameters options IOptions<AuthorizationCoreSettings> storageService IStorageService The IStorageService providing storage services. resourceValidatorFactory IResourceValidatorFactory The resource validator factory used to create resource validators. logger ILogger<AuthorizationCore> The logger used for logging. Methods ProcessAuthorizationRequest(ActionAuthorizationRequest) Processes an authorization request. public ActionAuthorizationResult ProcessAuthorizationRequest(ActionAuthorizationRequest authorizationRequest) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest containing the details of the authorization request. Returns ActionAuthorizationResult An ActionAuthorizationResult indicating whether the requested authorization was successfull or not."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationService.html",
    "title": "Class AuthorizationService | FoundationaLLM",
    "keywords": "Class AuthorizationService Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll Provides methods for interacting with the Authorization API. public class AuthorizationService : IAuthorizationService Inheritance object AuthorizationService Implements IAuthorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationService(IHttpClientFactory, IOptions<AuthorizationServiceSettings>, ILogger<AuthorizationService>) public AuthorizationService(IHttpClientFactory httpClientFactory, IOptions<AuthorizationServiceSettings> options, ILogger<AuthorizationService> logger) Parameters httpClientFactory IHttpClientFactory options IOptions<AuthorizationServiceSettings> logger ILogger<AuthorizationService> Methods ProcessAuthorizationRequest(ActionAuthorizationRequest) Processes an action authorization request. public Task<ActionAuthorizationResult> ProcessAuthorizationRequest(ActionAuthorizationRequest authorizationRequest) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest to process. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.RoleAssignmentCache.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.RoleAssignmentCache.html",
    "title": "Class RoleAssignmentCache | FoundationaLLM",
    "keywords": "Class RoleAssignmentCache Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll In-memory cache for role assignments. public class RoleAssignmentCache Inheritance object RoleAssignmentCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentCache(RoleAssignmentStore) Creates a new instance of the RoleAssignmentCache class. public RoleAssignmentCache(RoleAssignmentStore roleAssignmentStore) Parameters roleAssignmentStore RoleAssignmentStore The role assignment store containing the role assignments used to initialize the cache. Methods AddOrUpdateRoleAssignment(RoleAssignment) Adds or updates a role assignment in the cache. public void AddOrUpdateRoleAssignment(RoleAssignment roleAssignment) Parameters roleAssignment RoleAssignment The RoleAssignment to add or update in the cache. GetRoleAssignments(string) Gets all role assignments for a principal. public List<RoleAssignment> GetRoleAssignments(string principalId) Parameters principalId string The unique identifier of the principal for which role assignments are retrieved. Returns List<RoleAssignment> RemoveRoleAssignment(string) Removes a role assignment from the cache. public void RemoveRoleAssignment(string roleAssignmentId) Parameters roleAssignmentId string The unique identifier of the role assigment to be removed."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.html",
    "title": "Namespace FoundationaLLM.Authorization.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Services Classes AuthorizationCore Implements the core authorization engine. AuthorizationService Provides methods for interacting with the Authorization API. RoleAssignmentCache In-memory cache for role assignments."
  },
  "api/dotnet/FoundationaLLM.Authorization.Utils.ResourcePathUtils.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Utils.ResourcePathUtils.html",
    "title": "Class ResourcePathUtils | FoundationaLLM",
    "keywords": "Class ResourcePathUtils Namespace FoundationaLLM.Authorization.Utils Assembly FoundationaLLM.Authorization.dll Utilities dedicated to the ResourcePath class. public static class ResourcePathUtils Inheritance object ResourcePathUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseForAuthorizationRequestResourcePath(string, List<string>) Parses a resource path from an ActionAuthorizationRequest object. public static ResourcePath ParseForAuthorizationRequestResourcePath(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string The resource path to be analyzed. allowedInstanceIds List<string> The list of allowed FoundationaLLM instance identifiers. Returns ResourcePath A ResourcePath instance. Exceptions AuthorizationException Thrown if the resource path is invalid. ParseForRoleAssignmentScope(string, List<string>) public static ResourcePath ParseForRoleAssignmentScope(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string allowedInstanceIds List<string> Returns ResourcePath"
  },
  "api/dotnet/FoundationaLLM.Authorization.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Utils.html",
    "title": "Namespace FoundationaLLM.Authorization.Utils | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Utils Classes ResourcePathUtils Utilities dedicated to the ResourcePath class."
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.ActionAuthorizationRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.ActionAuthorizationRequestValidator.html",
    "title": "Class ActionAuthorizationRequestValidator | FoundationaLLM",
    "keywords": "Class ActionAuthorizationRequestValidator Namespace FoundationaLLM.Authorization.Validation Assembly FoundationaLLM.Authorization.dll Validator for the ActionAuthorizationRequest model. public class ActionAuthorizationRequestValidator : AbstractValidator<ActionAuthorizationRequest>, IValidator<ActionAuthorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ActionAuthorizationRequest> ActionAuthorizationRequestValidator Implements IValidator<ActionAuthorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ActionAuthorizationRequest>.Validate(ActionAuthorizationRequest) AbstractValidator<ActionAuthorizationRequest>.ValidateAsync(ActionAuthorizationRequest, CancellationToken) AbstractValidator<ActionAuthorizationRequest>.Validate(ValidationContext<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.ValidateAsync(ValidationContext<ActionAuthorizationRequest>, CancellationToken) AbstractValidator<ActionAuthorizationRequest>.CreateDescriptor() AbstractValidator<ActionAuthorizationRequest>.RuleFor<TProperty>(Expression<Func<ActionAuthorizationRequest, TProperty>>) AbstractValidator<ActionAuthorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<ActionAuthorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<ActionAuthorizationRequest, TProperty>>, Func<ActionAuthorizationRequest, TProperty, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.RuleForEach<TElement>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>) AbstractValidator<ActionAuthorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>, Func<ActionAuthorizationRequest, TElement, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.RuleSet(string, Action) AbstractValidator<ActionAuthorizationRequest>.When(Func<ActionAuthorizationRequest, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.When(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.Unless(Func<ActionAuthorizationRequest, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.Unless(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.WhenAsync(Func<ActionAuthorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.WhenAsync(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.UnlessAsync(Func<ActionAuthorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.UnlessAsync(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.Include(IValidator<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.Include<TValidator>(Func<ActionAuthorizationRequest, TValidator>) AbstractValidator<ActionAuthorizationRequest>.GetEnumerator() AbstractValidator<ActionAuthorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<ActionAuthorizationRequest>.PreValidate(ValidationContext<ActionAuthorizationRequest>, ValidationResult) AbstractValidator<ActionAuthorizationRequest>.RaiseValidationException(ValidationContext<ActionAuthorizationRequest>, ValidationResult) AbstractValidator<ActionAuthorizationRequest>.OnRuleAdded(IValidationRule<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.CascadeMode AbstractValidator<ActionAuthorizationRequest>.ClassLevelCascadeMode AbstractValidator<ActionAuthorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ActionAuthorizationRequestValidator() Configures the validation rules for the ActionAuthorizationRequest model. public ActionAuthorizationRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.RoleAssignmentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.RoleAssignmentValidator.html",
    "title": "Class RoleAssignmentValidator | FoundationaLLM",
    "keywords": "Class RoleAssignmentValidator Namespace FoundationaLLM.Authorization.Validation Assembly FoundationaLLM.Authorization.dll Validator for the RoleAssignment model. public class RoleAssignmentValidator : AbstractValidator<RoleAssignment>, IValidator<RoleAssignment>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RoleAssignment> RoleAssignmentValidator Implements IValidator<RoleAssignment> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RoleAssignment>.Validate(RoleAssignment) AbstractValidator<RoleAssignment>.ValidateAsync(RoleAssignment, CancellationToken) AbstractValidator<RoleAssignment>.Validate(ValidationContext<RoleAssignment>) AbstractValidator<RoleAssignment>.ValidateAsync(ValidationContext<RoleAssignment>, CancellationToken) AbstractValidator<RoleAssignment>.CreateDescriptor() AbstractValidator<RoleAssignment>.RuleFor<TProperty>(Expression<Func<RoleAssignment, TProperty>>) AbstractValidator<RoleAssignment>.Transform<TProperty, TTransformed>(Expression<Func<RoleAssignment, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RoleAssignment>.Transform<TProperty, TTransformed>(Expression<Func<RoleAssignment, TProperty>>, Func<RoleAssignment, TProperty, TTransformed>) AbstractValidator<RoleAssignment>.RuleForEach<TElement>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>) AbstractValidator<RoleAssignment>.TransformForEach<TElement, TTransformed>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RoleAssignment>.TransformForEach<TElement, TTransformed>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>, Func<RoleAssignment, TElement, TTransformed>) AbstractValidator<RoleAssignment>.RuleSet(string, Action) AbstractValidator<RoleAssignment>.When(Func<RoleAssignment, bool>, Action) AbstractValidator<RoleAssignment>.When(Func<RoleAssignment, ValidationContext<RoleAssignment>, bool>, Action) AbstractValidator<RoleAssignment>.Unless(Func<RoleAssignment, bool>, Action) AbstractValidator<RoleAssignment>.Unless(Func<RoleAssignment, ValidationContext<RoleAssignment>, bool>, Action) AbstractValidator<RoleAssignment>.WhenAsync(Func<RoleAssignment, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.WhenAsync(Func<RoleAssignment, ValidationContext<RoleAssignment>, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.UnlessAsync(Func<RoleAssignment, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.UnlessAsync(Func<RoleAssignment, ValidationContext<RoleAssignment>, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.Include(IValidator<RoleAssignment>) AbstractValidator<RoleAssignment>.Include<TValidator>(Func<RoleAssignment, TValidator>) AbstractValidator<RoleAssignment>.GetEnumerator() AbstractValidator<RoleAssignment>.EnsureInstanceNotNull(object) AbstractValidator<RoleAssignment>.PreValidate(ValidationContext<RoleAssignment>, ValidationResult) AbstractValidator<RoleAssignment>.RaiseValidationException(ValidationContext<RoleAssignment>, ValidationResult) AbstractValidator<RoleAssignment>.OnRuleAdded(IValidationRule<RoleAssignment>) AbstractValidator<RoleAssignment>.CascadeMode AbstractValidator<RoleAssignment>.ClassLevelCascadeMode AbstractValidator<RoleAssignment>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentValidator() Configured the validation rules for the RoleAssignment model. public RoleAssignmentValidator()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.html",
    "title": "Namespace FoundationaLLM.Authorization.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Validation Classes ActionAuthorizationRequestValidator Validator for the ActionAuthorizationRequest model. RoleAssignmentValidator Validator for the RoleAssignment model."
  },
  "api/dotnet/FoundationaLLM.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.html",
    "title": "Namespace FoundationaLLM.Authorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization Namespaces FoundationaLLM.Authorization.API.Controllers FoundationaLLM.Authorization.Constants FoundationaLLM.Authorization.Interfaces FoundationaLLM.Authorization.Models FoundationaLLM.Authorization.ResourceProviders FoundationaLLM.Authorization.Services FoundationaLLM.Authorization.Utils FoundationaLLM.Authorization.Validation"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html",
    "title": "Class APIKeyAuthenticationAttribute | FoundationaLLM",
    "keywords": "Class APIKeyAuthenticationAttribute Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Service filter attribute for X-API-Key header validation. public class APIKeyAuthenticationAttribute : ServiceFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Inheritance object Attribute ServiceFilterAttribute APIKeyAuthenticationAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members ServiceFilterAttribute.CreateInstance(IServiceProvider) ServiceFilterAttribute.Order ServiceFilterAttribute.ServiceType ServiceFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIKeyAuthenticationAttribute() Initializes a new instance of the APIKeyAuthenticationAttribute class. public APIKeyAuthenticationAttribute()"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html",
    "title": "Class APIKeyAuthenticationFilter | FoundationaLLM",
    "keywords": "Class APIKeyAuthenticationFilter Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Auth filter for X-API-Key header validation. public class APIKeyAuthenticationFilter : IAuthorizationFilter, IFilterMetadata Inheritance object APIKeyAuthenticationFilter Implements IAuthorizationFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Constructors APIKeyAuthenticationFilter(IAPIKeyValidationService) Auth filter for X-API-Key header validation. public APIKeyAuthenticationFilter(IAPIKeyValidationService apiKeyValidation) Parameters apiKeyValidation IAPIKeyValidationService Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Methods OnAuthorization(AuthorizationFilterContext) Override for default OnAuthorization step to set UnauthorizedObjectResult on the context if the required header is missing or invalid. public void OnAuthorization(AuthorizationFilterContext context) Parameters context AuthorizationFilterContext The context containing the HTTP request headers."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html",
    "title": "Class APIKeyValidationService | FoundationaLLM",
    "keywords": "Class APIKeyValidationService Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Implements the IAPIKeyValidationService interface. public class APIKeyValidationService : IAPIKeyValidationService Inheritance object APIKeyValidationService Implements IAPIKeyValidationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the APIKeyValidationService class. Constructors APIKeyValidationService(IOptions<APIKeyValidationSettings>) Implements the IAPIKeyValidationService interface. public APIKeyValidationService(IOptions<APIKeyValidationSettings> options) Parameters options IOptions<APIKeyValidationSettings> otions for the deployed API key validation service. Remarks Creates a new instance of the APIKeyValidationService class. Methods IsValid(string) Checks if an API key is valid or not. public bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean value representing the validity of the API key."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html",
    "title": "Class APIKeyValidationSettings | FoundationaLLM",
    "keywords": "Class APIKeyValidationSettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Represents settings for API key validation. public record APIKeyValidationSettings : IEquatable<APIKeyValidationSettings> Inheritance object APIKeyValidationSettings Implements IEquatable<APIKeyValidationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key. public required string APIKey { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.DefaultAuthentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.DefaultAuthentication.html",
    "title": "Class DefaultAuthentication | FoundationaLLM",
    "keywords": "Class DefaultAuthentication Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Provides the default credentials for authentication. public static class DefaultAuthentication Inheritance object DefaultAuthentication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Production Indicates whether the environment we run in is production or not. public static bool Production { get; set; } Property Value bool Methods GetAzureCredential() The default Azure credential to use for authentication. public static TokenCredential GetAzureCredential() Returns TokenCredential"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPIKeySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPIKeySettings.html",
    "title": "Class DownstreamAPIKeySettings | FoundationaLLM",
    "keywords": "Class DownstreamAPIKeySettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Represents settings for downstream API key authentication. public record DownstreamAPIKeySettings : IEquatable<DownstreamAPIKeySettings> Inheritance object DownstreamAPIKeySettings Implements IEquatable<DownstreamAPIKeySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The value of the API key. public required string APIKey { get; init; } Property Value string APIUrl The URL of the downstream API. public required string APIUrl { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPISettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPISettings.html",
    "title": "Class DownstreamAPISettings | FoundationaLLM",
    "keywords": "Class DownstreamAPISettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public record DownstreamAPISettings : IDownstreamAPISettings, IEquatable<DownstreamAPISettings> Inheritance object DownstreamAPISettings Implements IDownstreamAPISettings IEquatable<DownstreamAPISettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DownstreamAPIs A dictionary of downstream APIs with a base URL and API key for authentication. public required Dictionary<string, DownstreamAPIKeySettings> DownstreamAPIs { get; init; } Property Value Dictionary<string, DownstreamAPIKeySettings>"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Authentication Classes APIKeyAuthenticationAttribute Service filter attribute for X-API-Key header validation. APIKeyAuthenticationFilter Auth filter for X-API-Key header validation. APIKeyValidationService Implements the IAPIKeyValidationService interface. APIKeyValidationSettings Represents settings for API key validation. DefaultAuthentication Provides the default credentials for authentication. DownstreamAPIKeySettings Represents settings for downstream API key authentication. DownstreamAPISettings Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AgentParameterKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AgentParameterKeys.html",
    "title": "Class AgentParameterKeys | FoundationaLLM",
    "keywords": "Class AgentParameterKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys for all overridable Agent settings. public static class AgentParameterKeys Inheritance object AgentParameterKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IndexFilterExpression The key name for the index filter expression agent parameter. This value should be a string representing the search filter expression to limit documents to be searched by the index. public const string IndexFilterExpression = \"index_filter_expression\" Field Value string IndexTopN Controls the number of search results to return from an index for prompt augmentation. public const string IndexTopN = \"index_top_n\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeyFilters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeyFilters.html",
    "title": "Class AppConfigurationKeyFilters | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyFilters Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys filters for app configuration setting namespaces. public static class AppConfigurationKeyFilters Inheritance object AppConfigurationKeyFilters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs The key filter for the FoundationaLLM:APIs:* app configuration settings. public const string FoundationaLLM_APIs = \"FoundationaLLM:APIs:*\" Field Value string FoundationaLLM_APIs_VectorizationAPI The key filter for the FoundationaLLM:APIs:VectorizationAPI:* app configuration settings. public const string FoundationaLLM_APIs_VectorizationAPI = \"FoundationaLLM:APIs:VectorizationAPI:*\" Field Value string FoundationaLLM_APIs_VectorizationWorker The key filter for the FoundationaLLM:APIs:VectorizationWorker:* app configuration settings. public const string FoundationaLLM_APIs_VectorizationWorker = \"FoundationaLLM:APIs:VectorizationWorker:*\" Field Value string FoundationaLLM_Agent The key filter for the FoundationaLLM:Agent:* app configuration settings. public const string FoundationaLLM_Agent = \"FoundationaLLM:Agent:*\" Field Value string FoundationaLLM_AgentFactory The key filter for the FoundationaLLM:AgentFactory:* app configuration settings. public const string FoundationaLLM_AgentFactory = \"FoundationaLLM:AgentFactory:*\" Field Value string FoundationaLLM_AzureAI The key filter for the FoundationaLLM:AzureAI:* app configuration settings. public const string FoundationaLLM_AzureAI = \"FoundationaLLM:AzureAI:*\" Field Value string FoundationaLLM_AzureContentSafety The key filter for the FoundationaLLM:AzureContentSafety:* app configuration settings. public const string FoundationaLLM_AzureContentSafety = \"FoundationaLLM:AzureContentSafety:*\" Field Value string FoundationaLLM_AzureOpenAI The key filter for the FoundationaLLM:AzureOpenAI:* app configuration settings. public const string FoundationaLLM_AzureOpenAI = \"FoundationaLLM:AzureOpenAI:*\" Field Value string FoundationaLLM_BlobStorageMemorySource The key filter for the FoundationaLLM:BlobStorageMemorySource:* app configuration settings. public const string FoundationaLLM_BlobStorageMemorySource = \"FoundationaLLM:CoreAPI:BlobStorageMemorySource:*\" Field Value string FoundationaLLM_Branding The key filter for the FoundationaLLM:Branding:* app configuration settings. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding:*\" Field Value string FoundationaLLM_Configuration The key filter for the FoundationaLLM:Configuration:* app configuration settings. public const string FoundationaLLM_Configuration = \"FoundationaLLM:Configuration:*\" Field Value string FoundationaLLM_CoreAPI_Entra The key filter for the FoundationaLLM:CoreAPI:Entra:* app configuration settings. public const string FoundationaLLM_CoreAPI_Entra = \"FoundationaLLM:CoreAPI:Entra:*\" Field Value string FoundationaLLM_CoreWorker The key filter for the FoundationaLLM:CoreWorker:* app configuration settings. public const string FoundationaLLM_CoreWorker = \"FoundationaLLM:CoreWorker:*\" Field Value string FoundationaLLM_CosmosDB The key filter for the FoundationaLLM:CosmosDB:* app configuration settings. public const string FoundationaLLM_CosmosDB = \"FoundationaLLM:CosmosDB:*\" Field Value string FoundationaLLM_DataSource The key filter for the FoundationaLLM:DataSource:* app configuration settings. public const string FoundationaLLM_DataSource = \"FoundationaLLM:DataSource:*\" Field Value string FoundationaLLM_Events The key filter for the FoundationaLLM:Events:* app configuration settings. public const string FoundationaLLM_Events = \"FoundationaLLM:Events:*\" Field Value string FoundationaLLM_Instance The key filter for the FoundationaLLM:Instance:* app configuration settings. public const string FoundationaLLM_Instance = \"FoundationaLLM:Instance:*\" Field Value string FoundationaLLM_ManagementAPI_Entra The key filter for the FoundationaLLM:ManagementAPI:Entra:* app configuration settings. public const string FoundationaLLM_ManagementAPI_Entra = \"FoundationaLLM:ManagementAPI:Entra:*\" Field Value string FoundationaLLM_Prompt The key filter for the FoundationaLLM:Prompt:* app configuration settings. public const string FoundationaLLM_Prompt = \"FoundationaLLM:Prompt:*\" Field Value string FoundationaLLM_Refinement The key filter for the FoundationaLLM:Refinement:* app configuration settings. public const string FoundationaLLM_Refinement = \"FoundationaLLM:Refinement:*\" Field Value string FoundationaLLM_Vectorization The key filter for the FoundationaLLM:Vectorization:* app configuration settings. public const string FoundationaLLM_Vectorization = \"FoundationaLLM:Vectorization:*\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeySections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeySections.html",
    "title": "Class AppConfigurationKeySections | FoundationaLLM",
    "keywords": "Class AppConfigurationKeySections Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys sections for app configuration setting namespaces. public static class AppConfigurationKeySections Inheritance object AppConfigurationKeySections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs_AgentFactoryAPI The key section for the FoundationaLLM:APIs:AgentFactoryAPI app configuration settings. public const string FoundationaLLM_APIs_AgentFactoryAPI = \"FoundationaLLM:APIs:AgentFactoryAPI\" Field Value string FoundationaLLM_APIs_AgentHubAPI The key section for the FoundationaLLM:APIs:AgentHubAPI app configuration settings. public const string FoundationaLLM_APIs_AgentHubAPI = \"FoundationaLLM:APIs:AgentHubAPI\" Field Value string FoundationaLLM_APIs_AuthorizationAPI The key section for the FoundationaLLM:APIs:AuthorizationAPI app configuration settings. public const string FoundationaLLM_APIs_AuthorizationAPI = \"FoundationaLLM:APIs:AuthorizationAPI\" Field Value string FoundationaLLM_APIs_CoreAPI The key section for the FoundationaLLM:APIs:CoreAPI app configuration settings. public const string FoundationaLLM_APIs_CoreAPI = \"FoundationaLLM:APIs:CoreAPI\" Field Value string FoundationaLLM_APIs_GatekeeperAPI The key section for the FoundationaLLM:APIs:GatekeeperAPI app configuration settings. public const string FoundationaLLM_APIs_GatekeeperAPI = \"FoundationaLLM:APIs:GatekeeperAPI\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_Configuration The key section for the FoundationaLLM:APIs:GatekeeperAPI:Configuration app configuration settings. public const string FoundationaLLM_APIs_GatekeeperAPI_Configuration = \"FoundationaLLM:APIs:GatekeeperAPI:Configuration\" Field Value string FoundationaLLM_APIs_LangChainAPI The key section for the FoundationaLLM:APIs:LangChainAPI app configuration settings. public const string FoundationaLLM_APIs_LangChainAPI = \"FoundationaLLM:APIs:LangChainAPI\" Field Value string FoundationaLLM_APIs_PromptHubAPI The key section for the FoundationaLLM:APIs:AgentFactoryAPI app configuration settings. public const string FoundationaLLM_APIs_PromptHubAPI = \"FoundationaLLM:APIs:PromptHubAPI\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI The key section for the FoundationaLLM:APIs:SemanticKernelAPI app configuration settings. public const string FoundationaLLM_APIs_SemanticKernelAPI = \"FoundationaLLM:APIs:SemanticKernelAPI\" Field Value string FoundationaLLM_APIs_VectorizationAPI The key section for the FoundationaLLM:APIs:VectorizationAPI app configuration settings. public const string FoundationaLLM_APIs_VectorizationAPI = \"FoundationaLLM:APIs:VectorizationAPI\" Field Value string FoundationaLLM_APIs_VectorizationWorker The key section for the FoundationaLLM:APIs:VectorizationWorker app configuration settings. public const string FoundationaLLM_APIs_VectorizationWorker = \"FoundationaLLM:APIs:VectorizationWorker\" Field Value string FoundationaLLM_AgentFactory The key section for the FoundationaLLM:AgentFactory app configuration settings. public const string FoundationaLLM_AgentFactory = \"FoundationaLLM:AgentFactory\" Field Value string FoundationaLLM_Agent_ResourceProviderService_Storage The key section for the FoundationaLLM:Agent:ResourceProviderService:Storage app configuration settings. public const string FoundationaLLM_Agent_ResourceProviderService_Storage = \"FoundationaLLM:Agent:ResourceProviderService:Storage\" Field Value string FoundationaLLM_AzureContentSafety The key section for the FoundationaLLM:AzureContentSafety app configuration settings. public const string FoundationaLLM_AzureContentSafety = \"FoundationaLLM:AzureContentSafety\" Field Value string FoundationaLLM_BlobStorageMemorySource The key section for the FoundationaLLM:BlobStorageMemorySource app configuration settings. public const string FoundationaLLM_BlobStorageMemorySource = \"FoundationaLLM:BlobStorageMemorySource\" Field Value string FoundationaLLM_Branding The key section for the FoundationaLLM:Branding app configuration settings. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding\" Field Value string FoundationaLLM_Configuration_ResourceProviderService_Storage The key section for the FoundationaLLM:Configuration:ResourceProviderService:Storage app configuration settings. public const string FoundationaLLM_Configuration_ResourceProviderService_Storage = \"FoundationaLLM:Configuration:ResourceProviderService:Storage\" Field Value string FoundationaLLM_CosmosDB The key section for the FoundationaLLM:CosmosDB app configuration settings. public const string FoundationaLLM_CosmosDB = \"FoundationaLLM:CosmosDB\" Field Value string FoundationaLLM_DataSource_ResourceProviderService_Storage The key section for the FoundationaLLM:DataSource:ResourceProviderService:Storage app configuration settings. public const string FoundationaLLM_DataSource_ResourceProviderService_Storage = \"FoundationaLLM:DataSource:ResourceProviderService:Storage\" Field Value string FoundationaLLM_Events_AzureEventGridEventService The key section for the FoundationaLLM:Events:AzureEventGridEventService app configuration settings. public const string FoundationaLLM_Events_AzureEventGridEventService = \"FoundationaLLM:Events:AzureEventGridEventService\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_AgentFactoryAPI The key section for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI app configuration settings. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_AgentFactoryAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_CoreAPI The key section for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI app configuration settings. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_CoreAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_ManagementAPI The key section for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI app configuration settings. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_ManagementAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationAPI The key section for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI app configuration settings. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationWorker The key section for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker app configuration settings. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationWorker = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker\" Field Value string FoundationaLLM_Instance The key section for the FoundationaLLM:Instance app configuration settings. public const string FoundationaLLM_Instance = \"FoundationaLLM:Instance\" Field Value string FoundationaLLM_Prompt_ResourceProviderService_Storage The key section for the FoundationaLLM:Prompt:ResourceProviderService:Storage app configuration settings. public const string FoundationaLLM_Prompt_ResourceProviderService_Storage = \"FoundationaLLM:Prompt:ResourceProviderService:Storage\" Field Value string FoundationaLLM_Refinement The key section for the FoundationaLLM:Refinement app configuration settings. public const string FoundationaLLM_Refinement = \"FoundationaLLM:Refinement\" Field Value string FoundationaLLM_SemanticKernelAPI The key section for the FoundationaLLM:SemanticKernelAPI app configuration settings. public const string FoundationaLLM_SemanticKernelAPI = \"FoundationaLLM:SemanticKernelAPI\" Field Value string FoundationaLLM_Vectorization_AzureAISearchIndexingService The key section for the FoundationaLLM:Vectorization:AzureAISearchIndexingService app configuration settings. public const string FoundationaLLM_Vectorization_AzureAISearchIndexingService = \"FoundationaLLM:Vectorization:AzureAISearchIndexingService\" Field Value string FoundationaLLM_Vectorization_ContentSources The key section for the FoundationaLLM:Vectorization:ContentSources app configuration settings. public const string FoundationaLLM_Vectorization_ContentSources = \"FoundationaLLM:Vectorization:ContentSources\" Field Value string FoundationaLLM_Vectorization_Queues The key section for the FoundationaLLM:Vectorization:Queues app configuration settings. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_ResourceProviderService_Storage The key section for the FoundationaLLM:Vectorization:ResourceProviderService:Storage app configuration settings. public const string FoundationaLLM_Vectorization_ResourceProviderService_Storage = \"FoundationaLLM:Vectorization:ResourceProviderService:Storage\" Field Value string FoundationaLLM_Vectorization_SemanticKernelTextEmbeddingService The key section for the FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService app configuration settings. public const string FoundationaLLM_Vectorization_SemanticKernelTextEmbeddingService = \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService\" Field Value string FoundationaLLM_Vectorization_StateService The key section for the FoundationaLLM:Vectorization:StateService:Storage app configuration settings. public const string FoundationaLLM_Vectorization_StateService = \"FoundationaLLM:Vectorization:StateService:Storage\" Field Value string FoundationaLLM_Vectorization_Steps The key section for the FoundationaLLM:Vectorization:Steps app configuration settings. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeys.html",
    "title": "Class AppConfigurationKeys | FoundationaLLM",
    "keywords": "Class AppConfigurationKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys for all app configuration settings. public static class AppConfigurationKeys Inheritance object AppConfigurationKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs_AgentFactoryAPI_APIKey The key for the FoundationaLLM:APIs:AgentFactoryAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentFactoryAPI_APIKey = \"FoundationaLLM:APIs:AgentFactoryAPI:APIKey\" Field Value string FoundationaLLM_APIs_AgentFactoryAPI_APIUrl The key for the FoundationaLLM:APIs:AgentFactoryAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_AgentFactoryAPI_APIUrl = \"FoundationaLLM:APIs:AgentFactoryAPI:APIUrl\" Field Value string FoundationaLLM_APIs_AgentFactoryAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentFactoryAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_AgentHubAPI_APIKey The key for the FoundationaLLM:APIs:AgentHubAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentHubAPI_APIKey = \"FoundationaLLM:APIs:AgentHubAPI:APIKey\" Field Value string FoundationaLLM_APIs_AgentHubAPI_APIUrl The key for the FoundationaLLM:APIs:AgentHubAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_AgentHubAPI_APIUrl = \"FoundationaLLM:APIs:AgentHubAPI:APIUrl\" Field Value string FoundationaLLM_APIs_AgentHubAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentHubAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_AuthorizationAPI_APIUrl The key for the FoundationaLLM:APIs:AuthorizationAPI:APIUrl app configuration setting. The URL of the authorization API. public const string FoundationaLLM_APIs_AuthorizationAPI_APIUrl = \"FoundationaLLM:APIs:AuthorizationAPI:APIUrl\" Field Value string FoundationaLLM_APIs_CoreAPI_APIUrl The key for the FoundationaLLM:APIs:CoreAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_CoreAPI_APIUrl = \"FoundationaLLM:APIs:CoreAPI:APIUrl\" Field Value string FoundationaLLM_APIs_CoreAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_CoreAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_CoreAPI_BypassGatekeeper The key for the FoundationaLLM:APIs:CoreAPI:BypassGatekeeper app configuration setting. By default, the Core API does not bypass the Gatekeeper API. To override this behavior and allow it to bypass the Gatekeeper API, set this value to true. Beware that bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. Make sure you understand the risks before setting this value to true. public const string FoundationaLLM_APIs_CoreAPI_BypassGatekeeper = \"FoundationaLLM:APIs:CoreAPI:BypassGatekeeper\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_APIKey The key for the FoundationaLLM:APIs:DataSourceHubAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_DataSourceHubAPI_APIKey = \"FoundationaLLM:APIs:DataSourceHubAPI:APIKey\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_APIUrl The key for the FoundationaLLM:APIs:DataSourceHubAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_DataSourceHubAPI_APIUrl = \"FoundationaLLM:APIs:DataSourceHubAPI:APIUrl\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_DataSourceHubAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_APIKey The key for the FoundationaLLM:APIs:GatekeeperAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_GatekeeperAPI_APIKey = \"FoundationaLLM:APIs:GatekeeperAPI:APIKey\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_APIUrl The key for the FoundationaLLM:APIs:GatekeeperAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_GatekeeperAPI_APIUrl = \"FoundationaLLM:APIs:GatekeeperAPI:APIUrl\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_GatekeeperAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableAzureContentSafety The key for the FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety app configuration setting. By default, the Gatekeeper API has Azure Content Safety integration enabled. To disable this feature, set this value to false. public const string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableAzureContentSafety = \"FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableMicrosoftPresidio The key for the FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio app configuration setting. By default, the Gatekeeper API has Microsoft Presidio integration enabled. To disable this feature, set this value to false. public const string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableMicrosoftPresidio = \"FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio\" Field Value string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIKey The key for the FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIKey = \"FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey\" Field Value string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIUrl The key for the FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIUrl = \"FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl\" Field Value string FoundationaLLM_APIs_LangChainAPI_APIKey The key for the FoundationaLLM:APIs:LangChainAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_LangChainAPI_APIKey = \"FoundationaLLM:APIs:LangChainAPI:APIKey\" Field Value string FoundationaLLM_APIs_LangChainAPI_APIUrl The key for the FoundationaLLM:APIs:LangChainAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_LangChainAPI_APIUrl = \"FoundationaLLM:APIs:LangChainAPI:APIUrl\" Field Value string FoundationaLLM_APIs_LangChainAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_LangChainAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_ManagementAPI_APIUrl The key for the FoundationaLLM:APIs:ManagementAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_ManagementAPI_APIUrl = \"FoundationaLLM:APIs:ManagementAPI:APIUrl\" Field Value string FoundationaLLM_APIs_ManagementAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:ManagementAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_ManagementAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:ManagementAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_PromptHubAPI_APIKey The key for the FoundationaLLM:APIs:PromptHubAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_PromptHubAPI_APIKey = \"FoundationaLLM:APIs:PromptHubAPI:APIKey\" Field Value string FoundationaLLM_APIs_PromptHubAPI_APIUrl The key for the FoundationaLLM:APIs:PromptHubAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_PromptHubAPI_APIUrl = \"FoundationaLLM:APIs:PromptHubAPI:APIUrl\" Field Value string FoundationaLLM_APIs_PromptHubAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_PromptHubAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_APIKey The key for the FoundationaLLM:APIs:SemanticKernelAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_SemanticKernelAPI_APIKey = \"FoundationaLLM:APIs:SemanticKernelAPI:APIKey\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_APIUrl The key for the FoundationaLLM:APIs:SemanticKernelAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_SemanticKernelAPI_APIUrl = \"FoundationaLLM:APIs:SemanticKernelAPI:APIUrl\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_SemanticKernelAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_VectorizationAPI_APIKey The key for the FoundationaLLM:APIs:VectorizationAPI:APIKey app configuration setting. The API key of the vectorization API. public const string FoundationaLLM_APIs_VectorizationAPI_APIKey = \"FoundationaLLM:APIs:VectorizationAPI:APIKey\" Field Value string FoundationaLLM_APIs_VectorizationAPI_APIUrl The key for the FoundationaLLM:APIs:VectorizationAPI:APIUrl app configuration setting. The URL of the vectorization API. public const string FoundationaLLM_APIs_VectorizationAPI_APIUrl = \"FoundationaLLM:APIs:VectorizationAPI:APIUrl\" Field Value string FoundationaLLM_APIs_VectorizationAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString app configuration setting. The connection string to the Application Insights instance used by the vectorization API. public const string FoundationaLLM_APIs_VectorizationAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_VectorizationWorker_APIKey The key for the FoundationaLLM:APIs:VectorizationWorker:APIKey app configuration setting. The API key of the vectorization worker API. public const string FoundationaLLM_APIs_VectorizationWorker_APIKey = \"FoundationaLLM:APIs:VectorizationWorker:APIKey\" Field Value string FoundationaLLM_APIs_VectorizationWorker_APIUrl The key for the FoundationaLLM:APIs:VectorizationWorker:APIUrl app configuration setting. The URL of the vectorization worker API. public const string FoundationaLLM_APIs_VectorizationWorker_APIUrl = \"FoundationaLLM:APIs:VectorizationWorker:APIUrl\" Field Value string FoundationaLLM_APIs_VectorizationWorker_AppInsightsConnectionString The key for the FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString app configuration setting. The connection string to the Application Insights instance used by the vectorization worker API. public const string FoundationaLLM_APIs_VectorizationWorker_AppInsightsConnectionString = \"FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString\" Field Value string FoundationaLLM_AgentHub_AgentMetadata_StorageContainer The key for the FoundationaLLM:AgentHub:AgentMetadata:StorageContainer app configuration setting. public const string FoundationaLLM_AgentHub_AgentMetadata_StorageContainer = \"FoundationaLLM:AgentHub:AgentMetadata:StorageContainer\" Field Value string FoundationaLLM_AgentHub_StorageManager_BlobStorage_ConnectionString The key for the FoundationaLLM:AgentHub:StorageManager:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_AgentHub_StorageManager_BlobStorage_ConnectionString = \"FoundationaLLM:AgentHub:StorageManager:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_Agent_ResourceProviderService_Storage_AuthenticationType The key for the FoundationaLLM:Agent:ResourceProviderService:Storage:AuthenticationType app configuration setting. The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Agent_ResourceProviderService_Storage_AuthenticationType = \"FoundationaLLM:Agent:ResourceProviderService:Storage:AuthenticationType\" Field Value string FoundationaLLM_Agent_ResourceProviderService_Storage_ConnectionString The key for the FoundationaLLM:Agent:ResourceProviderService:Storage:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the agent resource provider. public const string FoundationaLLM_Agent_ResourceProviderService_Storage_ConnectionString = \"FoundationaLLM:Agent:ResourceProviderService:Storage:ConnectionString\" Field Value string FoundationaLLM_AzureContentSafety_APIKey The key for the FoundationaLLM:AzureContentSafety:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_AzureContentSafety_APIKey = \"FoundationaLLM:AzureContentSafety:APIKey\" Field Value string FoundationaLLM_AzureContentSafety_APIUrl The key for the FoundationaLLM:AzureContentSafety:APIUrl app configuration setting. public const string FoundationaLLM_AzureContentSafety_APIUrl = \"FoundationaLLM:AzureContentSafety:APIUrl\" Field Value string FoundationaLLM_AzureContentSafety_HateSeverity The key for the FoundationaLLM:AzureContentSafety:HateSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_HateSeverity = \"FoundationaLLM:AzureContentSafety:HateSeverity\" Field Value string FoundationaLLM_AzureContentSafety_SelfHarmSeverity The key for the FoundationaLLM:AzureContentSafety:SelfHarmSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_SelfHarmSeverity = \"FoundationaLLM:AzureContentSafety:SelfHarmSeverity\" Field Value string FoundationaLLM_AzureContentSafety_SexualSeverity The key for the FoundationaLLM:AzureContentSafety:SexualSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_SexualSeverity = \"FoundationaLLM:AzureContentSafety:SexualSeverity\" Field Value string FoundationaLLM_AzureContentSafety_ViolenceSeverity The key for the FoundationaLLM:AzureContentSafety:ViolenceSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_ViolenceSeverity = \"FoundationaLLM:AzureContentSafety:ViolenceSeverity\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_DeploymentName The key for the FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_DeploymentName = \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_MaxTokens The key for the FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_MaxTokens = \"FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_ModelName The key for the FoundationaLLM:AzureOpenAI:API:Completions:ModelName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_ModelName = \"FoundationaLLM:AzureOpenAI:API:Completions:ModelName\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_ModelVersion The key for the FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_ModelVersion = \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_Temperature The key for the FoundationaLLM:AzureOpenAI:API:Completions:Temperature app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_Temperature = \"FoundationaLLM:AzureOpenAI:API:Completions:Temperature\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_DeploymentName The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_DeploymentName = \"FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_MaxTokens The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_MaxTokens = \"FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_ModelName The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_ModelName = \"FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_Temperature The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_Temperature = \"FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature\" Field Value string FoundationaLLM_AzureOpenAI_API_Endpoint The key for the FoundationaLLM:AzureOpenAI:API:Endpoint app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Endpoint = \"FoundationaLLM:AzureOpenAI:API:Endpoint\" Field Value string FoundationaLLM_AzureOpenAI_API_Key The key for the FoundationaLLM:AzureOpenAI:API:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_AzureOpenAI_API_Key = \"FoundationaLLM:AzureOpenAI:API:Key\" Field Value string FoundationaLLM_AzureOpenAI_API_Version The key for the FoundationaLLM:AzureOpenAI:API:Version app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Version = \"FoundationaLLM:AzureOpenAI:API:Version\" Field Value string FoundationaLLM_BlobStorageMemorySource_BlobStorageConnection The key for the FoundationaLLM:BlobStorageMemorySource:BlobStorageConnection app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_BlobStorageMemorySource_BlobStorageConnection = \"FoundationaLLM:BlobStorageMemorySource:BlobStorageConnection\" Field Value string FoundationaLLM_BlobStorageMemorySource_BlobStorageContainer The key for the FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer app configuration setting. public const string FoundationaLLM_BlobStorageMemorySource_BlobStorageContainer = \"FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer\" Field Value string FoundationaLLM_BlobStorageMemorySource_ConfigFilePath The key for the FoundationaLLM:BlobStorageMemorySource:ConfigFilePath app configuration setting. public const string FoundationaLLM_BlobStorageMemorySource_ConfigFilePath = \"FoundationaLLM:BlobStorageMemorySource:ConfigFilePath\" Field Value string FoundationaLLM_Branding_AccentColor The key for the FoundationaLLM:Branding:AccentColor app configuration setting. public const string FoundationaLLM_Branding_AccentColor = \"FoundationaLLM:Branding:AccentColor\" Field Value string FoundationaLLM_Branding_AccentTextColor The key for the FoundationaLLM:Branding:AccentTextColor app configuration setting. public const string FoundationaLLM_Branding_AccentTextColor = \"FoundationaLLM:Branding:AccentTextColor\" Field Value string FoundationaLLM_Branding_BackgroundColor The key for the FoundationaLLM:Branding:BackgroundColor app configuration setting. public const string FoundationaLLM_Branding_BackgroundColor = \"FoundationaLLM:Branding:BackgroundColor\" Field Value string FoundationaLLM_Branding_CompanyName The key for the FoundationaLLM:Branding:CompanyName app configuration setting. public const string FoundationaLLM_Branding_CompanyName = \"FoundationaLLM:Branding:CompanyName\" Field Value string FoundationaLLM_Branding_FavIconUrl The key for the FoundationaLLM:Branding:FavIconUrl app configuration setting. public const string FoundationaLLM_Branding_FavIconUrl = \"FoundationaLLM:Branding:FavIconUrl\" Field Value string FoundationaLLM_Branding_KioskMode The key for the FoundationaLLM:Branding:KioskMode app configuration setting. public const string FoundationaLLM_Branding_KioskMode = \"FoundationaLLM:Branding:KioskMode\" Field Value string FoundationaLLM_Branding_LogoText The key for the FoundationaLLM:Branding:LogoText app configuration setting. public const string FoundationaLLM_Branding_LogoText = \"FoundationaLLM:Branding:LogoText\" Field Value string FoundationaLLM_Branding_LogoUrl The key for the FoundationaLLM:Branding:LogoUrl app configuration setting. public const string FoundationaLLM_Branding_LogoUrl = \"FoundationaLLM:Branding:LogoUrl\" Field Value string FoundationaLLM_Branding_PageTitle The key for the FoundationaLLM:Branding:PageTitle app configuration setting. public const string FoundationaLLM_Branding_PageTitle = \"FoundationaLLM:Branding:PageTitle\" Field Value string FoundationaLLM_Branding_PrimaryButtonBackgroundColor The key for the FoundationaLLM:Branding:PrimaryButtonBackgroundColor app configuration setting. public const string FoundationaLLM_Branding_PrimaryButtonBackgroundColor = \"FoundationaLLM:Branding:PrimaryButtonBackgroundColor\" Field Value string FoundationaLLM_Branding_PrimaryButtonTextColor The key for the FoundationaLLM:Branding:PrimaryButtonTextColor app configuration setting. public const string FoundationaLLM_Branding_PrimaryButtonTextColor = \"FoundationaLLM:Branding:PrimaryButtonTextColor\" Field Value string FoundationaLLM_Branding_PrimaryColor The key for the FoundationaLLM:Branding:PrimaryColor app configuration setting. public const string FoundationaLLM_Branding_PrimaryColor = \"FoundationaLLM:Branding:PrimaryColor\" Field Value string FoundationaLLM_Branding_PrimaryTextColor The key for the FoundationaLLM:Branding:PrimaryTextColor app configuration setting. public const string FoundationaLLM_Branding_PrimaryTextColor = \"FoundationaLLM:Branding:PrimaryTextColor\" Field Value string FoundationaLLM_Branding_SecondaryButtonBackgroundColor The key for the FoundationaLLM:Branding:SecondaryButtonBackgroundColor app configuration setting. public const string FoundationaLLM_Branding_SecondaryButtonBackgroundColor = \"FoundationaLLM:Branding:SecondaryButtonBackgroundColor\" Field Value string FoundationaLLM_Branding_SecondaryButtonTextColor The key for the FoundationaLLM:Branding:SecondaryButtonTextColor app configuration setting. public const string FoundationaLLM_Branding_SecondaryButtonTextColor = \"FoundationaLLM:Branding:SecondaryButtonTextColor\" Field Value string FoundationaLLM_Branding_SecondaryColor The key for the FoundationaLLM:Branding:SecondaryColor app configuration setting. public const string FoundationaLLM_Branding_SecondaryColor = \"FoundationaLLM:Branding:SecondaryColor\" Field Value string FoundationaLLM_Branding_SecondaryTextColor The key for the FoundationaLLM:Branding:SecondaryTextColor app configuration setting. public const string FoundationaLLM_Branding_SecondaryTextColor = \"FoundationaLLM:Branding:SecondaryTextColor\" Field Value string FoundationaLLM_Chat_Entra_CallbackPath The key for the FoundationaLLM:Chat:Entra:CallbackPath app configuration setting. public const string FoundationaLLM_Chat_Entra_CallbackPath = \"FoundationaLLM:Chat:Entra:CallbackPath\" Field Value string FoundationaLLM_Chat_Entra_ClientId The key for the FoundationaLLM:Chat:Entra:ClientId app configuration setting. public const string FoundationaLLM_Chat_Entra_ClientId = \"FoundationaLLM:Chat:Entra:ClientId\" Field Value string FoundationaLLM_Chat_Entra_ClientSecret The key for the FoundationaLLM:Chat:Entra:ClientSecret app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_Chat_Entra_ClientSecret = \"FoundationaLLM:Chat:Entra:ClientSecret\" Field Value string FoundationaLLM_Chat_Entra_Instance The key for the FoundationaLLM:Chat:Entra:Instance app configuration setting. public const string FoundationaLLM_Chat_Entra_Instance = \"FoundationaLLM:Chat:Entra:Instance\" Field Value string FoundationaLLM_Chat_Entra_Scopes The key for the FoundationaLLM:Chat:Entra:Scopes app configuration setting. public const string FoundationaLLM_Chat_Entra_Scopes = \"FoundationaLLM:Chat:Entra:Scopes\" Field Value string FoundationaLLM_Chat_Entra_TenantId The key for the FoundationaLLM:Chat:Entra:TenantId app configuration setting. public const string FoundationaLLM_Chat_Entra_TenantId = \"FoundationaLLM:Chat:Entra:TenantId\" Field Value string FoundationaLLM_Configuration_KeyVaultURI Key for the FoundationaLLM:Configuration:KeyVaultURI app configuration setting. This value should be the URI of the Azure Key Vault that contains the application's secrets. public const string FoundationaLLM_Configuration_KeyVaultURI = \"FoundationaLLM:Configuration:KeyVaultURI\" Field Value string FoundationaLLM_Configuration_ResourceProviderService_Storage_AuthenticationType Key for the FoundationaLLM:Configuration:ResourceProviderService:Storage:AuthenticationType app configuration setting. public const string FoundationaLLM_Configuration_ResourceProviderService_Storage_AuthenticationType = \"FoundationaLLM:Configuration:ResourceProviderService:Storage:AuthenticationType\" Field Value string FoundationaLLM_CoreAPI_Entra_CallbackPath The key for the FoundationaLLM:CoreAPI:Entra:CallbackPath app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_CallbackPath = \"FoundationaLLM:CoreAPI:Entra:CallbackPath\" Field Value string FoundationaLLM_CoreAPI_Entra_ClientId The key for the FoundationaLLM:CoreAPI:Entra:ClientId app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_ClientId = \"FoundationaLLM:CoreAPI:Entra:ClientId\" Field Value string FoundationaLLM_CoreAPI_Entra_ClientSecret The key for the FoundationaLLM:CoreAPI:Entra:ClientSecret app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CoreAPI_Entra_ClientSecret = \"FoundationaLLM:CoreAPI:Entra:ClientSecret\" Field Value string FoundationaLLM_CoreAPI_Entra_Instance The key for the FoundationaLLM:CoreAPI:Entra:Instance app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_Instance = \"FoundationaLLM:CoreAPI:Entra:Instance\" Field Value string FoundationaLLM_CoreAPI_Entra_Scopes The key for the FoundationaLLM:CoreAPI:Entra:Scopes app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_Scopes = \"FoundationaLLM:CoreAPI:Entra:Scopes\" Field Value string FoundationaLLM_CoreAPI_Entra_TenantId The key for the FoundationaLLM:CoreAPI:Entra:TenantId app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_TenantId = \"FoundationaLLM:CoreAPI:Entra:TenantId\" Field Value string FoundationaLLM_CoreWorker_AppInsightsConnectionString The key for the FoundationaLLM:CoreWorker:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CoreWorker_AppInsightsConnectionString = \"FoundationaLLM:CoreWorker:AppInsightsConnectionString\" Field Value string FoundationaLLM_CosmosDB_ChangeFeedLeaseContainer The key for the FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer app configuration setting. public const string FoundationaLLM_CosmosDB_ChangeFeedLeaseContainer = \"FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer\" Field Value string FoundationaLLM_CosmosDB_Containers The key for the FoundationaLLM:CosmosDB:Containers app configuration setting. public const string FoundationaLLM_CosmosDB_Containers = \"FoundationaLLM:CosmosDB:Containers\" Field Value string FoundationaLLM_CosmosDB_Database The key for the FoundationaLLM:CosmosDB:Database app configuration setting. public const string FoundationaLLM_CosmosDB_Database = \"FoundationaLLM:CosmosDB:Database\" Field Value string FoundationaLLM_CosmosDB_Endpoint The key for the FoundationaLLM:CosmosDB:Endpoint app configuration setting. public const string FoundationaLLM_CosmosDB_Endpoint = \"FoundationaLLM:CosmosDB:Endpoint\" Field Value string FoundationaLLM_CosmosDB_Key The key for the FoundationaLLM:CosmosDB:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CosmosDB_Key = \"FoundationaLLM:CosmosDB:Key\" Field Value string FoundationaLLM_CosmosDB_MonitoredContainers The key for the FoundationaLLM:CosmosDB:MonitoredContainers app configuration setting. public const string FoundationaLLM_CosmosDB_MonitoredContainers = \"FoundationaLLM:CosmosDB:MonitoredContainers\" Field Value string FoundationaLLM_DataSourceHub_DataSourceMetadata_StorageContainer The key for the FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer app configuration setting. public const string FoundationaLLM_DataSourceHub_DataSourceMetadata_StorageContainer = \"FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer\" Field Value string FoundationaLLM_DataSourceHub_StorageManager_BlobStorage_ConnectionString The key for the FoundationaLLM:DataSourceHub:StorageManager:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_DataSourceHub_StorageManager_BlobStorage_ConnectionString = \"FoundationaLLM:DataSourceHub:StorageManager:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_DataSource_ResourceProviderService_Storage_AuthenticationType The key for the FoundationaLLM:DataSource:ResourceProviderService:Storage:AuthenticationType app configuration setting. The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_DataSource_ResourceProviderService_Storage_AuthenticationType = \"FoundationaLLM:DataSource:ResourceProviderService:Storage:AuthenticationType\" Field Value string FoundationaLLM_DataSource_ResourceProviderService_Storage_ConnectionString The key for the FoundationaLLM:DataSource:ResourceProviderService:Storage:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the data source resource provider. public const string FoundationaLLM_DataSource_ResourceProviderService_Storage_ConnectionString = \"FoundationaLLM:DataSource:ResourceProviderService:Storage:ConnectionString\" Field Value string FoundationaLLM_DataSources_AboutFoundationaLLM_BlobStorage_ConnectionString The key for the FoundationaLLM:DataSources:AboutFoundationaLLM:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_DataSources_AboutFoundationaLLM_BlobStorage_ConnectionString = \"FoundationaLLM:DataSources:AboutFoundationaLLM:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_APIKey The key for the FoundationaLLM:Events:AzureEventGridEventService:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_Events_AzureEventGridEventService_APIKey = \"FoundationaLLM:Events:AzureEventGridEventService:APIKey\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_AuthenticationType The key for the FoundationaLLM:Events:AzureEventGridEventService:AuthenticationType app configuration setting. Default value is 'APIKey'. public const string FoundationaLLM_Events_AzureEventGridEventService_AuthenticationType = \"FoundationaLLM:Events:AzureEventGridEventService:AuthenticationType\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Endpoint The key for the FoundationaLLM:Events:AzureEventGridEventService:Endpoint app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_Endpoint = \"FoundationaLLM:Events:AzureEventGridEventService:Endpoint\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_NamespaceId The key for the FoundationaLLM:Events:AzureEventGridEventService:NamespaceId app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_NamespaceId = \"FoundationaLLM:Events:AzureEventGridEventService:NamespaceId\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_AgentFactoryAPI The key for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_AgentFactoryAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_CoreAPI The key for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_CoreAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_ManagementAPI The key for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_ManagementAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationAPI The key for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationAPI = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI\" Field Value string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationWorker The key for the FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker app configuration setting. public const string FoundationaLLM_Events_AzureEventGridEventService_Profiles_VectorizationWorker = \"FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker\" Field Value string FoundationaLLM_Instance_Id The key for the FoundationaLLM:Instance:Id app configuration setting. The value should be a GUID represents a unique instance of the FoundationaLLM instance. public const string FoundationaLLM_Instance_Id = \"FoundationaLLM:Instance:Id\" Field Value string FoundationaLLM_LangChainAPI_Key The key for the FoundationaLLM:LangChainAPI:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_LangChainAPI_Key = \"FoundationaLLM:LangChainAPI:Key\" Field Value string FoundationaLLM_LangChain_CSVFile_URL The key for the FoundationaLLM:LangChain:CSVFile:URL app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_LangChain_CSVFile_URL = \"FoundationaLLM:LangChain:CSVFile:URL\" Field Value string FoundationaLLM_LangChain_SQLDatabase_TestDB_Password The key for the FoundationaLLM:LangChain:SQLDatabase:TestDB:Password app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_LangChain_SQLDatabase_TestDB_Password = \"FoundationaLLM:LangChain:SQLDatabase:TestDB:Password\" Field Value string FoundationaLLM_LangChain_Summary_MaxTokens The key for the FoundationaLLM:LangChain:Summary:MaxTokens app configuration setting. public const string FoundationaLLM_LangChain_Summary_MaxTokens = \"FoundationaLLM:LangChain:Summary:MaxTokens\" Field Value string FoundationaLLM_LangChain_Summary_ModelName The key for the FoundationaLLM:LangChain:Summary:ModelName app configuration setting. public const string FoundationaLLM_LangChain_Summary_ModelName = \"FoundationaLLM:LangChain:Summary:ModelName\" Field Value string FoundationaLLM_ManagementAPI_Entra_ClientId The key for the FoundationaLLM:ManagementAPI:Entra:ClientId app configuration setting. public const string FoundationaLLM_ManagementAPI_Entra_ClientId = \"FoundationaLLM:ManagementAPI:Entra:ClientId\" Field Value string FoundationaLLM_ManagementAPI_Entra_ClientSecret The key for the FoundationaLLM:ManagementAPI:Entra:ClientSecret app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_ManagementAPI_Entra_ClientSecret = \"FoundationaLLM:ManagementAPI:Entra:ClientSecret\" Field Value string FoundationaLLM_ManagementAPI_Entra_Instance The key for the FoundationaLLM:ManagementAPI:Entra:Instance app configuration setting. public const string FoundationaLLM_ManagementAPI_Entra_Instance = \"FoundationaLLM:ManagementAPI:Entra:Instance\" Field Value string FoundationaLLM_ManagementAPI_Entra_Scopes The key for the FoundationaLLM:ManagementAPI:Entra:Scopes app configuration setting. public const string FoundationaLLM_ManagementAPI_Entra_Scopes = \"FoundationaLLM:ManagementAPI:Entra:Scopes\" Field Value string FoundationaLLM_ManagementAPI_Entra_TenantId The key for the FoundationaLLM:ManagementAPI:Entra:TenantId app configuration setting. public const string FoundationaLLM_ManagementAPI_Entra_TenantId = \"FoundationaLLM:ManagementAPI:Entra:TenantId\" Field Value string FoundationaLLM_Management_Entra_CallbackPath The key for the FoundationaLLM:Management:Entra:CallbackPath app configuration setting. public const string FoundationaLLM_Management_Entra_CallbackPath = \"FoundationaLLM:Management:Entra:CallbackPath\" Field Value string FoundationaLLM_Management_Entra_ClientId The key for the FoundationaLLM:Management:Entra:ClientId app configuration setting. public const string FoundationaLLM_Management_Entra_ClientId = \"FoundationaLLM:Management:Entra:ClientId\" Field Value string FoundationaLLM_Management_Entra_ClientSecret The key for the FoundationaLLM:Management:Entra:ClientSecret app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_Management_Entra_ClientSecret = \"FoundationaLLM:Management:Entra:ClientSecret\" Field Value string FoundationaLLM_Management_Entra_Instance The key for the FoundationaLLM:Management:Entra:Instance app configuration setting. public const string FoundationaLLM_Management_Entra_Instance = \"FoundationaLLM:Management:Entra:Instance\" Field Value string FoundationaLLM_Management_Entra_Scopes The key for the FoundationaLLM:Management:Entra:Scopes app configuration setting. public const string FoundationaLLM_Management_Entra_Scopes = \"FoundationaLLM:Management:Entra:Scopes\" Field Value string FoundationaLLM_Management_Entra_TenantId The key for the FoundationaLLM:Management:Entra:TenantId app configuration setting. public const string FoundationaLLM_Management_Entra_TenantId = \"FoundationaLLM:Management:Entra:TenantId\" Field Value string FoundationaLLM_OpenAI_API_Endpoint The key for the FoundationaLLM:OpenAI:API:Endpoint app configuration setting. public const string FoundationaLLM_OpenAI_API_Endpoint = \"FoundationaLLM:OpenAI:API:Endpoint\" Field Value string FoundationaLLM_OpenAI_API_Key The key for the FoundationaLLM:OpenAI:API:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_OpenAI_API_Key = \"FoundationaLLM:OpenAI:API:Key\" Field Value string FoundationaLLM_OpenAI_API_Temperature The key for the FoundationaLLM:OpenAI:API:Temperature app configuration setting. public const string FoundationaLLM_OpenAI_API_Temperature = \"FoundationaLLM:OpenAI:API:Temperature\" Field Value string FoundationaLLM_PromptHub_PromptMetadata_StorageContainer The key for the FoundationaLLM:PromptHub:PromptMetadata:StorageContainer app configuration setting. public const string FoundationaLLM_PromptHub_PromptMetadata_StorageContainer = \"FoundationaLLM:PromptHub:PromptMetadata:StorageContainer\" Field Value string FoundationaLLM_PromptHub_StorageManager_BlobStorage_ConnectionString The key for the FoundationaLLM:PromptHub:StorageManager:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_PromptHub_StorageManager_BlobStorage_ConnectionString = \"FoundationaLLM:PromptHub:StorageManager:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_Prompt_ResourceProviderService_Storage_AuthenticationType The key for the FoundationaLLM:Prompt:ResourceProviderService:Storage:AuthenticationType app configuration setting. The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Prompt_ResourceProviderService_Storage_AuthenticationType = \"FoundationaLLM:Prompt:ResourceProviderService:Storage:AuthenticationType\" Field Value string FoundationaLLM_Prompt_ResourceProviderService_Storage_ConnectionString The key for the FoundationaLLM:Prompt:ResourceProviderService:Storage:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the prompt resource provider. public const string FoundationaLLM_Prompt_ResourceProviderService_Storage_ConnectionString = \"FoundationaLLM:Prompt:ResourceProviderService:Storage:ConnectionString\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_ChatCompletionPromptName The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_ChatCompletionPromptName = \"FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeployment The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeployment = \"FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeploymentMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeploymentMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeployment The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeployment = \"FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeploymentMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeploymentMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_Endpoint The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_Endpoint = \"FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_Key The key for the FoundationaLLM:SemanticKernelAPI:OpenAI:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_Key = \"FoundationaLLM:SemanticKernelAPI:OpenAI:Key\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMinTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMinTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMinTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMinTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMinTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMinTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_SystemMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_SystemMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_ShortSummaryPromptName The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_ShortSummaryPromptName = \"FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName\" Field Value string FoundationaLLM_Vectorization_Queues_Embed_ConnectionString The key for the FoundationaLLM:Vectorization:Queues:Embed:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the embed vectorization queue. public const string FoundationaLLM_Vectorization_Queues_Embed_ConnectionString = \"FoundationaLLM:Vectorization:Queues:Embed:ConnectionString\" Field Value string FoundationaLLM_Vectorization_Queues_Extract_ConnectionString The key for the FoundationaLLM:Vectorization:Queues:Extract:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the extract vectorization queue. public const string FoundationaLLM_Vectorization_Queues_Extract_ConnectionString = \"FoundationaLLM:Vectorization:Queues:Extract:ConnectionString\" Field Value string FoundationaLLM_Vectorization_Queues_Index_ConnectionString The key for the FoundationaLLM:Vectorization:Queues:Index:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the index vectorization queue. public const string FoundationaLLM_Vectorization_Queues_Index_ConnectionString = \"FoundationaLLM:Vectorization:Queues:Index:ConnectionString\" Field Value string FoundationaLLM_Vectorization_Queues_Partition_ConnectionString The key for the FoundationaLLM:Vectorization:Queues:Partition:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the partition vectorization queue. public const string FoundationaLLM_Vectorization_Queues_Partition_ConnectionString = \"FoundationaLLM:Vectorization:Queues:Partition:ConnectionString\" Field Value string FoundationaLLM_Vectorization_ResourceProviderService_Storage_AuthenticationType The key for the FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType app configuration setting. The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Vectorization_ResourceProviderService_Storage_AuthenticationType = \"FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType\" Field Value string FoundationaLLM_Vectorization_ResourceProviderService_Storage_ConnectionString The key for the FoundationaLLM:Vectorization:ResourceProviderService:Storage:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the vectorization state service. public const string FoundationaLLM_Vectorization_ResourceProviderService_Storage_ConnectionString = \"FoundationaLLM:Vectorization:ResourceProviderService:Storage:ConnectionString\" Field Value string FoundationaLLM_Vectorization_StateService_Storage_AuthenticationType The key for the FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType app configuration setting. The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Vectorization_StateService_Storage_AuthenticationType = \"FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType\" Field Value string FoundationaLLM_Vectorization_StateService_Storage_ConnectionString The key for the FoundationaLLM:Vectorization:StateService:Storage:ConnectionString app configuration setting. The connection string to the Azure Storage account used for the vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage_ConnectionString = \"FoundationaLLM:Vectorization:StateService:Storage:ConnectionString\" Field Value string FoundationaLLM_Vectorization_VectorizationWorker The key for the FoundationaLLM:Vectorization:VectorizationWorker app configuration setting. The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings public const string FoundationaLLM_Vectorization_VectorizationWorker = \"FoundationaLLM:Vectorization:VectorizationWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CacheCategories.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CacheCategories.html",
    "title": "Class CacheCategories | FoundationaLLM",
    "keywords": "Class CacheCategories Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains the names of common cache categories. public static class CacheCategories Inheritance object CacheCategories Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Agent The Agent cache category. public const string Agent = \"agent\" Field Value string DataSource The DataSource cache category. public const string DataSource = \"datasource\" Field Value string Prompt The Prompt cache category. public const string Prompt = \"prompt\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CorsPolicyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CorsPolicyNames.html",
    "title": "Class CorsPolicyNames | FoundationaLLM",
    "keywords": "Class CorsPolicyNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Names for CORS policies. public static class CorsPolicyNames Inheritance object CorsPolicyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowAllOrigins All origins are allowed. public const string AllowAllOrigins = \"AllowAllOrigins\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CosmosDbContainers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CosmosDbContainers.html",
    "title": "Class CosmosDbContainers | FoundationaLLM",
    "keywords": "Class CosmosDbContainers Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM Cosmos DB container names. public static class CosmosDbContainers Inheritance object CosmosDbContainers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Leases The Cosmos DB change feed leases container. public const string Leases = \"leases\" Field Value string Sessions Stores chat sessions and related messages. public const string Sessions = \"Sessions\" Field Value string UserProfiles Stores user profile data. public const string UserProfiles = \"UserProfiles\" Field Value string UserSessions Stores a mapping between user identities and chat sessions. public const string UserSessions = \"UserSessions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DependencyInjectionKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DependencyInjectionKeys.html",
    "title": "Class DependencyInjectionKeys | FoundationaLLM",
    "keywords": "Class DependencyInjectionKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys for all keyed dependency injections. public static class DependencyInjectionKeys Inheritance object DependencyInjectionKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_ResourceProvider_Agent The dependency injection key for the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProvider_Agent = \"FoundationaLLM:ResourceProvider:Agent\" Field Value string FoundationaLLM_ResourceProvider_Authorization The dependency injection key for the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_ResourceProvider_Authorization = \"FoundationaLLM:ResourceProvider:Authorization\" Field Value string FoundationaLLM_ResourceProvider_Configuration The dependency injection key for the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProvider_Configuration = \"FoundationaLLM:ResourceProvider:Configuration\" Field Value string FoundationaLLM_ResourceProvider_DataSource The dependency injection key for the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProvider_DataSource = \"FoundationaLLM:ResourceProvider:DataSource\" Field Value string FoundationaLLM_ResourceProvider_Prompt The dependency injection key for the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProvider_Prompt = \"FoundationaLLM:ResourceProvider:Prompt\" Field Value string FoundationaLLM_ResourceProvider_Vectorization The dependency injection key for the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProvider_Vectorization = \"FoundationaLLM:ResourceProvider:Vectorization\" Field Value string FoundationaLLM_Vectorization_AzureAISearchIndexingService The dependency injection key for the Azure AI Search indexing service. public const string FoundationaLLM_Vectorization_AzureAISearchIndexingService = \"FoundationaLLM:Vectorization:AzureAISearchIndexingService\" Field Value string FoundationaLLM_Vectorization_BlobStorageVectorizationStateService The dependency injection key for the blob storage vectorization state service. public const string FoundationaLLM_Vectorization_BlobStorageVectorizationStateService = \"FoundationaLLM:Vectorization:BlobStorageVectorizationStateService\" Field Value string FoundationaLLM_Vectorization_ContentSourceServiceFactory The dependency injection key for the content source service factory. public const string FoundationaLLM_Vectorization_ContentSourceServiceFactory = \"FoundationaLLM:Vectorization:ContentSourceServiceFactory\" Field Value string FoundationaLLM_Vectorization_DataLakeContentSourceService The dependency injection key for the vectorization data lake content source service. public const string FoundationaLLM_Vectorization_DataLakeContentSourceService = \"FoundationaLLM:Vectorization:DataLakeContentSourceService\" Field Value string FoundationaLLM_Vectorization_Queues The dependency injection key for the vectorization queues configuration section. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_SemanticKernelTextEmbeddingService The dependency injection key for the Semantic Kernel text embedding service. public const string FoundationaLLM_Vectorization_SemanticKernelTextEmbeddingService = \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService\" Field Value string FoundationaLLM_Vectorization_Steps The dependency injection key for the vectorization steps configuration section. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EndpointConfigurationKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EndpointConfigurationKeys.html",
    "title": "Class EndpointConfigurationKeys | FoundationaLLM",
    "keywords": "Class EndpointConfigurationKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys for endpoint configuration settings. public static class EndpointConfigurationKeys Inheritance object EndpointConfigurationKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey The API Key configuration setting. public const string APIKey = \"api_key\" Field Value string APIVersion The API Version configuration setting. public const string APIVersion = \"api_version\" Field Value string AuthenticationType The type of authentication to use for connecting to the endpoint. This value with be either key or token. public const string AuthenticationType = \"authentication_type\" Field Value string Endpoint The API Endpoint configuration setting. This value should be a URI representing the endpoint of the API. public const string Endpoint = \"endpoint\" Field Value string OperationType The type of operation the endpoint is performing. This value should be completion, chat-completion, or embedding. public const string OperationType = \"operation_type\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EnvironmentVariables.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EnvironmentVariables.html",
    "title": "Class EnvironmentVariables | FoundationaLLM",
    "keywords": "Class EnvironmentVariables Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants for environment variables used by the application. public static class EnvironmentVariables Inheritance object EnvironmentVariables Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureClientId The client id of the user assigned managed identity. public const string AzureClientId = \"AZURE_CLIENT_ID\" Field Value string FoundationaLLM_AppConfig_ConnectionString The key for the FoundationaLLM:AppConfig:ConnectionString environment variable. This allows the caller to connect to the Azure App Configuration service. public const string FoundationaLLM_AppConfig_ConnectionString = \"FoundationaLLM:AppConfig:ConnectionString\" Field Value string FoundationaLLM_AuthorizationAPI_KeyVaultURI They key for the FoundationaLLM:Configuration:KeyVaultURI environment variable. public const string FoundationaLLM_AuthorizationAPI_KeyVaultURI = \"FoundationaLLM:AuthorizationAPI:KeyVaultURI\" Field Value string FoundationaLLM_Version The build version of the container. This is also used for the app version used to validate the minimum version of the app required to use certain configuration entries. public const string FoundationaLLM_Version = \"FOUNDATIONALLM_VERSION\" Field Value string Hostname The Azure Container App or Azure Kubernetes Service hostname. public const string Hostname = \"HOSTNAME\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventGridEventTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventGridEventTypes.html",
    "title": "Class EventGridEventTypes | FoundationaLLM",
    "keywords": "Class EventGridEventTypes Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Types of Azure Event Grid events. public static class EventGridEventTypes Inheritance object EventGridEventTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Microsoft_Storage_BlobCreated The type of event emitted by an Azure storage account when a blob is created/updated. public const string Microsoft_Storage_BlobCreated = \"Microsoft.Storage.BlobCreated\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopicSubscriptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopicSubscriptions.html",
    "title": "Class EventGridTopicSubscriptions | FoundationaLLM",
    "keywords": "Class EventGridTopicSubscriptions Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Azure Event Grid topic subscription names. public static class EventGridTopicSubscriptions Inheritance object EventGridTopicSubscriptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Storage_Core The name of the FoundationaLLM Core API subscription to the [storage] Azure Event Grid topic. public const string FoundationaLLM_Storage_Core = \"storage-core\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopics.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopics.html",
    "title": "Class EventGridTopics | FoundationaLLM",
    "keywords": "Class EventGridTopics Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Azure Event Grid topic names. public static class EventGridTopics Inheritance object EventGridTopics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Storage The name of the FoundationaLLM storage Azure Event Grid topic. public const string FoundationaLLM_Storage = \"storage\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventSetEventNamespaces.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventSetEventNamespaces.html",
    "title": "Class EventSetEventNamespaces | FoundationaLLM",
    "keywords": "Class EventSetEventNamespaces Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Namespace names for event set events. public static class EventSetEventNamespaces Inheritance object EventSetEventNamespaces Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_ResourceProvider_Agent The namespace name for events concerning the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProvider_Agent = \"ResourceProvider.FoundationaLLM.Agent\" Field Value string FoundationaLLM_ResourceProvider_Configuration The namespace name for events concerning the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProvider_Configuration = \"ResourceProvider.FoundationaLLM.Configuration\" Field Value string FoundationaLLM_ResourceProvider_DataSource The namespace name for events concerning the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProvider_DataSource = \"ResourceProvider.FoundationaLLM.DataSource\" Field Value string FoundationaLLM_ResourceProvider_Vectorization The namespace name for events concerning the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProvider_Vectorization = \"ResourceProvider.FoundationaLLM.Vectorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.FileExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.FileExtensions.html",
    "title": "Class FileExtensions | FoundationaLLM",
    "keywords": "Class FileExtensions Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to identify file extension. public static class FileExtensions Inheritance object FileExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowedFileExtensions Allowed file extensions for vectorization. public static readonly ImmutableArray<string> AllowedFileExtensions Field Value ImmutableArray<string> Excel File extension for Microsoft Office Excel files. public const string Excel = \".xlsx\" Field Value string JSON File extension for JSON files. public const string JSON = \".json\" Field Value string Markdown File extension for Markdown files. public const string Markdown = \".md\" Field Value string PDF File extension for PDF files. public const string PDF = \".pdf\" Field Value string PowerPoint File extension for Microsoft Office PowerPoint files. public const string PowerPoint = \".pptx\" Field Value string Text File extension for text files. public const string Text = \".txt\" Field Value string Word File extension for Microsoft Office Word files. public const string Word = \".docx\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpClients.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpClients.html",
    "title": "Class HttpClients | FoundationaLLM",
    "keywords": "Class HttpClients Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to configure and retrieve an HttpClient, using IHttpClientFactory. public static class HttpClients Inheritance object HttpClients Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentFactoryAPI Named client with matching configuration for the Agent Factory API. public const string AgentFactoryAPI = \"AgentFactoryAPI\" Field Value string AgentHubAPI Named client with matching configuration for the Agent Hub API. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string AuthorizationAPI Named client with matching configuration for the Authorization API. public const string AuthorizationAPI = \"AuthorizationAPI\" Field Value string AzureAIDirect Named client with matching configuration for a direct connection to Azure AI. public const string AzureAIDirect = \"AzureAIDirect\" Field Value string AzureOpenAIDirect Named client with matching configuration for a direct connection to Azure AI. public const string AzureOpenAIDirect = \"AzureOpenAIDirect\" Field Value string CoreAPI Named client with matching configuration for the Core API. public const string CoreAPI = \"CoreAPI\" Field Value string DataSourceHubAPI Named client with matching configuration for the DataSource Hub API. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string GatekeeperAPI Named client with matching configuration for the Gatekeeper API. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI Named client with matching configuration for the Gatekeeper Integration API. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string LangChainAPI Named client with matching configuration for the LangChain API. public const string LangChainAPI = \"LangChainAPI\" Field Value string PromptHubAPI Named client with matching configuration for the Prompt Hub API. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI Named client with matching configuration for the Semantic Kernel API. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string VectorizationAPI Named client with matching configuration for the Vectorization API. public const string VectorizationAPI = \"VectorizationAPI\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html",
    "title": "Class HttpHeaders | FoundationaLLM",
    "keywords": "Class HttpHeaders Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common HTTP headers used throughout the FoundationaLLM infrastructure. public static class HttpHeaders Inheritance object HttpHeaders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey API key header used by APIs to authenticate requests. public const string APIKey = \"X-API-KEY\" Field Value string UserIdentity User identity header used by APIs to pass user identity information. public const string UserIdentity = \"X-USER-IDENTITY\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.InputMessageRoles.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.InputMessageRoles.html",
    "title": "Class InputMessageRoles | FoundationaLLM",
    "keywords": "Class InputMessageRoles Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Constants for input message roles. public static class InputMessageRoles Inheritance object InputMessageRoles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Assistant Assistant role. public const string Assistant = \"assistant\" Field Value string System System role. public const string System = \"system\" Field Value string Tool Tool role. public const string Tool = \"tool\" Field Value string User User role. public const string User = \"user\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.KeyVaultSecretNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.KeyVaultSecretNames.html",
    "title": "Class KeyVaultSecretNames | FoundationaLLM",
    "keywords": "Class KeyVaultSecretNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants for the names of all Azure Key Vault secrets. public static class KeyVaultSecretNames Inheritance object KeyVaultSecretNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs_AgentFactoryAPI_APIKey The foundationallm-apis-agentfactoryapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_AgentFactoryAPI_APIKey = \"foundationallm-apis-agentfactoryapi-apikey\" Field Value string FoundationaLLM_APIs_AgentHubAPI_APIKey The foundationallm-apis-agenthubapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_AgentHubAPI_APIKey = \"foundationallm-apis-agenthubapi-apikey\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_APIKey The foundationallm-apis-datasourcehubapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_DataSourceHubAPI_APIKey = \"foundationallm-apis-datasourcehubapi-apikey\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_APIKey The foundationallm-apis-gatekeeperapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_GatekeeperAPI_APIKey = \"foundationallm-apis-gatekeeperapi-apikey\" Field Value string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIKey The foundationallm-apis-gatekeeperintegrationapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIKey = \"foundationallm-apis-gatekeeperintegrationapi-apikey\" Field Value string FoundationaLLM_APIs_LangChainAPI_APIKey The foundationallm-apis-langchainapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_LangChainAPI_APIKey = \"foundationallm-apis-langchainapi-apikey\" Field Value string FoundationaLLM_APIs_PromptHubAPI_APIKey The foundationallm-apis-prompthubapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_PromptHubAPI_APIKey = \"foundationallm-apis-prompthubapi-apikey\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_APIKey The foundationallm-apis-semantickernelapi-apikey Key Vault secret name. public const string FoundationaLLM_APIs_SemanticKernelAPI_APIKey = \"foundationallm-apis-semantickernelapi-apikey\" Field Value string FoundationaLLM_APIs_VectorizationAPI_APIKey The foundationallm-apis-vectorizationapi-apikey Key Vault secret name. The API key of the vectorization API. public const string FoundationaLLM_APIs_VectorizationAPI_APIKey = \"foundationallm-apis-vectorizationapi-apikey\" Field Value string FoundationaLLM_APIs_VectorizationWorker_APIKey The foundationallm-apis-vectorizationworker-apikey Key Vault secret name. The API key of the vectorization worker API. public const string FoundationaLLM_APIs_VectorizationWorker_APIKey = \"foundationallm-apis-vectorizationworker-apikey\" Field Value string FoundationaLLM_AgentHub_StorageManager_BlobStorage_ConnectionString The foundationallm-agenthub-storagemanager-blobstorage-connectionstring Key Vault secret name. public const string FoundationaLLM_AgentHub_StorageManager_BlobStorage_ConnectionString = \"foundationallm-agenthub-storagemanager-blobstorage-connectionstring\" Field Value string FoundationaLLM_Agent_ResourceProvider_Storage_ConnectionString The foundationallm-agent-resourceprovider-storage-connectionstring Key Vault secret name. The connection string to the Azure Storage account used for the agent resource provider. public const string FoundationaLLM_Agent_ResourceProvider_Storage_ConnectionString = \"foundationallm-agent-resourceprovider-storage-connectionstring\" Field Value string FoundationaLLM_App_Insights_Connection_String The foundationallm-app-insights-connection-string Key Vault secret name. public const string FoundationaLLM_App_Insights_Connection_String = \"foundationallm-app-insights-connection-string\" Field Value string FoundationaLLM_AuthorizationAPI_AppInsights_ConnectionString The foundationallm-authorizationapi-appinsights-connectionstring Key Vault secret name. The connection string used by OpenTelemetry to connect to App Insights. public const string FoundationaLLM_AuthorizationAPI_AppInsights_ConnectionString = \"foundationallm-authorizationapi-appinsights-connectionstring\" Field Value string FoundationaLLM_AuthorizationAPI_Entra_ClientId The foundationallm-authorizationapi-entra- Key Vault secret name. Entra ID client id. public const string FoundationaLLM_AuthorizationAPI_Entra_ClientId = \"foundationallm-authorizationapi-entra-clientid\" Field Value string FoundationaLLM_AuthorizationAPI_Entra_ClientSecret The foundationallm-authorizationapi-entra- Key Vault secret name. The Entr ID client secret. public const string FoundationaLLM_AuthorizationAPI_Entra_ClientSecret = \"foundationallm-authorizationapi-entra-clientsecret\" Field Value string FoundationaLLM_AuthorizationAPI_Entra_Instance The foundationallm-authorizationapi-entra- Key Vault secret name. The Entra ID instance. public const string FoundationaLLM_AuthorizationAPI_Entra_Instance = \"foundationallm-authorizationapi-entra-instance\" Field Value string FoundationaLLM_AuthorizationAPI_Entra_Scopes The foundationallm-authorizationapi-entra- Key Vault secret name. The Entra ID scopes. public const string FoundationaLLM_AuthorizationAPI_Entra_Scopes = \"foundationallm-authorizationapi-entra-scopes\" Field Value string FoundationaLLM_AuthorizationAPI_Entra_TenantId The foundationallm-authorizationapi-entra- Key Vault secret name. The Entra ID tenant id. public const string FoundationaLLM_AuthorizationAPI_Entra_TenantId = \"foundationallm-authorizationapi-entra-tenantid\" Field Value string FoundationaLLM_AuthorizationAPI_InstanceIds The foundationallm-authorizationapi-entra- Key Vault secret name. The comma separated list of the identifiers of FoundationaLLM instances managed by the authorization core. public const string FoundationaLLM_AuthorizationAPI_InstanceIds = \"foundationallm-authorizationapi-instanceids\" Field Value string FoundationaLLM_AuthorizationAPI_Storage_AccountName The foundationallm-authorizationapi-entra- Key Vault secret name. The name of the storage account used by the Authorization API. public const string FoundationaLLM_AuthorizationAPI_Storage_AccountName = \"foundationallm-authorizationapi-storage-accountname\" Field Value string FoundationaLLM_AzureContentSafety_APIKey The foundationallm-azurecontentsafety-apikey Key Vault secret name. public const string FoundationaLLM_AzureContentSafety_APIKey = \"foundationallm-azurecontentsafety-apikey\" Field Value string FoundationaLLM_AzureOpenAI_Api_Key The foundationallm-azureopenai-api-key Key Vault secret name. public const string FoundationaLLM_AzureOpenAI_Api_Key = \"foundationallm-azureopenai-api-key\" Field Value string FoundationaLLM_BlobStorageMemorySource_Blobstorageconnection The foundationallm-blobstoragememorysource-blobstorageconnection Key Vault secret name. public const string FoundationaLLM_BlobStorageMemorySource_Blobstorageconnection = \"foundationallm-blobstoragememorysource-blobstorageconnection\" Field Value string FoundationaLLM_Chat_Entra_ClientSecret The foundationallm-chat-entra-clientsecret Key Vault secret name. public const string FoundationaLLM_Chat_Entra_ClientSecret = \"foundationallm-chat-entra-clientsecret\" Field Value string FoundationaLLM_Coreapi_Entra_ClientSecret The foundationallm-coreapi-entra-clientsecret Key Vault secret name. public const string FoundationaLLM_Coreapi_Entra_ClientSecret = \"foundationallm-coreapi-entra-clientsecret\" Field Value string FoundationaLLM_CosmosDB_Key The foundationallm-cosmosdb-key Key Vault secret name. public const string FoundationaLLM_CosmosDB_Key = \"foundationallm-cosmosdb-key\" Field Value string FoundationaLLM_DataSourceHub_StorageManager_BlobStorage_ConnectionString The foundationallm-datasourcehub-storagemanager-blobstorage-connectionstring Key Vault secret name. public const string FoundationaLLM_DataSourceHub_StorageManager_BlobStorage_ConnectionString = \"foundationallm-datasourcehub-storagemanager-blobstorage-connectionstring\" Field Value string FoundationaLLM_DataSource_ResourceProvider_Storage_ConnectionString The foundationallm-datasource-resourceprovider-storage-connectionstring Key Vault secret name. The connection string to the Azure Storage account used for the data source resource provider. public const string FoundationaLLM_DataSource_ResourceProvider_Storage_ConnectionString = \"foundationallm-datasource-resourceprovider-storage-connectionstring\" Field Value string FoundationaLLM_Events_AzureEventGrid_APIKey The foundationallm-events-azureeventgrid-apikey Key Vault secret name. The API key for the Azure Event Grid service. public const string FoundationaLLM_Events_AzureEventGrid_APIKey = \"foundationallm-events-azureeventgrid-apikey\" Field Value string FoundationaLLM_LangChain_CsvFile_Url The foundationallm-langchain-csvfile-url Key Vault secret name. public const string FoundationaLLM_LangChain_CsvFile_Url = \"foundationallm-langchain-csvfile-url\" Field Value string FoundationaLLM_LangChain_SQLDatabase_Testdb_Password The foundationallm-langchain-sqldatabase-testdb-password Key Vault secret name. public const string FoundationaLLM_LangChain_SQLDatabase_Testdb_Password = \"foundationallm-langchain-sqldatabase-testdb-password\" Field Value string FoundationaLLM_Management_Entra_ClientSecret The foundationallm-management-entra-clientsecret Key Vault secret name. public const string FoundationaLLM_Management_Entra_ClientSecret = \"foundationallm-management-entra-clientsecret\" Field Value string FoundationaLLM_Managementapi_Entra_ClientSecret The foundationallm-managementapi-entra-clientsecret Key Vault secret name. public const string FoundationaLLM_Managementapi_Entra_ClientSecret = \"foundationallm-managementapi-entra-clientsecret\" Field Value string FoundationaLLM_OpenAI_Api_Key The foundationallm-openai-api-key Key Vault secret name. public const string FoundationaLLM_OpenAI_Api_Key = \"foundationallm-openai-api-key\" Field Value string FoundationaLLM_PromptHub_StorageManager_BlobStorage_ConnectionString The foundationallm-prompthub-storagemanager-blobstorage-connectionstring Key Vault secret name. public const string FoundationaLLM_PromptHub_StorageManager_BlobStorage_ConnectionString = \"foundationallm-prompthub-storagemanager-blobstorage-connectionstring\" Field Value string FoundationaLLM_Prompt_ResourceProvider_Storage_ConnectionString The foundationallm-prompt-resourceprovider-storage-connectionstring Key Vault secret name. The connection string to the Azure Storage account used for the prompt resource provider. public const string FoundationaLLM_Prompt_ResourceProvider_Storage_ConnectionString = \"foundationallm-prompt-resourceprovider-storage-connectionstring\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_Key The foundationallm-semantickernelapi-openai-key Key Vault secret name. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_Key = \"foundationallm-semantickernelapi-openai-key\" Field Value string FoundationaLLM_Vectorization_Queues_ConnectionString The foundationallm-vectorization-queues-connectionstring Key Vault secret name. The connection string to the Azure Storage account used for the embed vectorization queue. public const string FoundationaLLM_Vectorization_Queues_ConnectionString = \"foundationallm-vectorization-queues-connectionstring\" Field Value string FoundationaLLM_Vectorization_ResourceProvider_Storage_ConnectionString The foundationallm-vectorization-resourceprovider-storage-connectionstring Key Vault secret name. The connection string to the Azure Storage account used for the vectorization state service. public const string FoundationaLLM_Vectorization_ResourceProvider_Storage_ConnectionString = \"foundationallm-vectorization-resourceprovider-storage-connectionstring\" Field Value string FoundationaLLM_Vectorization_State_ConnectionString The foundationallm-vectorization-state-connectionstring Key Vault secret name. The connection string to the Azure Storage account used for the vectorization state service. public const string FoundationaLLM_Vectorization_State_ConnectionString = \"foundationallm-vectorization-state-connectionstring\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.LanguageModelProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.LanguageModelProviders.html",
    "title": "Class LanguageModelProviders | FoundationaLLM",
    "keywords": "Class LanguageModelProviders Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Langauge Model provider constants. public class LanguageModelProviders Inheritance object LanguageModelProviders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields MICROSOFT Microsoft public const string MICROSOFT = \"microsoft\" Field Value string OPENAI OpenAI public const string OPENAI = \"openai\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.LanguageModelTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.LanguageModelTypes.html",
    "title": "Class LanguageModelTypes | FoundationaLLM",
    "keywords": "Class LanguageModelTypes Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Language Model type constants. public class LanguageModelTypes Inheritance object LanguageModelTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields OPENAI OpenAI public const string OPENAI = \"openai\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ModelParameterKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ModelParameterKeys.html",
    "title": "Class ModelParameterKeys | FoundationaLLM",
    "keywords": "Class ModelParameterKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys for all overridable model settings. public static class ModelParameterKeys Inheritance object ModelParameterKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DeploymentName The key name for the deployment_name model parameter. This value should be a string representing the name of the model deployment in Azure OpenAI. public const string DeploymentName = \"deployment_name\" Field Value string DoSample Whether or not to use sampling; use greedy decoding otherwise. public const string DoSample = \"do_sample\" Field Value string IgnoreEOS Whether to ignore the EOS token and continue generating tokens after the EOS token is generated. Defaults to False. public const string IgnoreEOS = \"ignore_eos\" Field Value string MaxNewTokens Sets a limit on the number of tokens per model response. The API supports a maximum of 4000 tokens shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text. public const string MaxNewTokens = \"max_new_tokens\" Field Value string ReturnFullText Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. public const string ReturnFullText = \"return_full_text\" Field Value string Temperature Controls randomness. Lowering the temperature means that the model will produce more repetitive and deterministic responses. Increasing the temperature will result in more unexpected or creative responses. Try adjusting temperature or Top P but not both. This value should be a float between 0.0 and 1.0. public const string Temperature = \"temperature\" Field Value string TopK The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. public const string TopK = \"top_k\" Field Value string TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling. Top P (or Top Probabilities) is imilar to temperature, this controls randomness but uses a different method. Lowering Top P will narrow the model’s token selection to likelier tokens. Increasing Top P will let the model choose from tokens with both high and low likelihood. Try adjusting temperature or Top P but not both. public const string TopP = \"top_p\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.OperationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.OperationTypes.html",
    "title": "Class OperationTypes | FoundationaLLM",
    "keywords": "Class OperationTypes Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Type of endpoint operations. public static class OperationTypes Inheritance object OperationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Chat Chat completions operation. public const string Chat = \"chat\" Field Value string Completions Completions operation. public const string Completions = \"completions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Participants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Participants.html",
    "title": "Enum Participants | FoundationaLLM",
    "keywords": "Enum Participants Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Specifies the participants, such as a user and an assistant. public enum Participants Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Assistant = 1 Represents an assistant type. User = 0 Represents a user type."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviderNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviderNames.html",
    "title": "Class ResourceProviderNames | FoundationaLLM",
    "keywords": "Class ResourceProviderNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the resource provider names. public static class ResourceProviderNames Inheritance object ResourceProviderNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All Contains all the resource provider names. public static readonly ImmutableList<string> All Field Value ImmutableList<string> FoundationaLLM_Agent The name of the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_Agent = \"FoundationaLLM.Agent\" Field Value string FoundationaLLM_Authorization The name of the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_Authorization = \"FoundationaLLM.Authorization\" Field Value string FoundationaLLM_Configuration The name of the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_Configuration = \"FoundationaLLM.Configuration\" Field Value string FoundationaLLM_DataSource The name of the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSource = \"FoundationaLLM.DataSource\" Field Value string FoundationaLLM_Prompt The name of the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_Prompt = \"FoundationaLLM.Prompt\" Field Value string FoundationaLLM_Vectorization The name of the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_Vectorization = \"FoundationaLLM.Vectorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ServiceNames.html",
    "title": "Class ServiceNames | FoundationaLLM",
    "keywords": "Class ServiceNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains the names of the FoundationaLLM services. public static class ServiceNames Inheritance object ServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentFactoryAPI The name of the Agent Factory API service. public const string AgentFactoryAPI = \"AgentFactoryAPI\" Field Value string AgentHubAPI The name of the Agent Hub API service. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string AuthorizationAPI The name of the Authorization API service. public const string AuthorizationAPI = \"AuthorizationAPI\" Field Value string CoreAPI The name of the Core API service. public const string CoreAPI = \"CoreAPI\" Field Value string CoreWorker The name of the Core Worker service. public const string CoreWorker = \"CoreWorker\" Field Value string DataSourceHubAPI The name of the Data Source Hub API service. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string GatekeeperAPI The name of the Gatekeeper API service. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI The name of the Gatekeeper Integration API service. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string LangChainAPI The name of the Lang Chain API service. public const string LangChainAPI = \"LangChainAPI\" Field Value string ManagementAPI The name of the Management API service. public const string ManagementAPI = \"ManagementAPI\" Field Value string PromptHubAPI The name of the Prompt Hub API service. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI The name of the Semantic Kernel API service. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string VectorizationAPI The name of the Vectorization API service. public const string VectorizationAPI = \"VectorizationAPI\" Field Value string VectorizationWorker The name of the Vectorization Worker service. public const string VectorizationWorker = \"VectorizationWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ServiceStatuses.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ServiceStatuses.html",
    "title": "Class ServiceStatuses | FoundationaLLM",
    "keywords": "Class ServiceStatuses Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Service status constants. public static class ServiceStatuses Inheritance object ServiceStatuses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error The service is in an error state. public const string Error = \"Error\" Field Value string Initializing The service is in an initializing state. public const string Initializing = \"Initializing\" Field Value string Ready The service is operational and ready to accept requests. public const string Ready = \"Ready\" Field Value string Warning The service is in a warning state. public const string Warning = \"Warning\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html",
    "title": "Class Swagger | FoundationaLLM",
    "keywords": "Class Swagger Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common Swagger strings used throughout the FoundationaLLM infrastructure. public static class Swagger Inheritance object Swagger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SecurityDefinitionName The OpenAPI security definition name. public const string SecurityDefinitionName = \"ApiKey\" Field Value string SecuritySchemeDescription The OpenAPI security scheme description. public const string SecuritySchemeDescription = \"API Key auth\" Field Value string SecuritySchemeName The OpenAPI security scheme name. public const string SecuritySchemeName = \"ApiKeyScheme\" Field Value string SecuritySchemeReferenceId The OpenAPI security scheme reference identifier. public const string SecuritySchemeReferenceId = \"ApiKey\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html",
    "title": "Class VectorizationSteps | FoundationaLLM",
    "keywords": "Class VectorizationSteps Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM vectorization step names. public class VectorizationSteps Inheritance object VectorizationSteps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Embed Embed text chunks into a latent vector space. public const string Embed = \"embed\" Field Value string Extract Extract the text from the content of the document. public const string Extract = \"extract\" Field Value string Index Persist vector embeddings into a vector index. public const string Index = \"index\" Field Value string Partition Partition the text into multiple chunks. public const string Partition = \"partition\" Field Value string Methods ValidateStepName(string) Validates a given vectorization step name. public static bool ValidateStepName(string stepName) Parameters stepName string The vectorization step name to be validated. Returns bool Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.html",
    "title": "Namespace FoundationaLLM.Common.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants Classes AgentParameterKeys Contains constants of the keys for all overridable Agent settings. AppConfigurationKeyFilters Contains constants of the keys filters for app configuration setting namespaces. AppConfigurationKeySections Contains constants of the keys sections for app configuration setting namespaces. AppConfigurationKeys Contains constants of the keys for all app configuration settings. CacheCategories Contains the names of common cache categories. CorsPolicyNames Names for CORS policies. CosmosDbContainers Core FoundationaLLM Cosmos DB container names. DependencyInjectionKeys Contains constants of the keys for all keyed dependency injections. EndpointConfigurationKeys Contains constants of the keys for endpoint configuration settings. EnvironmentVariables Contains constants for environment variables used by the application. EventGridEventTypes Types of Azure Event Grid events. EventGridTopicSubscriptions Azure Event Grid topic subscription names. EventGridTopics Azure Event Grid topic names. EventSetEventNamespaces Namespace names for event set events. FileExtensions Name constants used to identify file extension. HttpClients Name constants used to configure and retrieve an HttpClient, using IHttpClientFactory. HttpHeaders Common HTTP headers used throughout the FoundationaLLM infrastructure. InputMessageRoles Constants for input message roles. KeyVaultSecretNames Contains constants for the names of all Azure Key Vault secrets. LanguageModelProviders Langauge Model provider constants. LanguageModelTypes Language Model type constants. ModelParameterKeys Contains constants of the keys for all overridable model settings. OperationTypes Type of endpoint operations. ResourceProviderNames Contains constants of the resource provider names. ServiceNames Contains the names of the FoundationaLLM services. ServiceStatuses Service status constants. Swagger Common Swagger strings used throughout the FoundationaLLM infrastructure. VectorizationSteps Core FoundationaLLM vectorization step names. Enums Participants Specifies the participants, such as a user and an assistant."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.AuthorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.AuthorizationException.html",
    "title": "Class AuthorizationException | FoundationaLLM",
    "keywords": "Class AuthorizationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by FoundationaLLM.Authoriztion resource provider. public class AuthorizationException : Exception, ISerializable Inheritance object Exception AuthorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationException() Initializes a new instance of the AuthorizationException class with a default message. public AuthorizationException() AuthorizationException(string?) Initializes a new instance of the AuthorizationException class with its message set to message. public AuthorizationException(string? message) Parameters message string A string that describes the error. AuthorizationException(string?, Exception?) Initializes a new instance of the AuthorizationException class with its message set to message. public AuthorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValidationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValidationException.html",
    "title": "Class ConfigurationValidationException | FoundationaLLM",
    "keywords": "Class ConfigurationValidationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an exception that occurs when configuration validation fails. public class ConfigurationValidationException : Exception, ISerializable Inheritance object Exception ConfigurationValidationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the ConfigurationValidationException class. Constructors ConfigurationValidationException(IEnumerable<string?>?, IEnumerable<string?>?, IEnumerable<string?>?) Represents an exception that occurs when configuration validation fails. public ConfigurationValidationException(IEnumerable<string?>? missingConfigurations, IEnumerable<string?>? missingKeyVaultSecrets, IEnumerable<string?>? missingEnvironmentVariables) Parameters missingConfigurations IEnumerable<string> Provide a list of missing or empty app configurations. missingKeyVaultSecrets IEnumerable<string> Provide a list of missing or empty Key Vault secrets. missingEnvironmentVariables IEnumerable<string> Provide a list of missing environment variables. Remarks Initializes a new instance of the ConfigurationValidationException class. Properties MissingConfigurations The list of keys for missing or empty configurations. public IEnumerable<string?>? MissingConfigurations { get; } Property Value IEnumerable<string> MissingEnvironmentVariables The list of missing environment variables. public IEnumerable<string?>? MissingEnvironmentVariables { get; } Property Value IEnumerable<string> MissingKeyVaultSecrets The list of missing or empty Key Vault secrets. public IEnumerable<string?>? MissingKeyVaultSecrets { get; } Property Value IEnumerable<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValueException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValueException.html",
    "title": "Class ConfigurationValueException | FoundationaLLM",
    "keywords": "Class ConfigurationValueException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with a configuration value. public class ConfigurationValueException : Exception, ISerializable Inheritance object Exception ConfigurationValueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationValueException() Initializes a new instance of the ConfigurationValueException class with a default message. public ConfigurationValueException() ConfigurationValueException(string?) Initializes a new instance of the ConfigurationValueException class with its message set to message. public ConfigurationValueException(string? message) Parameters message string A string that describes the error. ConfigurationValueException(string?, Exception?) Initializes a new instance of the ConfigurationValueException class with its message set to message. public ConfigurationValueException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ContentException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ContentException.html",
    "title": "Class ContentException | FoundationaLLM",
    "keywords": "Class ContentException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class ContentException : Exception, ISerializable Inheritance object Exception ContentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentException() Initializes a new instance of the ContentException class with a default message. public ContentException() ContentException(string?) Initializes a new instance of the ContentException class with its message set to message. public ContentException(string? message) Parameters message string A string that describes the error. ContentException(string?, Exception?) Initializes a new instance of the ContentException class with its message set to message. public ContentException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ContentIdentifierException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ContentIdentifierException.html",
    "title": "Class ContentIdentifierException | FoundationaLLM",
    "keywords": "Class ContentIdentifierException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with a configuration value. public class ContentIdentifierException : Exception, ISerializable Inheritance object Exception ContentIdentifierException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentIdentifierException() Initializes a new instance of the ContentIdentifierException class with a default message. public ContentIdentifierException() ContentIdentifierException(string?) Initializes a new instance of the ContentIdentifierException class with its message set to message. public ContentIdentifierException(string? message) Parameters message string A string that describes the error. ContentIdentifierException(string?, Exception?) Initializes a new instance of the ContentIdentifierException class with its message set to message. public ContentIdentifierException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.EventException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.EventException.html",
    "title": "Class EventException | FoundationaLLM",
    "keywords": "Class EventException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the eventing system. public class EventException : Exception, ISerializable Inheritance object Exception EventException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventException() Initializes a new instance of the EventException class with a default message. public EventException() EventException(string?) Initializes a new instance of the EventException class with its message set to message. public EventException(string? message) Parameters message string A string that describes the error. EventException(string?, Exception?) Initializes a new instance of the EventException class with its message set to message. public EventException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.OrchestrationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.OrchestrationException.html",
    "title": "Class OrchestrationException | FoundationaLLM",
    "keywords": "Class OrchestrationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class OrchestrationException : Exception, ISerializable Inheritance object Exception OrchestrationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationException() Initializes a new instance of the OrchestrationException class with a default message. public OrchestrationException() OrchestrationException(string?) Initializes a new instance of the OrchestrationException class with its message set to message. public OrchestrationException(string? message) Parameters message string A string that describes the error. OrchestrationException(string?, Exception?) Initializes a new instance of the OrchestrationException class with its message set to message. public OrchestrationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ResourceProviderException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ResourceProviderException.html",
    "title": "Class ResourceProviderException | FoundationaLLM",
    "keywords": "Class ResourceProviderException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by a resource provider. public class ResourceProviderException : Exception, ISerializable Inheritance object Exception ResourceProviderException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderException() Initializes a new instance of the ResourceProviderException class with a default message. public ResourceProviderException() ResourceProviderException(string?, Exception?, int) Initializes a new instance of the ResourceProviderException class with its message set to message. public ResourceProviderException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. ResourceProviderException(string?, int) Initializes a new instance of the ResourceProviderException class with its message set to message. public ResourceProviderException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception. Properties StatusCode Provides the HTTP status code associated with the exception. public int StatusCode { get; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.StorageException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.StorageException.html",
    "title": "Class StorageException | FoundationaLLM",
    "keywords": "Class StorageException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class StorageException : Exception, ISerializable Inheritance object Exception StorageException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageException() Initializes a new instance of the StorageException class with a default message. public StorageException() StorageException(string?) Initializes a new instance of the StorageException class with its message set to message. public StorageException(string? message) Parameters message string A string that describes the error. StorageException(string?, Exception?) Initializes a new instance of the StorageException class with its message set to message. public StorageException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.TextProcessingException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.TextProcessingException.html",
    "title": "Class TextProcessingException | FoundationaLLM",
    "keywords": "Class TextProcessingException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error in the tokenization process. public class TextProcessingException : Exception, ISerializable Inheritance object Exception TextProcessingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextProcessingException() Initializes a new instance of the TextProcessingException class with a default message. public TextProcessingException() TextProcessingException(string?) Initializes a new instance of the TextProcessingException class with its message set to message. public TextProcessingException(string? message) Parameters message string A string that describes the error. TextProcessingException(string?, Exception?) Initializes a new instance of the TextProcessingException class with its message set to message. public TextProcessingException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.html",
    "title": "Namespace FoundationaLLM.Common.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Exceptions Classes AuthorizationException Represents an error generated by FoundationaLLM.Authoriztion resource provider. ConfigurationValidationException Represents an exception that occurs when configuration validation fails. ConfigurationValueException Represents an error with a configuration value. ContentException Represents an error with accessing content. ContentIdentifierException Represents an error with a configuration value. EventException Represents an error generated by the eventing system. OrchestrationException Represents an error with accessing content. ResourceProviderException Represents an error generated by a resource provider. StorageException Represents an error with accessing content. TextProcessingException Represents an error in the tokenization process."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.BlobStorageExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.BlobStorageExtensions.html",
    "title": "Class BlobStorageExtensions | FoundationaLLM",
    "keywords": "Class BlobStorageExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends Azure Blob Storage classes with helper methods. public static class BlobStorageExtensions Inheritance object BlobStorageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AcquireAsyncWithWait(BlobLeaseClient, TimeSpan, int, int, CancellationToken) Attempts to acquire a lease on a blob item using a retry pattern. public static Task<BlobLease?> AcquireAsyncWithWait(this BlobLeaseClient blobLeaseClient, TimeSpan duration, int maxRetryCount = 5, int retryWaitSeconds = 5, CancellationToken cancellationToken = default) Parameters blobLeaseClient BlobLeaseClient The BlobLeaseClient client used to acquire the lease. duration TimeSpan The TimeSpan specifying the intended duration of the lease. maxRetryCount int The maximum number of attempts to acquire the lease. retryWaitSeconds int The number of seconds to wait between subsequent attempts to acquire the lease. cancellationToken CancellationToken The CancellationToken that signals the cancellation of the procedure. Returns Task<BlobLease> The BlobLease acquired or null if the acquire operation was not completed."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.DictionaryExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | FoundationaLLM",
    "keywords": "Class DictionaryExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Provides extension methods for Dictionary<TKey, TValue>. public static class DictionaryExtensions Inheritance object DictionaryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToObject<T>(Dictionary<string, object>, Dictionary<string, object>?) Converts a dictionary to an object of type T with optional overrides. public static T ToObject<T>(this Dictionary<string, object> source, Dictionary<string, object>? overrides = null) where T : new() Parameters source Dictionary<string, object> The source properties for the returned object. overrides Dictionary<string, object> Optional overrides to apply to the returned object parameters. Returns T Type Parameters T The type of the object to which you want to convert from a source dictionary."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html",
    "title": "Class SwaggerGenOptionsExtensions | FoundationaLLM",
    "keywords": "Class SwaggerGenOptionsExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. public static class SwaggerGenOptionsExtensions Inheritance object SwaggerGenOptionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAPIKeyAuth(SwaggerGenOptions) Extension method that configures API Key auth for the APIs that use it. public static void AddAPIKeyAuth(this SwaggerGenOptions options) Parameters options SwaggerGenOptions The base options."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.UrlExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.UrlExtensions.html",
    "title": "Class UrlExtensions | FoundationaLLM",
    "keywords": "Class UrlExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends string with helper methods. public static class UrlExtensions Inheritance object UrlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromKnownNeutralUrl(string) Translates a URL into its neutral form. public static string FromKnownNeutralUrl(this string url) Parameters url string Returns string"
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.html",
    "title": "Namespace FoundationaLLM.Common.Extensions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Extensions Classes BlobStorageExtensions Extends Azure Blob Storage classes with helper methods. DictionaryExtensions Provides extension methods for Dictionary<TKey, TValue>. SwaggerGenOptionsExtensions Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. UrlExtensions Extends string with helper methods."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html",
    "title": "Interface IAPIKeyValidationService | FoundationaLLM",
    "keywords": "Interface IAPIKeyValidationService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Common interface for X-API-Key header validation. public interface IAPIKeyValidationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IsValid(string) Checks if an API key is valid or not. bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean representing the validity of the API key parameter."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAgentFactoryAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAgentFactoryAPIService.html",
    "title": "Interface IAgentFactoryAPIService | FoundationaLLM",
    "keywords": "Interface IAgentFactoryAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Exposes functionality for calling the Agent Factory API. public interface IAgentFactoryAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods RemoveCacheCategory(string) Removes all objects belonging to a category from the cache within the Agent Factory API. Task<bool> RemoveCacheCategory(string name) Parameters name string The name of the category of objects to be removed from the cache. Returns Task<bool> RemoveCacheItem(string) Removes a specific cache item by its name within the Agent Factory API. Task<bool> RemoveCacheItem(string name) Parameters name string The name of the object to be removed from the cache. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAgentHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAgentHubAPIService.html",
    "title": "Interface IAgentHubAPIService | FoundationaLLM",
    "keywords": "Interface IAgentHubAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for the AgentHub Service. public interface IAgentHubAPIService : IHubAPIService, ICacheControlAPIService Inherited Members IHubAPIService.Status() ICacheControlAPIService.RefreshConfigurationCache() ICacheControlAPIService.RefreshCache(string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ListAgents() Gets the list with all the agent names and descriptions. Task<List<AgentMetadata>> ListAgents() Returns Task<List<AgentMetadata>> A list of AgentMetadata objects containing the names and descriptions of the agents. ResolveRequest(string, string) Gets a set of agents from the Agent Hub based on the prompt and user context. Task<AgentHubResponse> ResolveRequest(string userPrompt, string sessionId) Parameters userPrompt string The user prompt to resolve. sessionId string The session ID. Returns Task<AgentHubResponse>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationService.html",
    "title": "Interface IAuthorizationService | FoundationaLLM",
    "keywords": "Interface IAuthorizationService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines methods exposed by the Authorization service. public interface IAuthorizationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessAuthorizationRequest(ActionAuthorizationRequest) Processes an action authorization request. Task<ActionAuthorizationResult> ProcessAuthorizationRequest(ActionAuthorizationRequest authorizationRequest) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest to process. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureResourceManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureResourceManagerService.html",
    "title": "Interface IAzureResourceManagerService | FoundationaLLM",
    "keywords": "Interface IAzureResourceManagerService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public interface IAzureResourceManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Creates a new Azure Event Grid namespace topic subscription. Task<bool> CreateEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be created. topicSubscriptionName string The name of the subscription to be created. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task<bool> True if the subscription was successfully created, false otherwise. DeleteEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Deletes an Azure Event Grid namespace topic subscription. Task DeleteEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be deleted. topicSubscriptionName string The name of the subscription to be deleted. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheControlAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheControlAPIService.html",
    "title": "Interface ICacheControlAPIService | FoundationaLLM",
    "keywords": "Interface ICacheControlAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Contains base functionality for calling the underlying API service. public interface ICacheControlAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods RefreshCache(string) Refreshes the named cache. Task<APICacheRefreshResult> RefreshCache(string name) Parameters name string The name of the cache item to refresh. Returns Task<APICacheRefreshResult> RefreshConfigurationCache() Refreshes the configuration cache. Task<APICacheRefreshResult> RefreshConfigurationCache() Returns Task<APICacheRefreshResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheService.html",
    "title": "Interface ICacheService | FoundationaLLM",
    "keywords": "Interface ICacheService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Caches objects. public interface ICacheService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetItemsCount(string) Gets the number of items in the cache that belong to a specified category. int GetItemsCount(string categoryName) Parameters categoryName string The name of the category. Returns int Get<T>(CacheKey) Gets an object from the cache. T? Get<T>(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Returns T The object identified by the key. Type Parameters T The type of object retrieved from the cache. Get<T>(CacheKey, Func<Task<T>>, bool, TimeSpan?) Gets an object from the cache. If the object is not found in the cache, will attempt to retrieve it using a specified retriever. Task<T?> Get<T>(CacheKey key, Func<Task<T>> valueRetriever, bool allowNull, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. valueRetriever Func<Task<T>> The retriever used to get the value to populate the cache. allowNull bool Indicates whether null values returned by the value retriever should be cached or not. expirationTime TimeSpan? The TimeSpan time to live. Returns Task<T> The object identified by the key. Type Parameters T The type of object retrieved from the cache. Remove(CacheKey) Removes an object from the cache. void Remove(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. RemoveByCategory(CacheKey) Removes all objects belonging to a category from the cache. void RemoveByCategory(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Set<T>(CacheKey, T?, TimeSpan?) Adds an object to the cache. void Set<T>(CacheKey key, T? value, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. value T The object to be added to the cache. expirationTime TimeSpan? The TimeSpan time to live. Type Parameters T The type of object retrieved from the cache."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICallContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICallContext.html",
    "title": "Interface ICallContext | FoundationaLLM",
    "keywords": "Interface ICallContext Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Stores context information for the current HTTP request. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. public interface ICallContext Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity InstanceId The unique identifier of the current FoundationaLLM deployment instance. string? InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDataSourceHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDataSourceHubAPIService.html",
    "title": "Interface IDataSourceHubAPIService | FoundationaLLM",
    "keywords": "Interface IDataSourceHubAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for the Agent Factory Service. public interface IDataSourceHubAPIService : IHubAPIService, ICacheControlAPIService Inherited Members IHubAPIService.Status() ICacheControlAPIService.RefreshConfigurationCache() ICacheControlAPIService.RefreshCache(string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ResolveRequest(List<string>, string) Gets a list of DataSources from the DataSource Hub. Task<DataSourceHubResponse> ResolveRequest(List<string> sources, string sessionId) Parameters sources List<string> The data sources to resolve. sessionId string The session ID. Returns Task<DataSourceHubResponse>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPIService.html",
    "title": "Interface IDownstreamAPIService | FoundationaLLM",
    "keywords": "Interface IDownstreamAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for calling a downstream API. public interface IDownstreamAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIName The name of the downstream API. string APIName { get; } Property Value string Methods GetCompletion(CompletionRequest) Gets a completion from the downstream API. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the downstream API. Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPISettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPISettings.html",
    "title": "Interface IDownstreamAPISettings | FoundationaLLM",
    "keywords": "Interface IDownstreamAPISettings Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll One or more downstream APIs with a base URL and API key for authentication. public interface IDownstreamAPISettings Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DownstreamAPIs A dictionary of downstream APIs with a base URL and API key for authentication. Dictionary<string, DownstreamAPIKeySettings> DownstreamAPIs { get; } Property Value Dictionary<string, DownstreamAPIKeySettings>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IEventService.html",
    "title": "Interface IEventService | FoundationaLLM",
    "keywords": "Interface IEventService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with an eventing engine. public interface IEventService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExecuteAsync(CancellationToken) Executes the event service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartAsync(CancellationToken) Starts the event service, allowing it to initialize. Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the event service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SubscribeToEventSetEvent(string, EventSetEventDelegate) Adds an event set event delgate to the list of event handlers for a specified event set namespace. void SubscribeToEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling. UnsubscribeFromEventSetEvent(string, EventSetEventDelegate) Removes an event set event delegate from the list of event handlers for a specified event set namespace. void UnsubscribeFromEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IGroupMembershipService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IGroupMembershipService.html",
    "title": "Interface IGroupMembershipService | FoundationaLLM",
    "keywords": "Interface IGroupMembershipService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides group membership services. public interface IGroupMembershipService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetGroupsForPrincipal(string) Retrieves the group identifiers list of the groups where the specified user principal is a member. Task<List<string>> GetGroupsForPrincipal(string userPrincipalName) Parameters userPrincipalName string The user principal name (UPN) for which group membership is retrieved. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html",
    "title": "Interface IHttpClientFactoryService | FoundationaLLM",
    "keywords": "Interface IHttpClientFactoryService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. public interface IHttpClientFactoryService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateClient(string) Creates a HttpClient instance from the provided client name. The client name must be registered in the IHttpClientFactory configuration. The headers added to the request are: X-API-KEY: The API key for the target API. X-USER-IDENTITY: The user identity information for the current user. HttpClient CreateClient(string clientName) Parameters clientName string The named HttpClient client configuration. Returns HttpClient"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHubAPIService.html",
    "title": "Interface IHubAPIService | FoundationaLLM",
    "keywords": "Interface IHubAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Calls endpoints available on all hub API services. public interface IHubAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Status() Gets the status of the Hub API service. Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IIndexingService.html",
    "title": "Interface IIndexingService | FoundationaLLM",
    "keywords": "Interface IIndexingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides indexing capabilities for embedding vectors. public interface IIndexingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IManagementProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IManagementProviderService.html",
    "title": "Interface IManagementProviderService | FoundationaLLM",
    "keywords": "Interface IManagementProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides core services required by the Management API. public interface IManagementProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HandleDeleteAsync(string, UnifiedUserIdentity?) Handles a HTTP DELETE request for a specified resource path. Task HandleDeleteAsync(string resourcePath, UnifiedUserIdentity? userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task HandleGetAsync(string, UnifiedUserIdentity?) Handles a HTTP GET request for a specified resource path. Task<object> HandleGetAsync(string resourcePath, UnifiedUserIdentity? userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. HandlePostAsync(string, string, UnifiedUserIdentity?) Handles a HTTP POST request for a specified resource path. Task<object> HandlePostAsync(string resourcePath, string requestPayload, UnifiedUserIdentity? userIdentity) Parameters resourcePath string The resource path. requestPayload string The request payload. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IPromptHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IPromptHubAPIService.html",
    "title": "Interface IPromptHubAPIService | FoundationaLLM",
    "keywords": "Interface IPromptHubAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for a prompt hub service public interface IPromptHubAPIService : IHubAPIService, ICacheControlAPIService Inherited Members IHubAPIService.Status() ICacheControlAPIService.RefreshConfigurationCache() ICacheControlAPIService.RefreshCache(string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ResolveRequest(string, string, string) Used to get prompts for a target agent and user context. Task<PromptHubResponse> ResolveRequest(string promptContainer, string sessionId, string promptName = \"default\") Parameters promptContainer string The prompt container from which prompt values will be retrieved. sessionId string The session ID. promptName string Name of the prompt for which to retrieve prompt values. Returns Task<PromptHubResponse> Returns a PromptHubResponse object containing the list of prompts for the specified agent."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderService.html",
    "title": "Interface IResourceProviderService | FoundationaLLM",
    "keywords": "Interface IResourceProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides the core services implemented by all resource providers. public interface IResourceProviderService : IManagementProviderService Inherited Members IManagementProviderService.HandleGetAsync(string, UnifiedUserIdentity) IManagementProviderService.HandlePostAsync(string, string, UnifiedUserIdentity) IManagementProviderService.HandleDeleteAsync(string, UnifiedUserIdentity) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Indicates whether the resource provider is initialized or not. bool IsInitialized { get; } Property Value bool Name The name of the resource provider. string Name { get; } Property Value string Methods GetResource<T>(string) Gets a resource based on its logical path. T GetResource<T>(string resourcePath) where T : class Parameters resourcePath string The logical path of the resource. Returns T The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. UpsertResourceAsync<T>(string, T) Creates or updates a resource based on its logical path. Task<string> UpsertResourceAsync<T>(string resourcePath, T resource) where T : class Parameters resourcePath string The logical path of the resource. resource T The instance of the resource being created or updated. Returns Task<string> The object id of the resource. Type Parameters T The type of the resource."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceValidatorFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceValidatorFactory.html",
    "title": "Interface IResourceValidatorFactory | FoundationaLLM",
    "keywords": "Interface IResourceValidatorFactory Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides methods for getting validators. public interface IResourceValidatorFactory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetValidator(Type) Gets a validator for the Type parameter, providing a non-generic option to resolve validators at runtime. object? GetValidator(Type type) Parameters type Type The type of object being validated. Returns object GetValidator<T>() Gets a validator for the specified type. IValidator<T>? GetValidator<T>() where T : class Returns IValidator<T> Type Parameters T The type of object being validated."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html",
    "title": "Interface IStorageService | FoundationaLLM",
    "keywords": "Interface IStorageService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with a storage. public interface IStorageService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceName The optional instance name of the storage service. string? InstanceName { get; set; } Property Value string Methods FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITextEmbeddingService.html",
    "title": "Interface ITextEmbeddingService | FoundationaLLM",
    "keywords": "Interface ITextEmbeddingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides text embedding capabilities. public interface ITextEmbeddingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetEmbeddingAsync(string) Creates the vector embedding for a specified text. Task<(Embedding Embedding, int TokenCount)> GetEmbeddingAsync(string text) Parameters text string The text which needs to be embedded. Returns Task<(Embedding Embedding, int TokenCount)> Response containing the vector embedding and the amount of tokens used. GetEmbeddingsAsync(IList<string>) Creates the vector embeddings for a specified list of texts. Task<(IList<Embedding> Embeddings, int TokenCount)> GetEmbeddingsAsync(IList<string> texts) Parameters texts IList<string> The list of texts which need to be embedded. Returns Task<(IList<Embedding> Embeddings, int TokenCount)> Response containing the list of vector embeddings and the amount of tokens used."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITextSplitterService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITextSplitterService.html",
    "title": "Interface ITextSplitterService | FoundationaLLM",
    "keywords": "Interface ITextSplitterService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Represents a text splitter. public interface ITextSplitterService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods SplitPlainText(string) Splits plain text into multiple chunks. (List<string> TextChunks, string Message) SplitPlainText(string text) Parameters text string The plain text to split. Returns (List<string> TextChunks, string Message) A list of strings containing the result of the split and a message with optional details about the split result."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITokenizerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITokenizerService.html",
    "title": "Interface ITokenizerService | FoundationaLLM",
    "keywords": "Interface ITokenizerService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Represents a text tokenizer. public interface ITokenizerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Decode(int[], string) Decode an array of integer token ids. string Decode(int[] tokens, string encoderName) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string) Encode a string with a set of allowed special tokens that are not broken apart. List<int> Encode(string text, string encoderName) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html",
    "title": "Interface IUserClaimsProviderService | FoundationaLLM",
    "keywords": "Interface IUserClaimsProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object. public interface IUserClaimsProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.html",
    "title": "Namespace FoundationaLLM.Common.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Interfaces Interfaces IAPIKeyValidationService Common interface for X-API-Key header validation. IAgentFactoryAPIService Exposes functionality for calling the Agent Factory API. IAgentHubAPIService Interface for the AgentHub Service. IAuthorizationService Defines methods exposed by the Authorization service. IAzureResourceManagerService Provides services to interact with the Azure Resource Manager (ARM) infrastructure. ICacheControlAPIService Contains base functionality for calling the underlying API service. ICacheService Caches objects. ICallContext Stores context information for the current HTTP request. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. IDataSourceHubAPIService Interface for the Agent Factory Service. IDownstreamAPIService Interface for calling a downstream API. IDownstreamAPISettings One or more downstream APIs with a base URL and API key for authentication. IEventService Provides services to interact with an eventing engine. IGroupMembershipService Provides group membership services. IHttpClientFactoryService Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. IHubAPIService Calls endpoints available on all hub API services. IIndexingService Provides indexing capabilities for embedding vectors. IManagementProviderService Provides core services required by the Management API. IPromptHubAPIService Interface for a prompt hub service IResourceProviderService Provides the core services implemented by all resource providers. IResourceValidatorFactory Provides methods for getting validators. IStorageService Provides services to interact with a storage. ITextEmbeddingService Provides text embedding capabilities. ITextSplitterService Represents a text splitter. ITokenizerService Represents a text tokenizer. IUserClaimsProviderService Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object."
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html",
    "title": "Class CallContextMiddleware | FoundationaLLM",
    "keywords": "Class CallContextMiddleware Namespace FoundationaLLM.Common.Middleware Assembly FoundationaLLM.Common.dll Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. public class CallContextMiddleware Inheritance object CallContextMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CallContextMiddleware(RequestDelegate) Initializes a new instance of the CallContextMiddleware class. public CallContextMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IUserClaimsProviderService, IGroupMembershipService, ICallContext, IOptions<InstanceSettings>) Executes the middleware. public Task InvokeAsync(HttpContext context, IUserClaimsProviderService claimsProviderService, IGroupMembershipService groupMembershipService, ICallContext callContext, IOptions<InstanceSettings> instanceSettings) Parameters context HttpContext The current HTTP request context. claimsProviderService IUserClaimsProviderService Resolves user claims to a UnifiedUserIdentity object. groupMembershipService IGroupMembershipService Provides group membership services for user principals. callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. instanceSettings IOptions<InstanceSettings> Contains the FoundationaLLM instance configuration settings. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.html",
    "title": "Namespace FoundationaLLM.Common.Middleware | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Middleware Classes CallContextMiddleware Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.AgentBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.AgentBase.html",
    "title": "Class AgentBase | FoundationaLLM",
    "keywords": "Class AgentBase Namespace FoundationaLLM.Common.Models.Agents Assembly FoundationaLLM.Common.dll Base agent metadata model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(KnowledgeManagementAgent), \"knowledge-management\")] [JsonDerivedType(typeof(InternalContextAgent), \"internal-context\")] public class AgentBase : ResourceBase Inheritance object ResourceName ResourceBase AgentBase Derived InternalContextAgent KnowledgeManagementAgent Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentType The object type of the agent. [JsonIgnore] public Type AgentType { get; } Property Value Type ConversationHistory The agent's conversation history configuration. [JsonPropertyName(\"conversation_history\")] public ConversationHistory? ConversationHistory { get; set; } Property Value ConversationHistory Gatekeeper The agent's Gatekeeper configuration. [JsonPropertyName(\"gatekeeper\")] public Gatekeeper? Gatekeeper { get; set; } Property Value Gatekeeper LanguageModel The agent's language model configuration. [JsonPropertyName(\"language_model\")] public LanguageModel? LanguageModel { get; set; } Property Value LanguageModel OrchestrationSettings Settings for the orchestration service. [JsonPropertyName(\"orchestration_settings\")] public OrchestrationSettings? OrchestrationSettings { get; set; } Property Value OrchestrationSettings PromptObjectId The agent's prompt. [JsonPropertyName(\"prompt_object_id\")] public string? PromptObjectId { get; set; } Property Value string SessionsEnabled Indicates whether sessions are enabled for the agent. [JsonPropertyName(\"sessions_enabled\")] public bool SessionsEnabled { get; set; } Property Value bool Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.AgentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.AgentTypes.html",
    "title": "Class AgentTypes | FoundationaLLM",
    "keywords": "Class AgentTypes Namespace FoundationaLLM.Common.Models.Agents Assembly FoundationaLLM.Common.dll Contains constants for the types of agents. public static class AgentTypes Inheritance object AgentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Analytic Analytic agents are best for querying, analyzing, calculating, and reporting on tabular data. public const string Analytic = \"analytic\" Field Value string Basic Basic agent without practical functionality. Used as base for all the other agents. public const string Basic = \"basic\" Field Value string InternalContext Internal context agents are for passing through user prompts directly to the LLM. public const string InternalContext = \"internal-context\" Field Value string KnowledgeManagement Knowledge Management agents are best for Q&A, summarization, and reasoning over textual data. public const string KnowledgeManagement = \"knowledge-management\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.ConversationHistory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.ConversationHistory.html",
    "title": "Class ConversationHistory | FoundationaLLM",
    "keywords": "Class ConversationHistory Namespace FoundationaLLM.Common.Models.Agents Assembly FoundationaLLM.Common.dll Agent conversation history settings. public class ConversationHistory Inheritance object ConversationHistory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Indicates whether the conversation history is enabled. [JsonPropertyName(\"enabled\")] public bool Enabled { get; set; } Property Value bool MaxHistory The maximum number of turns to store in the conversation history. [JsonPropertyName(\"max_history\")] public int MaxHistory { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.Gatekeeper.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.Gatekeeper.html",
    "title": "Class Gatekeeper | FoundationaLLM",
    "keywords": "Class Gatekeeper Namespace FoundationaLLM.Common.Models.Agents Assembly FoundationaLLM.Common.dll Agent Gatekeeper settings. public class Gatekeeper Inheritance object Gatekeeper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Options If UseSystemSetting is false, provides Gatekeeper feature selection. [JsonPropertyName(\"options\")] public string[]? Options { get; set; } Property Value string[] UseSystemSetting Indicates whether to abide by or override the system settings for the Gatekeeper. [JsonPropertyName(\"use_system_setting\")] public bool UseSystemSetting { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.InternalContextAgent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.InternalContextAgent.html",
    "title": "Class InternalContextAgent | FoundationaLLM",
    "keywords": "Class InternalContextAgent Namespace FoundationaLLM.Common.Models.Agents Assembly FoundationaLLM.Common.dll The Internal Context agent metadata model. public class InternalContextAgent : AgentBase Inheritance object ResourceName ResourceBase AgentBase InternalContextAgent Inherited Members AgentBase.Type AgentBase.LanguageModel AgentBase.SessionsEnabled AgentBase.ConversationHistory AgentBase.Gatekeeper AgentBase.OrchestrationSettings AgentBase.PromptObjectId AgentBase.AgentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors InternalContextAgent() Set default property values. public InternalContextAgent()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.KnowledgeManagementAgent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.KnowledgeManagementAgent.html",
    "title": "Class KnowledgeManagementAgent | FoundationaLLM",
    "keywords": "Class KnowledgeManagementAgent Namespace FoundationaLLM.Common.Models.Agents Assembly FoundationaLLM.Common.dll The Knowledge Management agent metadata model. public class KnowledgeManagementAgent : AgentBase Inheritance object ResourceName ResourceBase AgentBase KnowledgeManagementAgent Inherited Members AgentBase.Type AgentBase.LanguageModel AgentBase.SessionsEnabled AgentBase.ConversationHistory AgentBase.Gatekeeper AgentBase.OrchestrationSettings AgentBase.PromptObjectId AgentBase.AgentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgent() Set default property values. public KnowledgeManagementAgent() Properties ContentSourceProfileObjectId The vectorization content source profile. [JsonPropertyName(\"content_source_profile_object_id\")] public string? ContentSourceProfileObjectId { get; set; } Property Value string IndexingProfileObjectId The vectorization indexing profile resource path. [JsonPropertyName(\"indexing_profile_object_id\")] public string? IndexingProfileObjectId { get; set; } Property Value string TextEmbeddingProfileObjectId The vectorization text embedding profile resource path. [JsonPropertyName(\"text_embedding_profile_object_id\")] public string? TextEmbeddingProfileObjectId { get; set; } Property Value string TextPartitioningProfileObjectId The vectorization text partitioning profile resource path. [JsonPropertyName(\"text_partitioning_profile_object_id\")] public string? TextPartitioningProfileObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Agents.html",
    "title": "Namespace FoundationaLLM.Common.Models.Agents | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Agents Classes AgentBase Base agent metadata model. AgentTypes Contains constants for the types of agents. ConversationHistory Agent conversation history settings. Gatekeeper Agent Gatekeeper settings. InternalContextAgent The Internal Context agent metadata model. KnowledgeManagementAgent The Knowledge Management agent metadata model."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html",
    "title": "Class UnifiedUserIdentity | FoundationaLLM",
    "keywords": "Class UnifiedUserIdentity Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll Represents strongly-typed user identity information, regardless of the identity provider. public class UnifiedUserIdentity Inheritance object UnifiedUserIdentity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties GroupIds The list of the identifiers of the groups to which the user belongs. [JsonPropertyName(\"group_ids\")] public List<string> GroupIds { get; set; } Property Value List<string> Name The user's display name. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string UPN The User Principal Name (UPN) of the user. [JsonPropertyName(\"upn\")] public string? UPN { get; set; } Property Value string UserId The unique identifier of the user. [JsonPropertyName(\"user_id\")] public string? UserId { get; set; } Property Value string Username The username of the user used to authenticate. [JsonPropertyName(\"user_name\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Authentication Classes UnifiedUserIdentity Represents strongly-typed user identity information, regardless of the identity provider."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationRequest.html",
    "title": "Class ActionAuthorizationRequest | FoundationaLLM",
    "keywords": "Class ActionAuthorizationRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to authorize an action. public class ActionAuthorizationRequest Inheritance object ActionAuthorizationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Action The authorizable action for which authorization is requested. [JsonPropertyName(\"action\")] public required string Action { get; set; } Property Value string PrincipalId The id of the security principal requesting authorization. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string ResourcePath The resource for which authorization is requested. [JsonPropertyName(\"resource\")] public required string ResourcePath { get; set; } Property Value string SecurityGroupIds The list of security group ids to which the principal belongs. [JsonPropertyName(\"security_group_ids\")] public List<string> SecurityGroupIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationResult.html",
    "title": "Class ActionAuthorizationResult | FoundationaLLM",
    "keywords": "Class ActionAuthorizationResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of an action authorization request. public class ActionAuthorizationResult Inheritance object ActionAuthorizationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Authorized Indicates whether the action is authorized or not. [JsonPropertyName(\"authorized\")] public required bool Authorized { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Authorization Classes ActionAuthorizationRequest Represents a request to authorize an action. ActionAuthorizationResult Represents the result of an action authorization request."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.APICacheRefreshResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.APICacheRefreshResult.html",
    "title": "Class APICacheRefreshResult | FoundationaLLM",
    "keywords": "Class APICacheRefreshResult Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Contains the result of a cache refresh operation. public class APICacheRefreshResult Inheritance object APICacheRefreshResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Detail Details of the cache refresh operation from the called API. public string? Detail { get; set; } Property Value string Success Indicates whether the cache refresh operation was successful. public bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheItem.html",
    "title": "Class CacheItem | FoundationaLLM",
    "keywords": "Class CacheItem Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll The cached object. public class CacheItem Inheritance object CacheItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ExpirationTimeUtc The UTC expiration time of the object being cached. public DateTime? ExpirationTimeUtc { get; set; } Property Value DateTime? IsExpired Indicates whether the cached object expired or not. public bool IsExpired { get; } Property Value bool Value The value of the object being cached. public required object? Value { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheKey.html",
    "title": "Class CacheKey | FoundationaLLM",
    "keywords": "Class CacheKey Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Composite caching key. public class CacheKey Inheritance object CacheKey Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CacheKey(string, string) Composite caching key. public CacheKey(string name, string category) Parameters name string The name of the object identified by the cache key. category string The category of the object identified by the cache key. Fields Category The category of the object from the cache. public string Category Field Value string Name The name of the object from the cache. public string Name Field Value string Methods Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.html",
    "title": "Namespace FoundationaLLM.Common.Models.Cache | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Cache Classes APICacheRefreshResult Contains the result of a cache refresh operation. CacheItem The cached object. CacheKey Composite caching key."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Completion.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Completion.html",
    "title": "Class Completion | FoundationaLLM",
    "keywords": "Class Completion Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The completion object. public class Completion Inheritance object Completion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Text The completion text. public string? Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.CompletionPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.CompletionPrompt.html",
    "title": "Class CompletionPrompt | FoundationaLLM",
    "keywords": "Class CompletionPrompt Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The completion prompt object. public class CompletionPrompt Inheritance object CompletionPrompt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionPrompt(string, string, string) Constructor for Completion Prompt. public CompletionPrompt(string sessionId, string messageId, string prompt) Parameters sessionId string messageId string prompt string Properties Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string MessageId The messageId of the completion. public string MessageId { get; set; } Property Value string Prompt The completion prompt. public string Prompt { get; set; } Property Value string SessionId The sessionId associated with the completion. public string SessionId { get; set; } Property Value string Type The type of the completion. public string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.DocumentVector.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.DocumentVector.html",
    "title": "Class DocumentVector | FoundationaLLM",
    "keywords": "Class DocumentVector Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The document vector object. public record DocumentVector : IEquatable<DocumentVector> Inheritance object DocumentVector Implements IEquatable<DocumentVector> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DocumentVector(string, string, string, float[]?) Constructor for Document Vector. public DocumentVector(string itemId, string partitionKey, string containerName, float[]? vector = null) Parameters itemId string partitionKey string containerName string vector float[] Properties containerName The name of the container associated with the document vector. public string containerName { get; set; } Property Value string id The unique identifier. public string id { get; set; } Property Value string itemId The identifier of the item associated with the document vector. public string itemId { get; set; } Property Value string partitionKey The partition key associated with the document vector. public string partitionKey { get; set; } Property Value string vector The vector associated with the document. public float[]? vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Message.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Message.html",
    "title": "Class Message | FoundationaLLM",
    "keywords": "Class Message Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The message object. public record Message : IEquatable<Message> Inheritance object Message Implements IEquatable<Message> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Message(string, string, int?, string, float[]?, bool?, string, string?) Constructor for Message. public Message(string sessionId, string sender, int? tokens, string text, float[]? vector, bool? rating, string upn, string? senderDisplayName = null) Parameters sessionId string sender string tokens int? text string vector float[] rating bool? upn string senderDisplayName string Properties CompletionPromptId The identifier for the completion prompt associated with the message. public string? CompletionPromptId { get; set; } Property Value string Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string Id { get; set; } Property Value string Rating The rating associated with the message, if any. [SimpleField] public bool? Rating { get; set; } Property Value bool? Sender The sender of the message. [SimpleField] public string Sender { get; set; } Property Value string SenderDisplayName The display name of the message sender. This could be the name of the signed in user or the name of the agent. [SimpleField] public string? SenderDisplayName { get; set; } Property Value string SessionId The Partition key. [SimpleField] public string SessionId { get; set; } Property Value string Text The text content of the message. [SimpleField] public string Text { get; set; } Property Value string TimeStamp The timestamp when the message was created. [SimpleField] public DateTime TimeStamp { get; set; } Property Value DateTime Tokens The number of tokens associated with the message, if any. [SimpleField] public int? Tokens { get; set; } Property Value int? Type The type of the message. [SimpleField] public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Vector The vector associated with the message. [FieldBuilderIgnore] public float[]? Vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageHistoryItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageHistoryItem.html",
    "title": "Class MessageHistoryItem | FoundationaLLM",
    "keywords": "Class MessageHistoryItem Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll Represents an historic message sender and text item. public class MessageHistoryItem Inheritance object MessageHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MessageHistoryItem(string, string) Message history item public MessageHistoryItem(string sender, string text) Parameters sender string The sender of the message (e.g., \"Agent\", \"User\") text string The message text. Properties Sender The sender of the message (e.g. \"Agent\", \"User\"). [JsonPropertyName(\"sender\")] public string Sender { get; set; } Property Value string Text The message text. [JsonPropertyName(\"text\")] public string Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Session.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Session.html",
    "title": "Class Session | FoundationaLLM",
    "keywords": "Class Session Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The session object. public record Session : IEquatable<Session> Inheritance object Session Implements IEquatable<Session> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Session() Constructor for Session. public Session() Properties Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string Messages The list of messages associated with the session. [JsonIgnore] public List<Message> Messages { get; set; } Property Value List<Message> Name The name of the session. public string Name { get; set; } Property Value string SessionId The Partition key. public string SessionId { get; set; } Property Value string TokensUsed The number of tokens used in the session. public int? TokensUsed { get; set; } Property Value int? Type The type of the session. public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Methods AddMessage(Message) Adds a message to the list of messages associated with the session. public void AddMessage(Message message) Parameters message Message The message to be added. UpdateMessage(Message) Updates an existing message in the list of messages associated with the session. public void UpdateMessage(Message message) Parameters message Message The updated message."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.html",
    "title": "Namespace FoundationaLLM.Common.Models.Chat | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Chat Classes Completion The completion object. CompletionPrompt The completion prompt object. DocumentVector The document vector object. Message The message object. MessageHistoryItem Represents an historic message sender and text item. Session The session object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.AgentHubSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.AgentHubSettings.html",
    "title": "Class AgentHubSettings | FoundationaLLM",
    "keywords": "Class AgentHubSettings Namespace FoundationaLLM.Common.Models.Configuration.API Assembly FoundationaLLM.Common.dll The settings configuration options for a AgentHub service public class AgentHubSettings : SettingsBase Inheritance object SettingsBase AgentHubSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.DataSourceHubSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.DataSourceHubSettings.html",
    "title": "Class DataSourceHubSettings | FoundationaLLM",
    "keywords": "Class DataSourceHubSettings Namespace FoundationaLLM.Common.Models.Configuration.API Assembly FoundationaLLM.Common.dll The settings configuration options for a DataSourceHub service public class DataSourceHubSettings : SettingsBase Inheritance object SettingsBase DataSourceHubSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.PromptHubSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.PromptHubSettings.html",
    "title": "Class PromptHubSettings | FoundationaLLM",
    "keywords": "Class PromptHubSettings Namespace FoundationaLLM.Common.Models.Configuration.API Assembly FoundationaLLM.Common.dll The settings configuration options for a PromptHub Service public class PromptHubSettings : SettingsBase Inheritance object SettingsBase PromptHubSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.SettingsBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.SettingsBase.html",
    "title": "Class SettingsBase | FoundationaLLM",
    "keywords": "Class SettingsBase Namespace FoundationaLLM.Common.Models.Configuration.API Assembly FoundationaLLM.Common.dll SettingsBase class public class SettingsBase Inheritance object SettingsBase Derived AzureAIDirectServiceSettings LangChainServiceSettings SemanticKernelServiceSettings AgentHubSettings DataSourceHubSettings PromptHubSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The key that must be sent or validated against when sending requests to the service. public string? APIKey { get; init; } Property Value string APIUrl The uri of the target service. public string? APIUrl { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.API Classes AgentHubSettings The settings configuration options for a AgentHub service DataSourceHubSettings The settings configuration options for a DataSourceHub service PromptHubSettings The settings configuration options for a PromptHub Service SettingsBase SettingsBase class"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEntry.html",
    "title": "Class AppConfigurationEntry | FoundationaLLM",
    "keywords": "Class AppConfigurationEntry Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll Represents a single entry in the app configuration catalog. public class AppConfigurationEntry Inheritance object AppConfigurationEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AppConfigurationEntry(string, string?, string?, string?, string?, string?, object?, bool) Represents a single entry in the app configuration catalog. public AppConfigurationEntry(string key, string? minimumVersion, string? keyVaultSecretName = null, string? description = null, string? defaultValue = null, string? contentType = null, object? sampleObject = null, bool canBeEmpty = false) Parameters key string minimumVersion string keyVaultSecretName string description string defaultValue string contentType string sampleObject object canBeEmpty bool Properties CanBeEmpty If true, the configuration entry must exist but can be empty. public bool CanBeEmpty { get; } Property Value bool ContentType The content type of the configuration entry. public string? ContentType { get; } Property Value string DefaultValue The default value for the configuration entry. public string? DefaultValue { get; } Property Value string Description A description of the configuration entry. public string? Description { get; } Property Value string Key The App Configuration key. public string Key { get; } Property Value string KeyVaultSecretName The name of the Key Vault secret that contains the value for this configuration entry. public string? KeyVaultSecretName { get; } Property Value string MinimumVersion The minimum version of the app that is required to use this configuration entry. public string? MinimumVersion { get; } Property Value string SampleObject A sample object that represents the configuration entry. public object? SampleObject { get; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEventData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEventData.html",
    "title": "Class AppConfigurationEventData | FoundationaLLM",
    "keywords": "Class AppConfigurationEventData Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll The data associated with an Azure App Configuration Event Grid event. public class AppConfigurationEventData Inheritance object AppConfigurationEventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Etag The app configuration etag. [JsonPropertyName(\"etag\")] public required string Etag { get; set; } Property Value string Key The app configuration key name. [JsonPropertyName(\"key\")] public required string Key { get; set; } Property Value string Label The app configuration label. [JsonPropertyName(\"label\")] public required string Label { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationKeyVaultUri.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationKeyVaultUri.html",
    "title": "Class AppConfigurationKeyVaultUri | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyVaultUri Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll Provides details about an Azure Key Vault secret. public class AppConfigurationKeyVaultUri Inheritance object AppConfigurationKeyVaultUri Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Uri The URI identifying the Azure Key Vault secret. [JsonPropertyName(\"uri\")] public string? Uri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Classes AppConfigurationEntry Represents a single entry in the app configuration catalog. AppConfigurationEventData The data associated with an Azure App Configuration Event Grid event. AppConfigurationKeyVaultUri Provides details about an Azure Key Vault secret."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html",
    "title": "Class EntraSettings | FoundationaLLM",
    "keywords": "Class EntraSettings Namespace FoundationaLLM.Common.Models.Configuration.Authentication Assembly FoundationaLLM.Common.dll Represents settings specific to Entra. public class EntraSettings Inheritance object EntraSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Scopes The scopes associated with the Entra settings. public string? Scopes { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication Classes EntraSettings Represents settings specific to Entra."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html",
    "title": "Class ClientBrandingConfiguration | FoundationaLLM",
    "keywords": "Class ClientBrandingConfiguration Namespace FoundationaLLM.Common.Models.Configuration.Branding Assembly FoundationaLLM.Common.dll Provides configuration for client branding. public class ClientBrandingConfiguration Inheritance object ClientBrandingConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccentColor The accent color of the client in hex format. public string? AccentColor { get; set; } Property Value string AccentTextColor The accent text color of the client in hex format. public string? AccentTextColor { get; set; } Property Value string BackgroundColor The background color of the client in hex format. public string? BackgroundColor { get; set; } Property Value string CompanyName The display name of the client. public string? CompanyName { get; set; } Property Value string FavIconUrl The URL of the client's favicon. Can be an absolute URL or a relative URL. public string? FavIconUrl { get; set; } Property Value string KioskMode Flag indicating whether we use kiosk mode or not. public bool KioskMode { get; set; } Property Value bool LogoText The text to display next to the logo in the nav pane. Leave blank to not display any text. public string? LogoText { get; set; } Property Value string LogoUrl The URL of the client's logo. Can be an absolute URL or a relative URL. public string? LogoUrl { get; set; } Property Value string PageTitle The page title of the client. public string? PageTitle { get; set; } Property Value string PrimaryButtonBackgroundColor The background color of the client's primary button in hex format. public string? PrimaryButtonBackgroundColor { get; set; } Property Value string PrimaryButtonTextColor The text color of the client's primary button in hex format. public string? PrimaryButtonTextColor { get; set; } Property Value string PrimaryColor The primary color of the client in hex format. public string? PrimaryColor { get; set; } Property Value string PrimaryTextColor The text color that overlays the PrimaryColor of the client in hex format. public string? PrimaryTextColor { get; set; } Property Value string SecondaryButtonBackgroundColor The background color of the client's secondary button in hex format. public string? SecondaryButtonBackgroundColor { get; set; } Property Value string SecondaryButtonTextColor The text color of the client's secondary button in hex format. public string? SecondaryButtonTextColor { get; set; } Property Value string SecondaryColor The secondary color of the client in hex format. public string? SecondaryColor { get; set; } Property Value string SecondaryTextColor The text color that overlays the SecondaryColor of the client in hex format. public string? SecondaryTextColor { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Branding | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Branding Classes ClientBrandingConfiguration Provides configuration for client branding."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.EnvironmentVariableEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.EnvironmentVariableEntry.html",
    "title": "Class EnvironmentVariableEntry | FoundationaLLM",
    "keywords": "Class EnvironmentVariableEntry Namespace FoundationaLLM.Common.Models.Configuration.Environment Assembly FoundationaLLM.Common.dll Represents a single entry in the environment variable catalog. public class EnvironmentVariableEntry Inheritance object EnvironmentVariableEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EnvironmentVariableEntry(string, string, string?) Represents a single entry in the environment variable catalog. public EnvironmentVariableEntry(string name, string description, string? defaultValue = null) Parameters name string description string defaultValue string Properties DefaultValue The default value of the environment variable, if any. public string? DefaultValue { get; } Property Value string Description A description of the environment variable. public string Description { get; } Property Value string Name The name of the environment variable. public string Name { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Environment | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Environment Classes EnvironmentVariableEntry Represents a single entry in the environment variable catalog."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridAuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridAuthenticationTypes.html",
    "title": "Enum AzureEventGridAuthenticationTypes | FoundationaLLM",
    "keywords": "Enum AzureEventGridAuthenticationTypes Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Types of authentication for Azure Event Grid namespaces. public enum AzureEventGridAuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIKey = 2 API key authentication type. AzureIdentity = 1 Azure managed identity authentication type. Unknown = 0 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceProfile.html",
    "title": "Class AzureEventGridEventServiceProfile | FoundationaLLM",
    "keywords": "Class AzureEventGridEventServiceProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling in the AzureEventGridEventService event service. public class AzureEventGridEventServiceProfile Inheritance object AzureEventGridEventServiceProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventProcessingCycleSeconds The time interval in seconds between successive event processing cycles. public int EventProcessingCycleSeconds { get; set; } Property Value int Topics The list of EventGridTopicProfile topic profiles used to configure event handling for an Azure Event Grid namespace topic. public List<EventGridTopicProfile> Topics { get; set; } Property Value List<EventGridTopicProfile>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceSettings.html",
    "title": "Class AzureEventGridEventServiceSettings | FoundationaLLM",
    "keywords": "Class AzureEventGridEventServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Provides configuration settings to intialize the AzureEventGridEventService service. public class AzureEventGridEventServiceSettings Inheritance object AzureEventGridEventServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key used for authentication. This value should be set only if AuthenticationType has a value of APIKey. public string? APIKey { get; set; } Property Value string AuthenticationType A AzureEventGridAuthenticationTypes value indicating the type of authentication used. [JsonConverter(typeof(JsonStringEnumConverter))] public required AzureEventGridAuthenticationTypes AuthenticationType { get; set; } Property Value AzureEventGridAuthenticationTypes Endpoint The Azure Event Grid namespace endpoint. public string? Endpoint { get; set; } Property Value string NamespaceId The Azure resource identifier for the Azure Event Grid namespace. public required string NamespaceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventSet.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventSet.html",
    "title": "Class EventGridEventSet | FoundationaLLM",
    "keywords": "Class EventGridEventSet Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The event set used to configure event handling for a specific subset of events of a specified event type. public class EventGridEventSet Inheritance object EventGridEventSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Namespace The namespace associated with the event set. FoundationaLLM event subscribers can use this to attach handlers that process events from this set. public required string Namespace { get; set; } Property Value string Source The event source that defines the set. public required string Source { get; set; } Property Value string SubjectPrefix The event subject prefix that defines the set. public required string SubjectPrefix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventTypeProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventTypeProfile.html",
    "title": "Class EventGridEventTypeProfile | FoundationaLLM",
    "keywords": "Class EventGridEventTypeProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling for a specified Azure Event Grid event type. public class EventGridEventTypeProfile Inheritance object EventGridEventTypeProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventSets The list of EventGridEventSet event sets used to configure event handling for a specific subset of events of a specified event type. public List<EventGridEventSet> EventSets { get; set; } Property Value List<EventGridEventSet> EventType The name of the Azure Event Grid event type. public required string EventType { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridTopicProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridTopicProfile.html",
    "title": "Class EventGridTopicProfile | FoundationaLLM",
    "keywords": "Class EventGridTopicProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling for an Azure Event Grid namespace topic. public class EventGridTopicProfile Inheritance object EventGridTopicProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventTypeProfiles The list of EventGridEventTypeProfile event type profiles used to configure handling for event types. public List<EventGridEventTypeProfile> EventTypeProfiles { get; set; } Property Value List<EventGridEventTypeProfile> Name The name of the Azure Event Grid namespace topic. public required string Name { get; set; } Property Value string SubscriptionAvailable Indicates whether the subscription is available for use or not. [JsonIgnore] public bool SubscriptionAvailable { get; set; } Property Value bool SubscriptionName The topic subscription name. [JsonIgnore] public string? SubscriptionName { get; set; } Property Value string SubscriptionPrefix The prefix used for the topic subscription name. public required string SubscriptionPrefix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.LocalEventServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.LocalEventServiceSettings.html",
    "title": "Class LocalEventServiceSettings | FoundationaLLM",
    "keywords": "Class LocalEventServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize the LocalEventService service. public class LocalEventServiceSettings Inheritance object LocalEventServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventProcessingCycleSeconds The time interval in seconds between successive event processing cycles. public int EventProcessingCycleSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Events | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Events Classes AzureEventGridEventServiceProfile The profile used to configure event handling in the AzureEventGridEventService event service. AzureEventGridEventServiceSettings Provides configuration settings to intialize the AzureEventGridEventService service. EventGridEventSet The event set used to configure event handling for a specific subset of events of a specified event type. EventGridEventTypeProfile The profile used to configure event handling for a specified Azure Event Grid event type. EventGridTopicProfile The profile used to configure event handling for an Azure Event Grid namespace topic. LocalEventServiceSettings Provides configuration settings to initialize the LocalEventService service. Enums AzureEventGridAuthenticationTypes Types of authentication for Azure Event Grid namespaces."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.InstanceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.InstanceSettings.html",
    "title": "Class InstanceSettings | FoundationaLLM",
    "keywords": "Class InstanceSettings Namespace FoundationaLLM.Common.Models.Configuration.Instance Assembly FoundationaLLM.Common.dll Provides configuration settings for the current FoundationaLLM deployment instance. public class InstanceSettings Inheritance object InstanceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The unique identifier of the current FoundationaLLM deployment instance. Format is a GUID. public required string Id { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Instance | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Instance Classes InstanceSettings Provides configuration settings for the current FoundationaLLM deployment instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.KeyVaultSecretEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.KeyVaultSecretEntry.html",
    "title": "Class KeyVaultSecretEntry | FoundationaLLM",
    "keywords": "Class KeyVaultSecretEntry Namespace FoundationaLLM.Common.Models.Configuration.KeyVault Assembly FoundationaLLM.Common.dll Represents a single entry in the Key Vault catalog. public class KeyVaultSecretEntry Inheritance object KeyVaultSecretEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KeyVaultSecretEntry(string, string?, string?) Represents a single entry in the Key Vault catalog. public KeyVaultSecretEntry(string secretName, string? minimumVersion, string? description = null) Parameters secretName string minimumVersion string description string Properties Description A description of the Key Vault secret. public string? Description { get; set; } Property Value string MinimumVersion The minimum version of the app that is required to use this Key Vault secret. public string? MinimumVersion { get; } Property Value string SecretName The name of the secret in the Key Vault. public string SecretName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.KeyVault | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.KeyVault Classes KeyVaultSecretEntry Represents a single entry in the Key Vault catalog."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageAuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageAuthenticationTypes.html",
    "title": "Enum BlobStorageAuthenticationTypes | FoundationaLLM",
    "keywords": "Enum BlobStorageAuthenticationTypes Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Types of authentication for blob storage accounts. public enum BlobStorageAuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AccountKey = 2 Account key authentication type. AzureIdentity = 0 Azure managed identity authentication type. ConnectionString = 1 Connection string authentication type. Unknown = -1 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageServiceSettings.html",
    "title": "Class BlobStorageServiceSettings | FoundationaLLM",
    "keywords": "Class BlobStorageServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize a blob storage service. public record BlobStorageServiceSettings : IEquatable<BlobStorageServiceSettings> Inheritance object BlobStorageServiceSettings Implements IEquatable<BlobStorageServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountKey The account key used for authentication. This value should be set only if AuthenticationType has a value of AccountKey. public string? AccountKey { get; set; } Property Value string AccountName The name of the blob storage account. public string? AccountName { get; set; } Property Value string AuthenticationType A BlobStorageAuthenticationTypes value indicating the type of authentication used. [JsonConverter(typeof(JsonStringEnumConverter))] public required BlobStorageAuthenticationTypes AuthenticationType { get; set; } Property Value BlobStorageAuthenticationTypes ConnectionString The connection string used for authentication. This value should be set only if AuthenticationType has a value of ConnectionString. public string? ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html",
    "title": "Class BlobStorageSettings | FoundationaLLM",
    "keywords": "Class BlobStorageSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration options for a Blob Storage service. public record BlobStorageSettings : IEquatable<BlobStorageSettings> Inheritance object BlobStorageSettings Implements IEquatable<BlobStorageSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BlobStorageConnection The connection string for the blob storage. public required string BlobStorageConnection { get; set; } Property Value string BlobStorageContainer The name of the blob storage container. public required string BlobStorageContainer { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Storage | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Storage Classes BlobStorageServiceSettings Provides configuration settings to initialize a blob storage service. BlobStorageSettings Provides configuration options for a Blob Storage service. Enums BlobStorageAuthenticationTypes Types of authentication for blob storage accounts."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.TokenTextSplitterServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.TokenTextSplitterServiceSettings.html",
    "title": "Class TokenTextSplitterServiceSettings | FoundationaLLM",
    "keywords": "Class TokenTextSplitterServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Text Assembly FoundationaLLM.Common.dll Provides configuration settings that control token-based text splitting. public record TokenTextSplitterServiceSettings : IEquatable<TokenTextSplitterServiceSettings> Inheritance object TokenTextSplitterServiceSettings Implements IEquatable<TokenTextSplitterServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenTextSplitterServiceSettings(string, string, int, int) Provides configuration settings that control token-based text splitting. public TokenTextSplitterServiceSettings(string Tokenizer, string TokenizerEncoder, int ChunkSizeTokens, int OverlapSizeTokens) Parameters Tokenizer string The tokenizer used to split the test into tokens. TokenizerEncoder string The name of the encoder used for tokenization. ChunkSizeTokens int The target size in tokens for the resulting text chunks. OverlapSizeTokens int Teh target size in tokens for the overlapping parts of the adjacent text chunks. Properties ChunkSizeTokens The target size in tokens for the resulting text chunks. public int ChunkSizeTokens { get; init; } Property Value int OverlapSizeTokens Teh target size in tokens for the overlapping parts of the adjacent text chunks. public int OverlapSizeTokens { get; init; } Property Value int Tokenizer The tokenizer used to split the test into tokens. public string Tokenizer { get; init; } Property Value string TokenizerEncoder The name of the encoder used for tokenization. public string TokenizerEncoder { get; init; } Property Value string Methods FromDictionary(Dictionary<string, string>) Creates and instance of the class based on a dictionary. public static TokenTextSplitterServiceSettings FromDictionary(Dictionary<string, string> settings) Parameters settings Dictionary<string, string> The dictionary containing the settings. Returns TokenTextSplitterServiceSettings A TokenTextSplitterServiceSettings instance initialized with the values from the dictionary."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Text | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Text Classes TokenTextSplitterServiceSettings Provides configuration settings that control token-based text splitting."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html",
    "title": "Class UserProfile | FoundationaLLM",
    "keywords": "Class UserProfile Namespace FoundationaLLM.Common.Models.Configuration.Users Assembly FoundationaLLM.Common.dll The user profile object persisted in long-term storage. public record UserProfile : IEquatable<UserProfile> Inheritance object UserProfile Implements IEquatable<UserProfile> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfile(string) The user profile object persisted in long-term storage. public UserProfile(string UPN) Parameters UPN string The user's account user principal name. Properties Id The unique identifier. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Type The document type. [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string UPN The user principal name. [JsonPropertyName(\"upn\")] public string UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Users | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Users Classes UserProfile The user profile object persisted in long-term storage."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration Namespaces FoundationaLLM.Common.Models.Configuration.API FoundationaLLM.Common.Models.Configuration.AppConfiguration FoundationaLLM.Common.Models.Configuration.Authentication FoundationaLLM.Common.Models.Configuration.Branding FoundationaLLM.Common.Models.Configuration.Environment FoundationaLLM.Common.Models.Configuration.Events FoundationaLLM.Common.Models.Configuration.Instance FoundationaLLM.Common.Models.Configuration.KeyVault FoundationaLLM.Common.Models.Configuration.Storage FoundationaLLM.Common.Models.Configuration.Text FoundationaLLM.Common.Models.Configuration.Users"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.CallContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.CallContext.html",
    "title": "Class CallContext | FoundationaLLM",
    "keywords": "Class CallContext Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CallContext : ICallContext Inheritance object CallContext Implements ICallContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. public UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity InstanceId The unique identifier of the current FoundationaLLM deployment instance. public string? InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.html",
    "title": "Namespace FoundationaLLM.Common.Models.Context | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Context Classes CallContext Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventGridTopicSubscription.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventGridTopicSubscription.html",
    "title": "Class EventGridTopicSubscription | FoundationaLLM",
    "keywords": "Class EventGridTopicSubscription Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll The identifier of an Azure Event Grid topic subscription. public record EventGridTopicSubscription : IEquatable<EventGridTopicSubscription> Inheritance object EventGridTopicSubscription Implements IEquatable<EventGridTopicSubscription> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventGridTopicSubscription(string, string) The identifier of an Azure Event Grid topic subscription. public EventGridTopicSubscription(string Topic, string Subscription) Parameters Topic string The name of the Azure Event Grid namespace topic. Subscription string The name of the Azure Event Grid namespace topic subscription. Properties Subscription The name of the Azure Event Grid namespace topic subscription. public string Subscription { get; init; } Property Value string Topic The name of the Azure Event Grid namespace topic. public string Topic { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventArgs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventArgs.html",
    "title": "Class EventSetEventArgs | FoundationaLLM",
    "keywords": "Class EventSetEventArgs Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Event arguments required for event set event delegates. public class EventSetEventArgs : EventArgs Inheritance object EventArgs EventSetEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Events The list of subjects associated with the event. public required IList<CloudEvent> Events { get; set; } Property Value IList<CloudEvent> Namespace The namespace associated with the event set. public required string Namespace { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventDelegate.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventDelegate.html",
    "title": "Delegate EventSetEventDelegate | FoundationaLLM",
    "keywords": "Delegate EventSetEventDelegate Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Multicast delegate used by the Azure Event Grid event service to provide support for subscribing to event namespaces. public delegate void EventSetEventDelegate(object sender, EventSetEventArgs e) Parameters sender object The object raising the event. e EventSetEventArgs The EventSetEventArgs that contains the details about the events being raised. Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.html",
    "title": "Namespace FoundationaLLM.Common.Models.Events | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Events Classes EventGridTopicSubscription The identifier of an Azure Event Grid topic subscription. EventSetEventArgs Event arguments required for event set event delegates. Delegates EventSetEventDelegate Multicast delegate used by the Azure Event Grid event service to provide support for subscribing to event namespaces."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.AgentHubRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.AgentHubRequest.html",
    "title": "Class AgentHubRequest | FoundationaLLM",
    "keywords": "Class AgentHubRequest Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll Represents a request that is sent to an AgentHub to get lists of agents. public class AgentHubRequest : OrchestrationRequest Inheritance object OrchestrationRequest AgentHubRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt OrchestrationRequest.AgentName OrchestrationRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.AgentHubResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.AgentHubResponse.html",
    "title": "Class AgentHubResponse | FoundationaLLM",
    "keywords": "Class AgentHubResponse Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll The response returned from the Agent Hub. public record AgentHubResponse : IEquatable<AgentHubResponse> Inheritance object AgentHubResponse Implements IEquatable<AgentHubResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Agent Information about a requested agent from the Agent Hub. [JsonPropertyName(\"agent\")] public AgentMetadata? Agent { get; set; } Property Value AgentMetadata"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.AgentMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.AgentMetadata.html",
    "title": "Class AgentMetadata | FoundationaLLM",
    "keywords": "Class AgentMetadata Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll The information about an agent returned from the Agent Hub. public class AgentMetadata : MetadataBase Inheritance object MetadataBase AgentMetadata Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedDataSourceNames Datasources that are used or available to the agent. [JsonPropertyName(\"allowed_data_source_names\")] public List<string>? AllowedDataSourceNames { get; set; } Property Value List<string> EmbeddingModel The embedding model used by the agent. [JsonPropertyName(\"embedding_model\")] public EmbeddingModel? EmbeddingModel { get; set; } Property Value EmbeddingModel LanguageModel The lanauge model used by the agent. [JsonPropertyName(\"language_model\")] public LanguageModel? LanguageModel { get; set; } Property Value LanguageModel MaxMessageHistorySize The maximum number of messages from the chat history to be taken into consideration when building the prompt. [JsonPropertyName(\"max_message_history_size\")] public int? MaxMessageHistorySize { get; set; } Property Value int? Orchestrator The orchestration engine to use. [JsonPropertyName(\"orchestrator\")] public string? Orchestrator { get; set; } Property Value string PromptContainer The prompt container from which prompt values will be retrieved. [JsonPropertyName(\"prompt_container\")] public string? PromptContainer { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.BlobStorageDataSourceMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.BlobStorageDataSourceMetadata.html",
    "title": "Class BlobStorageDataSourceMetadata | FoundationaLLM",
    "keywords": "Class BlobStorageDataSourceMetadata Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll Blob Storage DataSource public record BlobStorageDataSourceMetadata : DataSourceMetadata, IEquatable<DataSourceMetadata>, IEquatable<BlobStorageDataSourceMetadata> Inheritance object DataSourceMetadata BlobStorageDataSourceMetadata Implements IEquatable<DataSourceMetadata> IEquatable<BlobStorageDataSourceMetadata> Inherited Members DataSourceMetadata.Name DataSourceMetadata.Description DataSourceMetadata.UnderlyingImplementation DataSourceMetadata.FileType DataSourceMetadata.Authentication DataSourceMetadata.Container DataSourceMetadata.Files DataSourceMetadata.DataDescription DataSourceMetadata.Dialect DataSourceMetadata.IncludeTables DataSourceMetadata.ExcludeTables DataSourceMetadata.FewShotExampleCount DataSourceMetadata.RowLevelSecurityEnabled DataSourceMetadata.IndexName DataSourceMetadata.TopN DataSourceMetadata.EmbeddingFieldName DataSourceMetadata.TextFieldName DataSourceMetadata.Sources DataSourceMetadata.RetrieverMode DataSourceMetadata.Company object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.DataSourceHubRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.DataSourceHubRequest.html",
    "title": "Class DataSourceHubRequest | FoundationaLLM",
    "keywords": "Class DataSourceHubRequest Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll The format of a Data Source Hub Request. public record DataSourceHubRequest : IEquatable<DataSourceHubRequest> Inheritance object DataSourceHubRequest Implements IEquatable<DataSourceHubRequest> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSources List of data sources to be returned from the Data Source Hub. [JsonPropertyName(\"data_sources\")] public List<string>? DataSources { get; set; } Property Value List<string> SessionId The session ID. [JsonPropertyName(\"session_id\")] public string? SessionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.DataSourceHubResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.DataSourceHubResponse.html",
    "title": "Class DataSourceHubResponse | FoundationaLLM",
    "keywords": "Class DataSourceHubResponse Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll Represents a response from the Data Source Hub. Includes a list of datasources and their configuration information. public record DataSourceHubResponse : IEquatable<DataSourceHubResponse> Inheritance object DataSourceHubResponse Implements IEquatable<DataSourceHubResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSources The list of data sources returned from a DataSource Hub request. [JsonPropertyName(\"data_sources\")] public List<DataSourceMetadata>? DataSources { get; set; } Property Value List<DataSourceMetadata>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.DataSourceMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.DataSourceMetadata.html",
    "title": "Class DataSourceMetadata | FoundationaLLM",
    "keywords": "Class DataSourceMetadata Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll Default set of properties for a DataSource returned from DataSource Hub. public record DataSourceMetadata : IEquatable<DataSourceMetadata> Inheritance object DataSourceMetadata Implements IEquatable<DataSourceMetadata> Derived BlobStorageDataSourceMetadata SQLDataSourceMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Authentication Authentication details for the data source. [JsonPropertyName(\"authentication\")] public Dictionary<string, string>? Authentication { get; set; } Property Value Dictionary<string, string> Company The name of the CXO's company. [JsonPropertyName(\"company\")] public string? Company { get; set; } Property Value string Container For blob storage, the container to search [JsonPropertyName(\"container\")] public string? Container { get; set; } Property Value string DataDescription Descriptor for the type of data in the data source. [JsonPropertyName(\"data_description\")] public string? DataDescription { get; set; } Property Value string Examples Survey data for a CSV file that contains survey results. Description Description of data source [JsonPropertyName(\"description\")] public string? Description { get; set; } Property Value string Dialect The dialect of the data source (SQL, etc) [JsonPropertyName(\"dialect\")] public string? Dialect { get; set; } Property Value string EmbeddingFieldName (Optional) The name of the field to use for embedding in the Search Service. [JsonPropertyName(\"embedding_field_name\")] public string? EmbeddingFieldName { get; set; } Property Value string ExcludeTables For a SQL data source, the tables to exclude from processing. [JsonPropertyName(\"exclude_tables\")] public List<string>? ExcludeTables { get; set; } Property Value List<string> FewShotExampleCount List of few shot examples for the prompt processing. [JsonPropertyName(\"few_shot_example_count\")] public int? FewShotExampleCount { get; set; } Property Value int? FileType File type of data source [JsonPropertyName(\"file_type\")] public string? FileType { get; set; } Property Value string Files For blob storage, the files to query. [JsonPropertyName(\"files\")] public List<string>? Files { get; set; } Property Value List<string> IncludeTables For a SQL data source, the tables to include for processing. [JsonPropertyName(\"include_tables\")] public List<string>? IncludeTables { get; set; } Property Value List<string> IndexName The name of the index for Search Service configuration. [JsonPropertyName(\"index_name\")] public string? IndexName { get; set; } Property Value string Name Name of data source [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string RetrieverMode The vector database. [JsonPropertyName(\"retriever_mode\")] public string? RetrieverMode { get; set; } Property Value string RowLevelSecurityEnabled Flag indicating if row level security is enabled. [JsonPropertyName(\"row_level_security_enabled\")] public bool? RowLevelSecurityEnabled { get; set; } Property Value bool? Sources Search filter elements. [JsonPropertyName(\"sources\")] public string[]? Sources { get; set; } Property Value string[] TextFieldName (Optional) The name of the field to use for raw text in the Search Service. [JsonPropertyName(\"text_field_name\")] public string? TextFieldName { get; set; } Property Value string TopN (Optional) The number of rows to return from the Search Service. [JsonPropertyName(\"top_n\")] public int? TopN { get; set; } Property Value int? UnderlyingImplementation Type of data source [JsonPropertyName(\"underlying_implementation\")] public string? UnderlyingImplementation { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.PromptHubRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.PromptHubRequest.html",
    "title": "Class PromptHubRequest | FoundationaLLM",
    "keywords": "Class PromptHubRequest Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll The format of a Prompt Hub request. public record PromptHubRequest : IEquatable<PromptHubRequest> Inheritance object PromptHubRequest Implements IEquatable<PromptHubRequest> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptContainer The prompt container from which prompt values will be retrieved. [JsonPropertyName(\"prompt_container\")] public string? PromptContainer { get; set; } Property Value string PromptName Name of the prompt for which the prompt values should be retrieved from the Prompt Hub. [JsonPropertyName(\"prompt_name\")] public string? PromptName { get; set; } Property Value string SessionId The session ID. [JsonPropertyName(\"session_id\")] public string? SessionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.PromptHubResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.PromptHubResponse.html",
    "title": "Class PromptHubResponse | FoundationaLLM",
    "keywords": "Class PromptHubResponse Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll Response from a Prompt Hub request. public record PromptHubResponse : IEquatable<PromptHubResponse> Inheritance object PromptHubResponse Implements IEquatable<PromptHubResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Prompt The prompt metadata object returned from a Prompt Hub request. [JsonPropertyName(\"prompt\")] public PromptMetadata? Prompt { get; set; } Property Value PromptMetadata"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.PromptMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.PromptMetadata.html",
    "title": "Class PromptMetadata | FoundationaLLM",
    "keywords": "Class PromptMetadata Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll PromptMetaData record public record PromptMetadata : IEquatable<PromptMetadata> Inheritance object PromptMetadata Implements IEquatable<PromptMetadata> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name Name of the prompt. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string PromptPrefix Text of the prompt prefix to be assigned to an agent. [JsonPropertyName(\"prompt_prefix\")] public string? PromptPrefix { get; set; } Property Value string PromptSuffix Text of the prompt suffix to be assigned to an agent. [JsonPropertyName(\"prompt_suffix\")] public string? PromptSuffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.SQLDataSourceMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.SQLDataSourceMetadata.html",
    "title": "Class SQLDataSourceMetadata | FoundationaLLM",
    "keywords": "Class SQLDataSourceMetadata Namespace FoundationaLLM.Common.Models.Hubs Assembly FoundationaLLM.Common.dll SQL DataSource public record SQLDataSourceMetadata : DataSourceMetadata, IEquatable<DataSourceMetadata>, IEquatable<SQLDataSourceMetadata> Inheritance object DataSourceMetadata SQLDataSourceMetadata Implements IEquatable<DataSourceMetadata> IEquatable<SQLDataSourceMetadata> Inherited Members DataSourceMetadata.Name DataSourceMetadata.Description DataSourceMetadata.UnderlyingImplementation DataSourceMetadata.FileType DataSourceMetadata.Authentication DataSourceMetadata.Container DataSourceMetadata.Files DataSourceMetadata.DataDescription DataSourceMetadata.Dialect DataSourceMetadata.IncludeTables DataSourceMetadata.ExcludeTables DataSourceMetadata.FewShotExampleCount DataSourceMetadata.RowLevelSecurityEnabled DataSourceMetadata.IndexName DataSourceMetadata.TopN DataSourceMetadata.EmbeddingFieldName DataSourceMetadata.TextFieldName DataSourceMetadata.Sources DataSourceMetadata.RetrieverMode DataSourceMetadata.Company object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Hubs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Hubs.html",
    "title": "Namespace FoundationaLLM.Common.Models.Hubs | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Hubs Classes AgentHubRequest Represents a request that is sent to an AgentHub to get lists of agents. AgentHubResponse The response returned from the Agent Hub. AgentMetadata The information about an agent returned from the Agent Hub. BlobStorageDataSourceMetadata Blob Storage DataSource DataSourceHubRequest The format of a Data Source Hub Request. DataSourceHubResponse Represents a response from the Data Source Hub. Includes a list of datasources and their configuration information. DataSourceMetadata Default set of properties for a DataSource returned from DataSource Hub. PromptHubRequest The format of a Prompt Hub request. PromptHubResponse Response from a Prompt Hub request. PromptMetadata PromptMetaData record SQLDataSourceMetadata SQL DataSource"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.ServiceStatusInfo.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.ServiceStatusInfo.html",
    "title": "Class ServiceStatusInfo | FoundationaLLM",
    "keywords": "Class ServiceStatusInfo Namespace FoundationaLLM.Common.Models.Infrastructure Assembly FoundationaLLM.Common.dll Represents the status of a service. public class ServiceStatusInfo Inheritance object ServiceStatusInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Instance The instance of the service. public string? Instance { get; set; } Property Value string Message The message associated with the status. public string? Message { get; set; } Property Value string Name The name of the service. public string? Name { get; set; } Property Value string Status The status of the service. public string? Status { get; set; } Property Value string Version The deployed FoundationaLLM version of the service. public string? Version { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.html",
    "title": "Namespace FoundationaLLM.Common.Models.Infrastructure | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Infrastructure Classes ServiceStatusInfo Represents the status of a service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.EmbeddingModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.EmbeddingModel.html",
    "title": "Class EmbeddingModel | FoundationaLLM",
    "keywords": "Class EmbeddingModel Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll public class EmbeddingModel Inheritance object EmbeddingModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ApiEndpoint The endpoint to use to access the language model. [JsonPropertyName(\"api_endpoint\")] public string? ApiEndpoint { get; set; } Property Value string ApiKey The API key of the language model endpoint to use to access the language model. [JsonPropertyName(\"api_key\")] public string? ApiKey { get; set; } Property Value string ApiVersion API version of the language model endpoint. [JsonPropertyName(\"api_version\")] public string? ApiVersion { get; set; } Property Value string ChunkSize The chunk size to use when creating vectors from the embedding model. [JsonPropertyName(\"chunk_size\")] public int ChunkSize { get; set; } Property Value int Deployment Name of the embedding model deployment. [JsonPropertyName(\"deployment\")] public string? Deployment { get; set; } Property Value string Model Name of the embedding model. [JsonPropertyName(\"model\")] public string? Model { get; set; } Property Value string Provider The provider of the emberdding model. [JsonPropertyName(\"provider\")] public string? Provider { get; set; } Property Value string Type The type of the embedding model. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.LanguageModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.LanguageModel.html",
    "title": "Class LanguageModel | FoundationaLLM",
    "keywords": "Class LanguageModel Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll Language model metadata model. public class LanguageModel Inheritance object LanguageModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ApiEndpoint The endpoint to use to access the language model. [JsonPropertyName(\"api_endpoint\")] public string? ApiEndpoint { get; set; } Property Value string ApiKey The API key of the language model endpoint to use to access the language model. [JsonPropertyName(\"api_key\")] public string? ApiKey { get; set; } Property Value string ApiVersion API version of the language model endpoint. [JsonPropertyName(\"api_version\")] public string? ApiVersion { get; set; } Property Value string Deployment Name of the deployment of the model. [JsonPropertyName(\"deployment\")] public string? Deployment { get; set; } Property Value string Provider Provider of the language model. [JsonPropertyName(\"provider\")] public string? Provider { get; set; } Property Value string Temperature Temperature value to assign on the language model. This indicates the \"degree of creativity\" the model can use when generating completions. [JsonPropertyName(\"temperature\")] [RegularExpression(\"^(?:0?(?:\\\\.\\\\d)?|1(\\\\.0?)?)$\", ErrorMessage = \"The temperature values must be between 0 and 1.\")] public float Temperature { get; set; } Property Value float Type Type property. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string UseChat Flag indicating whether or not to use the chat model. [JsonPropertyName(\"use_chat\")] public bool UseChat { get; set; } Property Value bool Version Version of the deployed model. [JsonPropertyName(\"version\")] public string? Version { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.MetadataBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.MetadataBase.html",
    "title": "Class MetadataBase | FoundationaLLM",
    "keywords": "Class MetadataBase Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll Metadata model base class. public class MetadataBase Inheritance object MetadataBase Derived AgentMetadata DataSourceBase LegacyAgentMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Description property. [JsonPropertyName(\"description\")] public string? Description { get; set; } Property Value string Name Name property. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string Type Type property. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.html",
    "title": "Namespace FoundationaLLM.Common.Models.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Metadata Classes EmbeddingModel LanguageModel Language model metadata model. MetadataBase Metadata model base class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ModelRegistry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ModelRegistry.html",
    "title": "Class ModelRegistry | FoundationaLLM",
    "keywords": "Class ModelRegistry Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll The model registry object. public class ModelRegistry Inheritance object ModelRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Models Dictionary of model names and their corresponding entries in the registry. public static readonly Dictionary<string, ModelRegistryEntry> Models Field Value Dictionary<string, ModelRegistryEntry> Methods IdentifyType(JObject) Identifies the type of the object based on its properties. public static ModelRegistryEntry? IdentifyType(JObject obj) Parameters obj JObject Returns ModelRegistryEntry"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ModelRegistryEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ModelRegistryEntry.html",
    "title": "Class ModelRegistryEntry | FoundationaLLM",
    "keywords": "Class ModelRegistryEntry Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll The model registry entry object. public class ModelRegistryEntry Inheritance object ModelRegistryEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NamingProperties The list of naming properties associated with the model registry entry. public List<string>? NamingProperties { get; init; } Property Value List<string> Type The Type associated with the model registry entry. public Type? Type { get; init; } Property Value Type TypeMatchingProperties The list of type-matching properties associated with the model registry entry. public List<string>? TypeMatchingProperties { get; init; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionRequest.html",
    "title": "Class CompletionRequest | FoundationaLLM",
    "keywords": "Class CompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The completion request object. public class CompletionRequest : OrchestrationRequest Inheritance object OrchestrationRequest CompletionRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt OrchestrationRequest.AgentName OrchestrationRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MessageHistory The message history associated with the completion request. [JsonPropertyName(\"message_history\")] public List<MessageHistoryItem>? MessageHistory { get; init; } Property Value List<MessageHistoryItem>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionResponse.html",
    "title": "Class CompletionResponse | FoundationaLLM",
    "keywords": "Class CompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Response from a language model. public class CompletionResponse Inheritance object CompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionResponse() Initialize a completion response. public CompletionResponse() CompletionResponse(string, string, int, int, float[]?) Initialize a completion response public CompletionResponse(string completion, string userPrompt, int userPromptTokens, int responseTokens, float[]? userPromptEmbedding) Parameters completion string The completion response from the language model. userPrompt string The user prompt the language model responded to. userPromptTokens int The number of tokens in the prompt. responseTokens int The number of tokens in the completion. userPromptEmbedding float[] User prompt embedding. Properties AgentName The name of the FoundationaLLM agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string Completion The completion response from the language model. [JsonPropertyName(\"completion\")] public string Completion { get; set; } Property Value string CompletionTokens The number of tokens in the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int FullPrompt The full prompt composed by the LLM. [JsonPropertyName(\"full_prompt\")] public string? FullPrompt { get; set; } Property Value string PromptTemplate The prompt template used by the LLM. [JsonPropertyName(\"prompt_template\")] public string? PromptTemplate { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalCost The total cost of executing the completion operation. [JsonPropertyName(\"total_cost\")] public float TotalCost { get; set; } Property Value float TotalTokens The total number of tokens. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; } Property Value int UserPrompt The user prompt the language model responded to. [JsonPropertyName(\"user_prompt\")] public string UserPrompt { get; set; } Property Value string UserPromptEmbedding User prompt embedding. [JsonPropertyName(\"user_prompt_embedding\")] public float[]? UserPromptEmbedding { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html",
    "title": "Class BlobStorageConfiguration | FoundationaLLM",
    "keywords": "Class BlobStorageConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Blob storage configuration settings. public class BlobStorageConfiguration Inheritance object BlobStorageConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string ConnectionStringSecretName The connection string key vault secret name that is retrieved from key vault. [JsonPropertyName(\"connection_string_secret\")] public string? ConnectionStringSecretName { get; set; } Property Value string ContainerName The name of the container [JsonPropertyName(\"container\")] public string? ContainerName { get; set; } Property Value string Files The list of files to get [JsonPropertyName(\"files\")] public List<string>? Files { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.CXOConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.CXOConfiguration.html",
    "title": "Class CXOConfiguration | FoundationaLLM",
    "keywords": "Class CXOConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Configuration for the CXO agent. public class CXOConfiguration : SearchServiceConfiguration Inheritance object SearchServiceConfiguration CXOConfiguration Inherited Members SearchServiceConfiguration.Endpoint SearchServiceConfiguration.KeySecret SearchServiceConfiguration.IndexName SearchServiceConfiguration.TopN SearchServiceConfiguration.EmbeddingFieldName SearchServiceConfiguration.TextFieldName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Company The name of the CXO's company. [JsonPropertyName(\"company\")] public required string Company { get; set; } Property Value string ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string RetrieverMode The vector database. [JsonPropertyName(\"retriever_mode\")] public required string RetrieverMode { get; set; } Property Value string Sources Search filter elements. [JsonPropertyName(\"sources\")] public string[]? Sources { get; set; } Property Value string[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html",
    "title": "Class SQLDatabaseConfiguration | FoundationaLLM",
    "keywords": "Class SQLDatabaseConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll SQL Database configuration settings. public class SQLDatabaseConfiguration Inheritance object SQLDatabaseConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string DatabaseName The name of the database on the server. [JsonPropertyName(\"database_name\")] public string? DatabaseName { get; set; } Property Value string Dialect The SQL dialect [JsonPropertyName(\"dialect\")] public string? Dialect { get; set; } Property Value string ExcludeTables List of tables to allow access to in the database. [JsonPropertyName(\"exclude_tables\")] public List<string> ExcludeTables { get; set; } Property Value List<string> FewShotExampleCount The number of rows from each table to provide as examples to the language model. [JsonPropertyName(\"few_shot_example_count\")] public int FewShotExampleCount { get; set; } Property Value int Host The database server host name. [JsonPropertyName(\"host\")] public string? Host { get; set; } Property Value string IncludeTables List of tables to allow access to in the database. [JsonPropertyName(\"include_tables\")] public List<string> IncludeTables { get; set; } Property Value List<string> PasswordSecretSettingKeyName The name of the secret in Key Vault from where the password can be retrieved. [JsonPropertyName(\"password_secret_setting_key_name\")] public string? PasswordSecretSettingKeyName { get; set; } Property Value string Port The port number of the database on the host. [JsonPropertyName(\"port\")] public int Port { get; set; } Property Value int RowLevelSecurityEnabled Flag indicating whether row level security is enabled. [JsonPropertyName(\"row_level_security_enabled\")] public bool RowLevelSecurityEnabled { get; set; } Property Value bool Username The username for connecting to the database. [JsonPropertyName(\"username\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html",
    "title": "Class SearchServiceConfiguration | FoundationaLLM",
    "keywords": "Class SearchServiceConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Search Service configuration settings. public class SearchServiceConfiguration Inheritance object SearchServiceConfiguration Derived CXOConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string EmbeddingFieldName (Optional) The name of the field to use for embedding in the Search Service. [JsonPropertyName(\"embedding_field_name\")] public string? EmbeddingFieldName { get; set; } Property Value string Endpoint The endpoint of the Search Service [JsonPropertyName(\"endpoint\")] public string? Endpoint { get; set; } Property Value string IndexName The name of the index in Azure AI Search [JsonPropertyName(\"index_name\")] public string? IndexName { get; set; } Property Value string KeySecret The name of key vault secret containing the access key [JsonPropertyName(\"key_secret\")] public string? KeySecret { get; set; } Property Value string TextFieldName (Optional) The name of the field to use for raw text in the Search Service. [JsonPropertyName(\"text_field_name\")] public string? TextFieldName { get; set; } Property Value string TopN (Optional) The number of rows to return from the index search [JsonPropertyName(\"top_n\")] public int? TopN { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Classes BlobStorageConfiguration Blob storage configuration settings. CXOConfiguration Configuration for the CXO agent. SQLDatabaseConfiguration SQL Database configuration settings. SearchServiceConfiguration Search Service configuration settings."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.BlobStorageDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.BlobStorageDataSource.html",
    "title": "Class BlobStorageDataSource | FoundationaLLM",
    "keywords": "Class BlobStorageDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Blob storage data source metadata model. public class BlobStorageDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase BlobStorageDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Blob storage configuration settings. [JsonPropertyName(\"configuration\")] public BlobStorageConfiguration? Configuration { get; set; } Property Value BlobStorageConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.CXODataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.CXODataSource.html",
    "title": "Class CXODataSource | FoundationaLLM",
    "keywords": "Class CXODataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll CXO data source metadata model. public class CXODataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase CXODataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonPropertyName(\"configuration\")] public CXOConfiguration? Configuration { get; set; } Property Value CXOConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "keywords": "Class DataSourceBase Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Data Source base class. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"underlying_implementation\")] [JsonDerivedType(typeof(BlobStorageDataSource), \"blob-storage\")] [JsonDerivedType(typeof(CXODataSource), \"cxo\")] [JsonDerivedType(typeof(SearchServiceDataSource), \"search-service\")] [JsonDerivedType(typeof(SQLDatabaseDataSource), \"sql\")] public class DataSourceBase : MetadataBase Inheritance object MetadataBase DataSourceBase Derived BlobStorageDataSource CXODataSource SQLDatabaseDataSource SearchServiceDataSource Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataDescription Descriptor for the type of data in the data source. [JsonPropertyName(\"data_description\")] public string? DataDescription { get; set; } Property Value string Examples Survey data for a CSV file that contains survey results."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SQLDatabaseDataSource.html",
    "title": "Class SQLDatabaseDataSource | FoundationaLLM",
    "keywords": "Class SQLDatabaseDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll SQL Database data source metadata model. public class SQLDatabaseDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SQLDatabaseDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration SQL Database configuration settings. [JsonPropertyName(\"configuration\")] public SQLDatabaseConfiguration? Configuration { get; set; } Property Value SQLDatabaseConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SearchServiceDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SearchServiceDataSource.html",
    "title": "Class SearchServiceDataSource | FoundationaLLM",
    "keywords": "Class SearchServiceDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Search service data source metadata model. public class SearchServiceDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SearchServiceDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonPropertyName(\"configuration\")] public SearchServiceConfiguration? Configuration { get; set; } Property Value SearchServiceConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Classes BlobStorageDataSource Blob storage data source metadata model. CXODataSource CXO data source metadata model. DataSourceBase Data Source base class. SQLDatabaseDataSource SQL Database data source metadata model. SearchServiceDataSource Search service data source metadata model."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AssistantCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AssistantCompletionMessage.html",
    "title": "Class AssistantCompletionMessage | FoundationaLLM",
    "keywords": "Class AssistantCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Assistant input message for a direct orchestration request. public class AssistantCompletionMessage : CompletionMessage Inheritance object CompletionMessage AssistantCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AssistantCompletionMessage() Initializes a new instance of the AssistantCompletionMessage class. public AssistantCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionInputData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionInputData.html",
    "title": "Class AzureAICompletionInputData | FoundationaLLM",
    "keywords": "Class AzureAICompletionInputData Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input data for a direct request to an Azure AI model. public class AzureAICompletionInputData Inheritance object AzureAICompletionInputData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputString Object defining the required input role and content key value pairs. [JsonPropertyName(\"input_string\")] public CompletionMessage[]? InputString { get; set; } Property Value CompletionMessage[] Parameters Model configuration parameters. [JsonPropertyName(\"parameters\")] public AzureAICompletionParameters? Parameters { get; set; } Property Value AzureAICompletionParameters"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionParameters.html",
    "title": "Class AzureAICompletionParameters | FoundationaLLM",
    "keywords": "Class AzureAICompletionParameters Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Supported model configuration parameters. public class AzureAICompletionParameters Inheritance object AzureAICompletionParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DoSample Whether or not to use sampling; use greedy decoding otherwise. [JsonPropertyName(\"do_sample\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? DoSample { get; set; } Property Value bool? IgnoreEOS Whether to ignore the EOS token and continue generating tokens after the EOS token is generated. Defaults to False. [JsonPropertyName(\"ignore_eos\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? IgnoreEOS { get; set; } Property Value bool? MaxNewTokens The maximum number of tokens to generate. [JsonPropertyName(\"max_new_tokens\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? MaxNewTokens { get; set; } Property Value int? ReturnFullText Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. [JsonPropertyName(\"return_full_text\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? ReturnFullText { get; set; } Property Value bool? Temperature Controls randomness in the model. Lower values will make the model more deterministic and higher values will make the model more random. [JsonPropertyName(\"temperature\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? Temperature { get; set; } Property Value float? TopK The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. [JsonPropertyName(\"top_k\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopK { get; set; } Property Value float? TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling, defaults to null. [JsonPropertyName(\"top_p\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopP { get; set; } Property Value float?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionRequest.html",
    "title": "Class AzureAICompletionRequest | FoundationaLLM",
    "keywords": "Class AzureAICompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input for a direct Azure AI request. public class AzureAICompletionRequest Inheritance object AzureAICompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputData Input data for a direct request to an Azure AI model. [JsonPropertyName(\"input_data\")] public AzureAICompletionInputData? InputData { get; set; } Property Value AzureAICompletionInputData"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionResponse.html",
    "title": "Class AzureAICompletionResponse | FoundationaLLM",
    "keywords": "Class AzureAICompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The response from the Azure AI orchestration service. public class AzureAICompletionResponse Inheritance object AzureAICompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Output The completion output from an Azure AI model. [JsonPropertyName(\"output\")] public string? Output { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionParameters.html",
    "title": "Class AzureOpenAICompletionParameters | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionParameters Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Supported model configuration parameters. public class AzureOpenAICompletionParameters Inheritance object AzureOpenAICompletionParameters Derived AzureOpenAICompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BestOf Generates best_of completions server-side and returns the \"best\" (the one with the lowest log probability per token). [JsonPropertyName(\"best_of\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? BestOf { get; set; } Property Value int? Echo Echo back the prompt in addition to the completion. This parameter cannot be used with gpt-35-turbo. [JsonPropertyName(\"echo\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? Echo { get; set; } Property Value bool? FrequencyPenalty Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. [JsonPropertyName(\"frequency_penalty\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? FrequencyPenalty { get; set; } Property Value float? LogProbs Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. [JsonPropertyName(\"logprobs\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? LogProbs { get; set; } Property Value int? LogitBias Modify the likelihood of specified tokens appearing in the completion. [JsonPropertyName(\"logit_bias\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public LogitBias? LogitBias { get; set; } Property Value LogitBias MaxTokens The maximum number of tokens to generate. [JsonPropertyName(\"max_tokens\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? MaxTokens { get; set; } Property Value int? N How many completions to generate for each prompt. [JsonPropertyName(\"n\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? N { get; set; } Property Value int? PresencePenalty Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. [JsonPropertyName(\"presence_penalty\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? PresencePenalty { get; set; } Property Value float? Stop Up to four sequences where the API will stop generating further tokens. The returned text won't contain the stop sequence. For GPT-4 Turbo with Vision, up to two sequences are supported. [JsonPropertyName(\"stop\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string[]? Stop { get; set; } Property Value string[] Stream Whether to stream back partial progress. [JsonPropertyName(\"stream\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? Stream { get; set; } Property Value bool? Suffix The suffix that comes after a completion of inserted text. [JsonPropertyName(\"suffix\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Suffix { get; set; } Property Value string Temperature Controls randomness in the model. Lower values will make the model more deterministic and higher values will make the model more random. [JsonPropertyName(\"temperature\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? Temperature { get; set; } Property Value float? TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling, defaults to null. [JsonPropertyName(\"top_p\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopP { get; set; } Property Value float? User A unique identifier representing your end-user, which can help monitoring and detecting abuse. [JsonPropertyName(\"user\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? User { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionRequest.html",
    "title": "Class AzureOpenAICompletionRequest | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input for a direct Azure OpenAI request. public class AzureOpenAICompletionRequest : AzureOpenAICompletionParameters Inheritance object AzureOpenAICompletionParameters AzureOpenAICompletionRequest Inherited Members AzureOpenAICompletionParameters.MaxTokens AzureOpenAICompletionParameters.Temperature AzureOpenAICompletionParameters.TopP AzureOpenAICompletionParameters.LogitBias AzureOpenAICompletionParameters.User AzureOpenAICompletionParameters.N AzureOpenAICompletionParameters.Stream AzureOpenAICompletionParameters.LogProbs AzureOpenAICompletionParameters.Suffix AzureOpenAICompletionParameters.Echo AzureOpenAICompletionParameters.Stop AzureOpenAICompletionParameters.PresencePenalty AzureOpenAICompletionParameters.FrequencyPenalty AzureOpenAICompletionParameters.BestOf object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Messages Object defining the required input role and content key value pairs. [JsonPropertyName(\"messages\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionMessage[]? Messages { get; set; } Property Value CompletionMessage[] Prompt The prompt for which to generate completions. [JsonPropertyName(\"prompt\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Prompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponse.html",
    "title": "Class AzureOpenAICompletionResponse | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The response from the Azure OpenAI orchestration service. public class AzureOpenAICompletionResponse Inheritance object AzureOpenAICompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Choices The completion response choices. [JsonPropertyName(\"choices\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public AzureOpenAICompletionResponseChoice[]? Choices { get; set; } Property Value AzureOpenAICompletionResponseChoice[] Created The completion response created timestamp. [JsonPropertyName(\"created\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? Created { get; set; } Property Value int? Id The completion response ID. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Model The completion model used for the response. [JsonPropertyName(\"model\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Model { get; set; } Property Value string Object The completion response object. [JsonPropertyName(\"object\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Object { get; set; } Property Value string Usage Completion usage statistics. [JsonPropertyName(\"usage\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionUsage? Usage { get; set; } Property Value CompletionUsage"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponseChoice.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponseChoice.html",
    "title": "Class AzureOpenAICompletionResponseChoice | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionResponseChoice Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The completion response choice. public class AzureOpenAICompletionResponseChoice Inheritance object AzureOpenAICompletionResponseChoice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FinishReason The finish reason for the completion response. [JsonPropertyName(\"finish_reason\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? FinishReason { get; set; } Property Value string Index The completion response index. [JsonPropertyName(\"index\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? Index { get; set; } Property Value int? LogProbs The log probabilities on the logprobs most likely tokens, as well the chosen tokens. [JsonPropertyName(\"logprobs\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? LogProbs { get; set; } Property Value int? Message Contains the completion response message(s) if any. [JsonPropertyName(\"message\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionMessage? Message { get; set; } Property Value CompletionMessage Text The completion response text. [JsonPropertyName(\"text\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionMessage.html",
    "title": "Class CompletionMessage | FoundationaLLM",
    "keywords": "Class CompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Object defining the completion role and content key value pairs. public class CompletionMessage Inheritance object CompletionMessage Derived AssistantCompletionMessage SystemCompletionMessage ToolCompletionMessage UserCompletionMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text either input into or output by the model. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string Role The role of the chat persona creating content. Value will be one of: \"user\", \"assistant\", \"tool\", or \"system\". [JsonPropertyName(\"role\")] public string? Role { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionUsage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionUsage.html",
    "title": "Class CompletionUsage | FoundationaLLM",
    "keywords": "Class CompletionUsage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Contains the usage statistics for a completion. public class CompletionUsage Inheritance object CompletionUsage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionTokens The number of tokens used for the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int PromptTokens The number of tokens used for the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalTokens The total number of tokens used for the completion. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.DirectCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.DirectCompletionRequest.html",
    "title": "Class DirectCompletionRequest | FoundationaLLM",
    "keywords": "Class DirectCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Completion request object that excludes session-based properties. public class DirectCompletionRequest : OrchestrationRequest Inheritance object OrchestrationRequest DirectCompletionRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt OrchestrationRequest.AgentName OrchestrationRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.LogitBias.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.LogitBias.html",
    "title": "Class LogitBias | FoundationaLLM",
    "keywords": "Class LogitBias Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect varies per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\": -100} to prevent the endoftext token from being generated. public class LogitBias Inheritance object LogitBias Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Bias The bias value to apply to the token. public float? Bias { get; set; } Property Value float? TokenId The token ID of which to modify the likelihood. public string? TokenId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.SystemCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.SystemCompletionMessage.html",
    "title": "Class SystemCompletionMessage | FoundationaLLM",
    "keywords": "Class SystemCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll System input message for a direct orchestration request. public class SystemCompletionMessage : CompletionMessage Inheritance object CompletionMessage SystemCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SystemCompletionMessage() Initializes a new instance of the SystemCompletionMessage class. public SystemCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.ToolCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.ToolCompletionMessage.html",
    "title": "Class ToolCompletionMessage | FoundationaLLM",
    "keywords": "Class ToolCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Tool input message for a direct orchestration request. public class ToolCompletionMessage : CompletionMessage Inheritance object CompletionMessage ToolCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ToolCompletionMessage() Initializes a new instance of the ToolCompletionMessage class. public ToolCompletionMessage() Properties ToolCallId Tool call to which this message is responding. [JsonPropertyName(\"tool_call_id\")] public required string ToolCallId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.UserCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.UserCompletionMessage.html",
    "title": "Class UserCompletionMessage | FoundationaLLM",
    "keywords": "Class UserCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll User input message for a direct orchestration request. public class UserCompletionMessage : CompletionMessage Inheritance object CompletionMessage UserCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserCompletionMessage() Initializes a new instance of the UserCompletionMessage class. public UserCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Direct | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.Direct Classes AssistantCompletionMessage Assistant input message for a direct orchestration request. AzureAICompletionInputData Input data for a direct request to an Azure AI model. AzureAICompletionParameters Supported model configuration parameters. AzureAICompletionRequest Input for a direct Azure AI request. AzureAICompletionResponse The response from the Azure AI orchestration service. AzureOpenAICompletionParameters Supported model configuration parameters. AzureOpenAICompletionRequest Input for a direct Azure OpenAI request. AzureOpenAICompletionResponse The response from the Azure OpenAI orchestration service. AzureOpenAICompletionResponseChoice The completion response choice. CompletionMessage Object defining the completion role and content key value pairs. CompletionUsage Contains the usage statistics for a completion. DirectCompletionRequest Completion request object that excludes session-based properties. LogitBias Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect varies per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\": -100} to prevent the endoftext token from being generated. SystemCompletionMessage System input message for a direct orchestration request. ToolCompletionMessage Tool input message for a direct orchestration request. UserCompletionMessage User input message for a direct orchestration request."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.EndpointSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.EndpointSettings.html",
    "title": "Class EndpointSettings | FoundationaLLM",
    "keywords": "Class EndpointSettings Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Settings for an orchestration endpoint. public class EndpointSettings Inheritance object EndpointSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey API key for authorizing against an endpoint. public string? APIKey { get; set; } Property Value string APIVersion API version to use when accessing the endpoint. public string? APIVersion { get; set; } Property Value string AuthenticationType The type of authentication to use against the endpoint. This value should be either key or token. public string? AuthenticationType { get; set; } Property Value string Endpoint Uri of the orchestration endpoint. public string? Endpoint { get; set; } Property Value string OperationType Type of operation the endpoint is performing. This value should be completions or chat. Default value is chat. public string OperationType { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.InternalContextCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.InternalContextCompletionRequest.html",
    "title": "Class InternalContextCompletionRequest | FoundationaLLM",
    "keywords": "Class InternalContextCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The Internal Context Completion Request model. public class InternalContextCompletionRequest : LLMCompletionRequest Inheritance object LLMCompletionRequest InternalContextCompletionRequest Inherited Members LLMCompletionRequest.SessionId LLMCompletionRequest.UserPrompt LLMCompletionRequest.MessageHistory LLMCompletionRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Agent The Internal Context agent metadata. [JsonPropertyName(\"agent\")] public required InternalContextAgent Agent { get; set; } Property Value InternalContextAgent"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.KnowledgeManagementCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.KnowledgeManagementCompletionRequest.html",
    "title": "Class KnowledgeManagementCompletionRequest | FoundationaLLM",
    "keywords": "Class KnowledgeManagementCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The Knowledge Management Completion Request model. public class KnowledgeManagementCompletionRequest : LLMCompletionRequest Inheritance object LLMCompletionRequest KnowledgeManagementCompletionRequest Inherited Members LLMCompletionRequest.SessionId LLMCompletionRequest.UserPrompt LLMCompletionRequest.MessageHistory LLMCompletionRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Agent The Knowledge Management agent metadata. [JsonPropertyName(\"agent\")] public required KnowledgeManagementAgent Agent { get; set; } Property Value KnowledgeManagementAgent"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LLMCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LLMCompletionRequest.html",
    "title": "Class LLMCompletionRequest | FoundationaLLM",
    "keywords": "Class LLMCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Base LLM orchestration request [JsonDerivedType(typeof(KnowledgeManagementCompletionRequest), \"knowledge-management\")] [JsonDerivedType(typeof(InternalContextCompletionRequest), \"internal-context\")] [JsonDerivedType(typeof(LegacyCompletionRequest), \"legacy\")] [JsonDerivedType(typeof(LLMCompletionRequest), \"llm\")] public class LLMCompletionRequest Inheritance object LLMCompletionRequest Derived InternalContextCompletionRequest KnowledgeManagementCompletionRequest LegacyCompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MessageHistory The message history associated with the completion request. [JsonPropertyName(\"message_history\")] public List<MessageHistoryItem>? MessageHistory { get; init; } Property Value List<MessageHistoryItem> SessionId The session ID. [JsonPropertyName(\"session_id\")] public string? SessionId { get; set; } Property Value string Settings Collection of model settings to override with the orchestration request. [JsonPropertyName(\"settings\")] public OrchestrationSettings? Settings { get; set; } Property Value OrchestrationSettings UserPrompt Prompt entered by the user. [JsonPropertyName(\"user_prompt\")] public string? UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LLMCompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LLMCompletionResponse.html",
    "title": "Class LLMCompletionResponse | FoundationaLLM",
    "keywords": "Class LLMCompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll LLMOrchestrationCompletionResponse class public class LLMCompletionResponse Inheritance object LLMCompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the FoundationaLLM agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string Completion The completion response from the orchestration engine. [JsonPropertyName(\"completion\")] public string? Completion { get; set; } Property Value string CompletionTokens The number of tokens in the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int FullPrompt The full prompt composed by the LLM. [JsonPropertyName(\"full_prompt\")] public string? FullPrompt { get; set; } Property Value string PromptTemplate The prompt template used by the LLM. [JsonPropertyName(\"prompt_template\")] public string? PromptTemplate { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalCost Total cost of the completion execution. [JsonPropertyName(\"total_cost\")] public float TotalCost { get; set; } Property Value float TotalTokens Total tokens used. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; set; } Property Value int UserPrompt The prompt received from the user. [JsonPropertyName(\"user_prompt\")] public string? UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LLMOrchestrationService.html",
    "title": "Enum LLMOrchestrationService | FoundationaLLM",
    "keywords": "Enum LLMOrchestrationService Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Orchestration service enumerator. public enum LLMOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAIDirect = 0 Azure AI orchestration service. AzureOpenAIDirect = 1 Azure OpenAI orchestration service. LangChain = 2 LangChain orchestration service. SemanticKernel = 3 SemanticKernel orchestration service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LegacyAgentMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LegacyAgentMetadata.html",
    "title": "Class LegacyAgentMetadata | FoundationaLLM",
    "keywords": "Class LegacyAgentMetadata Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Agent metadata model. public class LegacyAgentMetadata : MetadataBase Inheritance object MetadataBase LegacyAgentMetadata Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptPrefix The prompt prefix to assign the agent. [JsonPropertyName(\"prompt_prefix\")] public string? PromptPrefix { get; set; } Property Value string PromptSuffix The prompt suffix to assign the agent. [JsonPropertyName(\"prompt_suffix\")] public string? PromptSuffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LegacyCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LegacyCompletionRequest.html",
    "title": "Class LegacyCompletionRequest | FoundationaLLM",
    "keywords": "Class LegacyCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Orchestration completion request. Contains the metadata needed by the orchestration services to build and execute completions. public class LegacyCompletionRequest : LLMCompletionRequest Inheritance object LLMCompletionRequest LegacyCompletionRequest Inherited Members LLMCompletionRequest.SessionId LLMCompletionRequest.UserPrompt LLMCompletionRequest.MessageHistory LLMCompletionRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Agent Agent metadata [JsonPropertyName(\"agent\")] public LegacyAgentMetadata? Agent { get; set; } Property Value LegacyAgentMetadata DataSourceMetadata Data source metadata [JsonPropertyName(\"data_sources\")] public List<DataSourceBase>? DataSourceMetadata { get; set; } Property Value List<DataSourceBase> EmbeddingModel Embedding model metadata. [JsonPropertyName(\"embedding_model\")] public EmbeddingModel? EmbeddingModel { get; set; } Property Value EmbeddingModel LanguageModel Language model metadata. [JsonPropertyName(\"language_model\")] public LanguageModel? LanguageModel { get; set; } Property Value LanguageModel"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationRequest.html",
    "title": "Class OrchestrationRequest | FoundationaLLM",
    "keywords": "Class OrchestrationRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Base class for orchestration request objects. public class OrchestrationRequest Inheritance object OrchestrationRequest Derived AgentHubRequest CompletionRequest DirectCompletionRequest SummaryRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the selected agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string SessionId The session ID. [JsonPropertyName(\"session_id\")] public string? SessionId { get; set; } Property Value string Settings Collection of model settings to override with the orchestration request. [JsonPropertyName(\"settings\")] public OrchestrationSettings? Settings { get; set; } Property Value OrchestrationSettings UserPrompt Represent the input or user prompt. [JsonPropertyName(\"user_prompt\")] public required string UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationSettings.html",
    "title": "Class OrchestrationSettings | FoundationaLLM",
    "keywords": "Class OrchestrationSettings Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Settings for an orchestration request. public class OrchestrationSettings Inheritance object OrchestrationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentParameters AzureAICompletionParameters to override the behavior of the agent. [JsonPropertyName(\"agent_parameters\")] public Dictionary<string, object>? AgentParameters { get; set; } Property Value Dictionary<string, object> EndpointConfiguration Options to override endpoint configuration (endpoint and key) used to access a language model by the orchestrator. [JsonPropertyName(\"endpoint_configuration\")] public Dictionary<string, object>? EndpointConfiguration { get; set; } Property Value Dictionary<string, object> ModelParameters AzureAICompletionParameters to override the behavior of the language model as defined on the agent. [JsonPropertyName(\"model_parameters\")] public Dictionary<string, object>? ModelParameters { get; set; } Property Value Dictionary<string, object> Orchestrator The agent's LLM orchestrator type. [JsonPropertyName(\"orchestrator\")] public string? Orchestrator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryRequest.html",
    "title": "Class SummaryRequest | FoundationaLLM",
    "keywords": "Class SummaryRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The summary request object. public class SummaryRequest : OrchestrationRequest Inheritance object OrchestrationRequest SummaryRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt OrchestrationRequest.AgentName OrchestrationRequest.Settings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html",
    "title": "Class SummaryResponse | FoundationaLLM",
    "keywords": "Class SummaryResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The summary response object. public class SummaryResponse Inheritance object SummaryResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Summary The summary response. public string? Summary { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration Namespaces FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations FoundationaLLM.Common.Models.Orchestration.DataSources FoundationaLLM.Common.Models.Orchestration.Direct Classes CompletionRequest The completion request object. CompletionResponse Response from a language model. EndpointSettings Settings for an orchestration endpoint. InternalContextCompletionRequest The Internal Context Completion Request model. KnowledgeManagementCompletionRequest The Knowledge Management Completion Request model. LLMCompletionRequest Base LLM orchestration request LLMCompletionResponse LLMOrchestrationCompletionResponse class LegacyAgentMetadata Agent metadata model. LegacyCompletionRequest Orchestration completion request. Contains the metadata needed by the orchestration services to build and execute completions. OrchestrationRequest Base class for orchestration request objects. OrchestrationSettings Settings for an orchestration request. SummaryRequest The summary request object. SummaryResponse The summary response object. Enums LLMOrchestrationService Orchestration service enumerator."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.NameCheckResultType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.NameCheckResultType.html",
    "title": "Enum NameCheckResultType | FoundationaLLM",
    "keywords": "Enum NameCheckResultType Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll The result types of resource name checks. public enum NameCheckResultType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Allowed = 0 The name is valid and is allowed. Denied = 1 The name is invalid and cannot be used"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceBase.html",
    "title": "Class ResourceBase | FoundationaLLM",
    "keywords": "Class ResourceBase Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll Basic properties for all resources. public class ResourceBase : ResourceName Inheritance object ResourceName ResourceBase Derived RoleAssignment RoleDefinition AgentBase AppConfigurationKeyBase DataSourceBase PromptBase VectorizationProfileBase Inherited Members ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CreatedBy The entity who created the security role definition. [JsonPropertyName(\"created_by\")] [JsonPropertyOrder(82)] public string? CreatedBy { get; set; } Property Value string CreatedOn The time at which the security role definition was created. [JsonPropertyName(\"created_on\")] [JsonPropertyOrder(80)] public DateTimeOffset CreatedOn { get; set; } Property Value DateTimeOffset Deleted Indicates whether the resource has been logically deleted. [JsonPropertyName(\"deleted\")] [JsonPropertyOrder(100)] public virtual bool Deleted { get; set; } Property Value bool Description The description of the resource. [JsonPropertyName(\"description\")] [JsonPropertyOrder(-2)] public string? Description { get; set; } Property Value string DisplayName The display name of the resource. [JsonPropertyName(\"display_name\")] [JsonPropertyOrder(-3)] public string? DisplayName { get; set; } Property Value string ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] [JsonPropertyOrder(-4)] public string? ObjectId { get; set; } Property Value string UpdatedBy The entity who last updated the security role definition. [JsonPropertyName(\"updated_by\")] [JsonPropertyOrder(83)] public string? UpdatedBy { get; set; } Property Value string UpdatedOn The time at which the security role definition was last updated. [JsonPropertyName(\"updated_on\")] [JsonPropertyOrder(81)] public DateTimeOffset UpdatedOn { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceName.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceName.html",
    "title": "Class ResourceName | FoundationaLLM",
    "keywords": "Class ResourceName Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll A named resource with a type. public class ResourceName Inheritance object ResourceName Derived ResourceBase ResourceNameCheckResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the resource. [JsonPropertyName(\"name\")] [JsonPropertyOrder(-5)] public required string Name { get; set; } Property Value string Type The type of the resource. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-100)] public virtual string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceNameCheckResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceNameCheckResult.html",
    "title": "Class ResourceNameCheckResult | FoundationaLLM",
    "keywords": "Class ResourceNameCheckResult Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll The result of a resource name check. public class ResourceNameCheckResult : ResourceName Inheritance object ResourceName ResourceNameCheckResult Inherited Members ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Message An optional message indicating why is the name not allowed. public string? Message { get; set; } Property Value string Status The NameCheckResultType indicating whether the name is allowed or not. [JsonConverter(typeof(JsonStringEnumConverter))] public NameCheckResultType Status { get; set; } Property Value NameCheckResultType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourcePath.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourcePath.html",
    "title": "Class ResourcePath | FoundationaLLM",
    "keywords": "Class ResourcePath Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll Provides the logic for handling FoundationaLLM resource identifiers. public class ResourcePath Inheritance object ResourcePath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourcePath(string, ImmutableList<string>, Dictionary<string, ResourceTypeDescriptor>, bool) Creates a new resource identifier from a resource path optionally allowing an action. public ResourcePath(string resourcePath, ImmutableList<string> allowedResourceProviders, Dictionary<string, ResourceTypeDescriptor> allowedResourceTypes, bool allowAction = true) Parameters resourcePath string The resource path used to create the resource identifier. allowedResourceProviders ImmutableList<string> Provides a list of allowed resource providers. allowedResourceTypes Dictionary<string, ResourceTypeDescriptor> Provides a dictionary of ResourceTypeDescriptor used to validate resource types. allowAction bool Optional parameter that indicates whether an action name is allowed as part of the resource identifier. Properties InstanceId The instance id of the resource identifier. Can be null if the resource path does not contain an instance id. public string? InstanceId { get; } Property Value string IsInstancePath Indicates whether the resource path is an instance path or not (i.e., only contains the FoundationaLLM instance identifier). public bool IsInstancePath { get; } Property Value bool IsRootPath Indicates whether the resource path is a root path (\"/\") or not. public bool IsRootPath { get; } Property Value bool MainResourceType The main resource type of the path. public string MainResourceType { get; } Property Value string ResourceProvider The resource provider of the resource identifier. Can be null if the resource path does not contain a resource provider. public string? ResourceProvider { get; } Property Value string ResourceTypeInstances The resource type instances of the resource identifier. public List<ResourceTypeInstance> ResourceTypeInstances { get; } Property Value List<ResourceTypeInstance> Methods GetObjectId(string?, string?) Computes the object id of the resource identifier. public string GetObjectId(string? instanceId, string? resourceProvider) Parameters instanceId string The FoundationaLLM instance id. Provide this if the resource does not have a fully-qualified resource identifier. resourceProvider string The name of the resource provider. Provide this if the resource does not have a fully-qualified resource identifier. Returns string The object id. IncludesResourcePath(ResourcePath) Determines whether the resource path includes another specified resource path. public bool IncludesResourcePath(ResourcePath other) Parameters other ResourcePath The ResourcePath to check for inclusion. Returns bool True if the specified resource path is included in the resource path. TryParse(string, ImmutableList<string>, Dictionary<string, ResourceTypeDescriptor>, bool, out ResourcePath?) Tries to parse a resource path and create a resource identifier from it. public static bool TryParse(string resourcePath, ImmutableList<string> allowedResourceProviders, Dictionary<string, ResourceTypeDescriptor> allowedResourceTypes, bool allowAction, out ResourcePath? resourcePathInstance) Parameters resourcePath string The resource path used to create the resource identifier. allowedResourceProviders ImmutableList<string> Provides a list of allowed resource providers. allowedResourceTypes Dictionary<string, ResourceTypeDescriptor> Provides a dictionary of ResourceTypeDescriptor used to validate resource types. allowAction bool Optional parameter that indicates whether an action name is allowed as part of the resource identifier. resourcePathInstance ResourcePath The parsed resource path. Returns bool True if the resource path is parsed successfully. TryParseInstanceId(string, out string?) Tries to retrieve the identifier of the FoundationaLLM instance from a resource path. public static bool TryParseInstanceId(string resourcePath, out string? instanceId) Parameters resourcePath string The resource path to analyze. instanceId string The FoundationaLLM instance identifier. Returns bool True if a valid intance identifier is retrieved successfully. TryParseResourceProvider(string, out string?) Tries to retrieve the name of the resource provider from a resource path. public static bool TryParseResourceProvider(string resourcePath, out string? resourceProvider) Parameters resourcePath string The resource path to analyze. resourceProvider string The resource provider name. Returns bool True if a valid resource provider name is retrieved successfully."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceProviderActionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceProviderActionResult.html",
    "title": "Class ResourceProviderActionResult | FoundationaLLM",
    "keywords": "Class ResourceProviderActionResult Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll The result of an action executed by a resource provider. public record ResourceProviderActionResult : IEquatable<ResourceProviderActionResult> Inheritance object ResourceProviderActionResult Implements IEquatable<ResourceProviderActionResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderActionResult(bool) The result of an action executed by a resource provider. public ResourceProviderActionResult(bool IsSuccessResult) Parameters IsSuccessResult bool Indicates whether the action executed successfully or not. Properties IsSuccessResult Indicates whether the action executed successfully or not. public bool IsSuccessResult { get; init; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceProviderUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceProviderUpsertResult.html",
    "title": "Class ResourceProviderUpsertResult | FoundationaLLM",
    "keywords": "Class ResourceProviderUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation. public class ResourceProviderUpsertResult Inheritance object ResourceProviderUpsertResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ObjectId The id of the object that was created or updated. public string? ObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.ResourceReference.html",
    "title": "Class ResourceReference | FoundationaLLM",
    "keywords": "Class ResourceReference Namespace FoundationaLLM.Common.Models.ResourceProvider Assembly FoundationaLLM.Common.dll Resource reference used by resource providers to index the resources they manage. public class ResourceReference Inheritance object ResourceReference Derived AgentReference DataSourceReference PromptReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted Indicates whether the resource has been logically deleted. public bool Deleted { get; set; } Property Value bool Filename The filename of the resource. public required string Filename { get; set; } Property Value string Name The name of the resource. public required string Name { get; set; } Property Value string Type The type of the resource. public required string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProvider.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProvider | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProvider Classes ResourceBase Basic properties for all resources. ResourceName A named resource with a type. ResourceNameCheckResult The result of a resource name check. ResourcePath Provides the logic for handling FoundationaLLM resource identifiers. ResourceProviderActionResult The result of an action executed by a resource provider. ResourceProviderUpsertResult Represents the result of an upsert operation. ResourceReference Resource reference used by resource providers to index the resources they manage. Enums NameCheckResultType The result types of resource name checks."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAction.html",
    "title": "Class ResourceTypeAction | FoundationaLLM",
    "keywords": "Class ResourceTypeAction Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a resource type action. public record ResourceTypeAction : IEquatable<ResourceTypeAction> Inheritance object ResourceTypeAction Implements IEquatable<ResourceTypeAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeAction(string, bool, bool, List<ResourceTypeAllowedTypes>) Provides details about a resource type action. public ResourceTypeAction(string Name, bool AllowedOnResource, bool AllowedOnResourceType, List<ResourceTypeAllowedTypes> AllowedTypes) Parameters Name string The name of the action. AllowedOnResource bool Indicates whether the action can be executed on individual resources. AllowedOnResourceType bool Indicates whether the action can be executed on the resource type itself. AllowedTypes List<ResourceTypeAllowedTypes> The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. Properties AllowedOnResource Indicates whether the action can be executed on individual resources. public bool AllowedOnResource { get; init; } Property Value bool AllowedOnResourceType Indicates whether the action can be executed on the resource type itself. public bool AllowedOnResourceType { get; init; } Property Value bool AllowedTypes The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. public List<ResourceTypeAllowedTypes> AllowedTypes { get; init; } Property Value List<ResourceTypeAllowedTypes> Name The name of the action. public string Name { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAllowedTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAllowedTypes.html",
    "title": "Class ResourceTypeAllowedTypes | FoundationaLLM",
    "keywords": "Class ResourceTypeAllowedTypes Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about the types that are allowed for the body and return of a specific HTTP method. public record ResourceTypeAllowedTypes : IEquatable<ResourceTypeAllowedTypes> Inheritance object ResourceTypeAllowedTypes Implements IEquatable<ResourceTypeAllowedTypes> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeAllowedTypes(string, Dictionary<string, Type>, List<Type>, List<Type>) Provides details about the types that are allowed for the body and return of a specific HTTP method. public ResourceTypeAllowedTypes(string HttpMethod, Dictionary<string, Type> AllowedParameterTypes, List<Type> AllowedBodyTypes, List<Type> AllowedReturnTypes) Parameters HttpMethod string The name of the HTTP method. Can be one of GET, POST, PUT, PATCH, or DELETE. AllowedParameterTypes Dictionary<string, Type> The dictionary of query parameter names and types that are allowed for the method. AllowedBodyTypes List<Type> The list of types that are allowed as payloads for the HTTP request. AllowedReturnTypes List<Type> The list of types the are allowed as return types for the HTTP request. Properties AllowedBodyTypes The list of types that are allowed as payloads for the HTTP request. public List<Type> AllowedBodyTypes { get; init; } Property Value List<Type> AllowedParameterTypes The dictionary of query parameter names and types that are allowed for the method. public Dictionary<string, Type> AllowedParameterTypes { get; init; } Property Value Dictionary<string, Type> AllowedReturnTypes The list of types the are allowed as return types for the HTTP request. public List<Type> AllowedReturnTypes { get; init; } Property Value List<Type> HttpMethod The name of the HTTP method. Can be one of GET, POST, PUT, PATCH, or DELETE. public string HttpMethod { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeDescriptor.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeDescriptor.html",
    "title": "Class ResourceTypeDescriptor | FoundationaLLM",
    "keywords": "Class ResourceTypeDescriptor Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a resource type managed by a resource provider. public class ResourceTypeDescriptor Inheritance object ResourceTypeDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeDescriptor(string) Provides details about a resource type managed by a resource provider. public ResourceTypeDescriptor(string resourceType) Parameters resourceType string The name of the resource type. Properties Actions The list of actions supported by the resource type. public List<ResourceTypeAction> Actions { get; set; } Property Value List<ResourceTypeAction> AllowedTypes The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. public List<ResourceTypeAllowedTypes> AllowedTypes { get; set; } Property Value List<ResourceTypeAllowedTypes> ResourceType The name of the resource type. public string ResourceType { get; set; } Property Value string SubTypes The dictionary of resource descriptors specifying the resource's allowed subtypes. public Dictionary<string, ResourceTypeDescriptor> SubTypes { get; set; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeInstance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeInstance.html",
    "title": "Class ResourceTypeInstance | FoundationaLLM",
    "keywords": "Class ResourceTypeInstance Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Identifies a specific resource type instance. public record ResourceTypeInstance : IEquatable<ResourceTypeInstance> Inheritance object ResourceTypeInstance Implements IEquatable<ResourceTypeInstance> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeInstance(string) Identifies a specific resource type instance. public ResourceTypeInstance(string ResourceType) Parameters ResourceType string The name of the resource type. Fields Action An optional action to be executed on the resource instance. public string? Action Field Value string ResourceId An optional resource type instance unique identifier. public string? ResourceId Field Value string Properties ResourceType The name of the resource type. public string ResourceType { get; init; } Property Value string Methods EqualTo(ResourceTypeInstance?) Checks whether the current instance is equal to another ResourceTypeInstance instance. public bool EqualTo(ResourceTypeInstance? other) Parameters other ResourceTypeInstance The ResourceTypeInstance to check for equality. Returns bool True if the two instances are equal."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders Classes ResourceTypeAction Provides details about a resource type action. ResourceTypeAllowedTypes Provides details about the types that are allowed for the body and return of a specific HTTP method. ResourceTypeDescriptor Provides details about a resource type managed by a resource provider. ResourceTypeInstance Identifies a specific resource type instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Customer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Customer.html",
    "title": "Class Customer | FoundationaLLM",
    "keywords": "Class Customer Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The customer object. public class Customer : EmbeddedEntity Inheritance object EmbeddedEntity Customer Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Customer(string, string, string, string, string, string, string, string, string, List<CustomerAddress>, Password, double, float[]?) Constructor for Customer. public Customer(string id, string type, string customerId, string title, string firstName, string lastName, string emailAddress, string phoneNumber, string creationDate, List<CustomerAddress> addresses, Password password, double salesOrderCount, float[]? vector = null) Parameters id string type string customerId string title string firstName string lastName string emailAddress string phoneNumber string creationDate string addresses List<CustomerAddress> password Password salesOrderCount double vector float[] Properties addresses The customer address of the customer. [SimpleField] public List<CustomerAddress> addresses { get; set; } Property Value List<CustomerAddress> creationDate The creation of the customer. [SimpleField] public string creationDate { get; set; } Property Value string customerId The customer id. [SimpleField] public string customerId { get; set; } Property Value string emailAddress The email of the customer. [SimpleField] public string emailAddress { get; set; } Property Value string firstName The customer first name. [SimpleField] public string firstName { get; set; } Property Value string id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string id { get; set; } Property Value string lastName The customer last name. [SimpleField] public string lastName { get; set; } Property Value string password The customer password in hash and salt. [SimpleField(IsHidden = true)] public Password password { get; set; } Property Value Password phoneNumber The customer phone number. [SimpleField] public string phoneNumber { get; set; } Property Value string salesOrderCount The count of the sales order. [SimpleField] public double salesOrderCount { get; set; } Property Value double title The customer title. [SimpleField] public string title { get; set; } Property Value string type The customer type. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.CustomerAddress.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.CustomerAddress.html",
    "title": "Class CustomerAddress | FoundationaLLM",
    "keywords": "Class CustomerAddress Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The customer address object. public class CustomerAddress Inheritance object CustomerAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CustomerAddress(string, string, string, string, string, string, Location) Constructor for Customer Address. public CustomerAddress(string addressLine1, string addressLine2, string city, string state, string country, string zipCode, Location location) Parameters addressLine1 string addressLine2 string city string state string country string zipCode string location Location Properties addressLine1 First line from customer address. [SimpleField] public string addressLine1 { get; set; } Property Value string addressLine2 Second line from customer address. [SimpleField] public string addressLine2 { get; set; } Property Value string city The customer city. [SimpleField] public string city { get; set; } Property Value string country The customer country. [SimpleField] public string country { get; set; } Property Value string location The location of the customer. [SimpleField] public Location location { get; set; } Property Value Location state The customer state. [SimpleField] public string state { get; set; } Property Value string zipCode The customer zip code. [SimpleField] public string zipCode { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.EmbeddedEntity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.EmbeddedEntity.html",
    "title": "Class EmbeddedEntity | FoundationaLLM",
    "keywords": "Class EmbeddedEntity Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The embedded entity object. public class EmbeddedEntity Inheritance object EmbeddedEntity Derived Customer Product SalesOrder ShortTermMemory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties entityType__ The type of the entity. [SearchableField(IsFilterable = true, IsFacetable = true)] public string? entityType__ { get; set; } Property Value string vector The vector associated with the embedded entity. [FieldBuilderIgnore] public float[]? vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Location.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Location.html",
    "title": "Class Location | FoundationaLLM",
    "keywords": "Class Location Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The location object. public class Location Inheritance object Location Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Location(string, List<float>) Constructor for Location. public Location(string type, List<float> coordinates) Parameters type string coordinates List<float> Properties coordinates The coordinates of the location. [FieldBuilderIgnore] public List<float> coordinates { get; set; } Property Value List<float> type The type of the location. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Password.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Password.html",
    "title": "Class Password | FoundationaLLM",
    "keywords": "Class Password Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The password object. public class Password Inheritance object Password Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Password(string, string) Constructor for Password. public Password(string hash, string salt) Parameters hash string salt string Properties hash The hashed representation of the password. [SimpleField(IsHidden = true)] public string hash { get; set; } Property Value string salt The salt value used during password hashing. [SimpleField(IsHidden = true)] public string salt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Product.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Product.html",
    "title": "Class Product | FoundationaLLM",
    "keywords": "Class Product Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The product object. public class Product : EmbeddedEntity Inheritance object EmbeddedEntity Product Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Product(string, string, string, string, string, string, double, List<Tag>, float[]?) Constructor for Product. public Product(string id, string categoryId, string categoryName, string sku, string name, string description, double price, List<Tag> tags, float[]? vector = null) Parameters id string categoryId string categoryName string sku string name string description string price double tags List<Tag> vector float[] Properties categoryId The categoryid of the product. [SimpleField] public string categoryId { get; set; } Property Value string categoryName The category name of the product. [SearchableField(IsFilterable = true, IsFacetable = true)] public string categoryName { get; set; } Property Value string description The product description. [SimpleField] public string description { get; set; } Property Value string id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string id { get; set; } Property Value string name The product name. [SimpleField] public string name { get; set; } Property Value string price The price of the product. [SimpleField] public double price { get; set; } Property Value double sku The product stock keeping unit. [SimpleField] public string sku { get; set; } Property Value string tags The product tags. [SimpleField] public List<Tag> tags { get; set; } Property Value List<Tag>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.ProductCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.ProductCategory.html",
    "title": "Class ProductCategory | FoundationaLLM",
    "keywords": "Class ProductCategory Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The product category object. public class ProductCategory Inheritance object ProductCategory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ProductCategory(string, string, string) Constructor for Product Category. public ProductCategory(string id, string type, string name) Parameters id string type string name string Properties id The unique identifier. [SimpleField] public string id { get; set; } Property Value string name The product category name. [SimpleField] public string name { get; set; } Property Value string type The product category type. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrder.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrder.html",
    "title": "Class SalesOrder | FoundationaLLM",
    "keywords": "Class SalesOrder Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The sales order object. public class SalesOrder : EmbeddedEntity Inheritance object EmbeddedEntity SalesOrder Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SalesOrder(string, string, string, string, string, List<SalesOrderDetails>, float[]?) Constructor for Sales Order. public SalesOrder(string id, string type, string customerId, string orderDate, string shipDate, List<SalesOrderDetails> details, float[]? vector = null) Parameters id string type string customerId string orderDate string shipDate string details List<SalesOrderDetails> vector float[] Properties customerId The customer identifier associated with the sales order. [SimpleField] public string customerId { get; set; } Property Value string details The details associated with the customer sales order. [SimpleField] public List<SalesOrderDetails> details { get; set; } Property Value List<SalesOrderDetails> id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string id { get; set; } Property Value string orderDate The date of the sales order. [SimpleField] public string orderDate { get; set; } Property Value string shipDate The date of the shipment associated with the sales order. [SimpleField] public string shipDate { get; set; } Property Value string type The type of the customer sales order. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrderDetails.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrderDetails.html",
    "title": "Class SalesOrderDetails | FoundationaLLM",
    "keywords": "Class SalesOrderDetails Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The sales order details object public class SalesOrderDetails Inheritance object SalesOrderDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SalesOrderDetails(string, string, double, double) Constructor for Sales Order Details public SalesOrderDetails(string sku, string name, double price, double quantity) Parameters sku string name string price double quantity double Properties name The product name associated with the customer sales order detail [SimpleField] public string name { get; set; } Property Value string price The price of the product associated with the customer sales order detail [SimpleField] public double price { get; set; } Property Value double quantity The quantity of the product associated with the customer sales order detail [SimpleField] public double quantity { get; set; } Property Value double sku The stock keeping unit (SKU) for the customer sales order detail [SimpleField] public string sku { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.ShortTermMemory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.ShortTermMemory.html",
    "title": "Class ShortTermMemory | FoundationaLLM",
    "keywords": "Class ShortTermMemory Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The short term memory object. public class ShortTermMemory : EmbeddedEntity Inheritance object EmbeddedEntity ShortTermMemory Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties memory__ The memory string associated with the short-term memory. public string? memory__ { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Tag.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Tag.html",
    "title": "Class Tag | FoundationaLLM",
    "keywords": "Class Tag Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The tag object. public class Tag Inheritance object Tag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Tag(string, string) Constructor for Tag. public Tag(string id, string name) Parameters id string name string Properties id The unique identifier. [SimpleField] public string id { get; set; } Property Value string name The product tag name. [SimpleField] public string name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.html",
    "title": "Namespace FoundationaLLM.Common.Models.Search | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Search Classes Customer The customer object. CustomerAddress The customer address object. EmbeddedEntity The embedded entity object. Location The location object. Password The password object. Product The product object. ProductCategory The product category object. SalesOrder The sales order object. SalesOrderDetails The sales order details object ShortTermMemory The short term memory object. Tag The tag object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.ContentIdentifier.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.ContentIdentifier.html",
    "title": "Class ContentIdentifier | FoundationaLLM",
    "keywords": "Class ContentIdentifier Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll Represents the content associated with a vectorization request. public class ContentIdentifier Inheritance object ContentIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the content being vectorized. Vectorization state services use it to derive the location of the state in the underlying storage. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public required string CanonicalId { get; set; } Property Value string ContentSourceProfileName The name of the vectorization content source profile that provides settings to connect to the content source. [JsonPropertyOrder(0)] [JsonPropertyName(\"content_source_profile_name\")] public required string ContentSourceProfileName { get; set; } Property Value string FileName The file name part of the content identifier. [JsonIgnore] public string FileName { get; } Property Value string this[int] The indexer allowing to access the components of the multipart identifier using [] notation. [JsonIgnore] public string this[int i] { get; } Parameters i int The index of component being retrieved. Property Value string Metadata Additional metadata associated with the content being vectorized. [JsonPropertyOrder(3)] [JsonPropertyName(\"metadata\")] public Dictionary<string, object>? Metadata { get; set; } Property Value Dictionary<string, object> MultipartId The multipart unique identifier of the the content (i.e. document) being vectorized. [JsonInclude] [JsonPropertyOrder(1)] [JsonPropertyName(\"multipart_id\")] public required List<string> MultipartId { set; } Property Value List<string> UniqueId The unique identifier of the content (i.e., document) being vectorized. The identifier is determined by concatenating the parts from MultipartId. [JsonIgnore] public string UniqueId { get; } Property Value string Methods ValidateMultipartId(int) Validates a multipart unique content identifier. public void ValidateMultipartId(int expectedPartsCount) Parameters expectedPartsCount int The expected number of parts in the multipart identifier. Exceptions ContentIdentifierException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddedContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddedContent.html",
    "title": "Class EmbeddedContent | FoundationaLLM",
    "keywords": "Class EmbeddedContent Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll Provides information about embedded content. public class EmbeddedContent Inheritance object EmbeddedContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentId The canonical identifier of the content. public required ContentIdentifier ContentId { get; set; } Property Value ContentIdentifier ContentParts The list of conent public required List<EmbeddedContentPart> ContentParts { get; set; } Property Value List<EmbeddedContentPart>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddedContentPart.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddedContentPart.html",
    "title": "Class EmbeddedContentPart | FoundationaLLM",
    "keywords": "Class EmbeddedContentPart Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll Provides information about an embedded content part. public class EmbeddedContentPart Inheritance object EmbeddedContentPart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text content that was embedded. public required string Content { get; set; } Property Value string Embedding The vector embedding associated with the content. public required Embedding Embedding { get; set; } Property Value Embedding Id The unique identifier of the embedded content part. public required string Id { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.Embedding.JsonConverter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.Embedding.JsonConverter.html",
    "title": "Class Embedding.JsonConverter | FoundationaLLM",
    "keywords": "Class Embedding.JsonConverter Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll Serializes the content of an Embedding value. Note: use Embedding.JsonConverter to serialize objects using the Embedding type, for example: [JsonPropertyName(\"vector\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding Vector { get; set; } public sealed class Embedding.JsonConverter : JsonConverter<Embedding> Inheritance object JsonConverter JsonConverter<Embedding> Embedding.JsonConverter Inherited Members JsonConverter<Embedding>.CanConvert(Type) JsonConverter<Embedding>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Embedding>.WriteAsPropertyName(Utf8JsonWriter, Embedding, JsonSerializerOptions) JsonConverter<Embedding>.HandleNull JsonConverter<Embedding>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type Embedding. public override Embedding Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Embedding The converted value. Write(Utf8JsonWriter, Embedding, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Embedding value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Embedding The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.Embedding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.Embedding.html",
    "title": "Struct Embedding | FoundationaLLM",
    "keywords": "Struct Embedding Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll Stores a vector embedding. This type should be serialized using Emedding.JsonConverter. public struct Embedding : IEquatable<Embedding> Implements IEquatable<Embedding> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Embedding(int) Creates an embedding with a zero-initialzed vector of a specified size. public Embedding(int size) Parameters size int The size of the vector representing the embedding. Embedding(ReadOnlyMemory<float>) Creates an embedding from a vector represents as a ReadOnlyMemory<T> object. public Embedding(ReadOnlyMemory<float> vector) Parameters vector ReadOnlyMemory<float> Embedding(float[]) Creates an embedding from a vector represented as an array of real numbers. public Embedding(float[] vector) Parameters vector float[] The array containing the vector values. Properties Length Length of the vector representing the embedding. This property is only serialized when Embedding.JsonConverter is used. [JsonIgnore] public readonly int Length { get; } Property Value int Vector The vector that represents the embedding. This property is only serialized when Embedding.JsonConverter is used. [JsonIgnore] public ReadOnlyMemory<float> Vector { readonly get; set; } Property Value ReadOnlyMemory<float> Methods Equals(Embedding) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Embedding other) Parameters other Embedding An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Inidicates whether the current object is equal to another object. public override readonly bool Equals(object? obj) Parameters obj object An object to compare with this object. Returns bool True if the object is equal to the obj param and False otherwise. GetHashCode() Calculated the hashcode for this Embedding. public override readonly int GetHashCode() Returns int The hash value represented by an integer. Operators operator ==(Embedding, Embedding) Checks if two Embedding values are equal. public static bool operator ==(Embedding v1, Embedding v2) Parameters v1 Embedding The first Embedding value to be cheched. v2 Embedding The second Embedding value to be checked. Returns bool True if the two values are equal, False otherwise. operator !=(Embedding, Embedding) Checks if two Embedding values are different. public static bool operator !=(Embedding v1, Embedding v2) Parameters v1 Embedding The first Embedding value to be cheched. v2 Embedding The second Embedding value to be checked. Returns bool True if the two values are different, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddingFieldAttribute.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddingFieldAttribute.html",
    "title": "Class EmbeddingFieldAttribute | FoundationaLLM",
    "keywords": "Class EmbeddingFieldAttribute Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll The embedding field attribute object. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false, Inherited = true)] public class EmbeddingFieldAttribute : Attribute Inheritance object Attribute EmbeddingFieldAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Label The label associated with the embedding field. public string? Label { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.html",
    "title": "Namespace FoundationaLLM.Common.Models.TextEmbedding | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.TextEmbedding Classes ContentIdentifier Represents the content associated with a vectorization request. EmbeddedContent Provides information about embedded content. EmbeddedContentPart Provides information about an embedded content part. Embedding.JsonConverter Serializes the content of an Embedding value. Note: use Embedding.JsonConverter to serialize objects using the Embedding type, for example: [JsonPropertyName(\"vector\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding Vector { get; set; } EmbeddingFieldAttribute The embedding field attribute object. Structs Embedding Stores a vector embedding. This type should be serialized using Emedding.JsonConverter."
  },
  "api/dotnet/FoundationaLLM.Common.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.html",
    "title": "Namespace FoundationaLLM.Common.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models Namespaces FoundationaLLM.Common.Models.Agents FoundationaLLM.Common.Models.Authentication FoundationaLLM.Common.Models.Authorization FoundationaLLM.Common.Models.Cache FoundationaLLM.Common.Models.Chat FoundationaLLM.Common.Models.Configuration FoundationaLLM.Common.Models.Context FoundationaLLM.Common.Models.Events FoundationaLLM.Common.Models.Hubs FoundationaLLM.Common.Models.Infrastructure FoundationaLLM.Common.Models.Metadata FoundationaLLM.Common.Models.Orchestration FoundationaLLM.Common.Models.ResourceProvider FoundationaLLM.Common.Models.ResourceProviders FoundationaLLM.Common.Models.Search FoundationaLLM.Common.Models.TextEmbedding Classes ModelRegistry The model registry object. ModelRegistryEntry The model registry entry object."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html",
    "title": "Class ConfigureSwaggerOptions | FoundationaLLM",
    "keywords": "Class ConfigureSwaggerOptions Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Configures the Swagger generation options. public class ConfigureSwaggerOptions : IConfigureOptions<SwaggerGenOptions> Inheritance object ConfigureSwaggerOptions Implements IConfigureOptions<SwaggerGenOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This allows API versioning to define a Swagger document per API version after the Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider service has been resolved from the service container. Constructors ConfigureSwaggerOptions(IApiVersionDescriptionProvider) Initializes a new instance of the ConfigureSwaggerOptions class. public ConfigureSwaggerOptions(IApiVersionDescriptionProvider provider) Parameters provider IApiVersionDescriptionProvider The provider used to generate Swagger documents. Methods Configure(SwaggerGenOptions) Invoked to configure a SwaggerGenOptions instance. public void Configure(SwaggerGenOptions options) Parameters options SwaggerGenOptions The options instance to configure."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html",
    "title": "Class SwaggerDefaultValues | FoundationaLLM",
    "keywords": "Class SwaggerDefaultValues Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used. public class SwaggerDefaultValues : IOperationFilter Inheritance object SwaggerDefaultValues Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This IOperationFilter is only required due to bugs in the SwaggerGenerator. Once they are fixed and published, this class can be removed. Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext"
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.html",
    "title": "Namespace FoundationaLLM.Common.OpenAPI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.OpenAPI Classes ConfigureSwaggerOptions Configures the Swagger generation options. SwaggerDefaultValues Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.APIServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.APIServiceBase.html",
    "title": "Class APIServiceBase | FoundationaLLM",
    "keywords": "Class APIServiceBase Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Contains base functionality for calling the Hub APIs. public class APIServiceBase : ICacheControlAPIService Inheritance object APIServiceBase Implements ICacheControlAPIService Derived AgentHubAPIService DataSourceHubAPIService PromptHubAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIServiceBase(string, IHttpClientFactoryService, ILogger) Contains base functionality for calling the Hub APIs. public APIServiceBase(string httpClientName, IHttpClientFactoryService httpClientFactoryService, ILogger logger) Parameters httpClientName string The name of the HttpClient associated with the Hub API service that implements this base class. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. logger ILogger The logging interface. Methods RefreshCache(string) Refreshes the named cache. public Task<APICacheRefreshResult> RefreshCache(string name) Parameters name string The name of the cache item to refresh. Returns Task<APICacheRefreshResult> RefreshConfigurationCache() Refreshes the configuration cache. public Task<APICacheRefreshResult> RefreshConfigurationCache() Returns Task<APICacheRefreshResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.AgentHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.AgentHubAPIService.html",
    "title": "Class AgentHubAPIService | FoundationaLLM",
    "keywords": "Class AgentHubAPIService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Class for the Agent Hub API Service. public class AgentHubAPIService : APIServiceBase, IAgentHubAPIService, IHubAPIService, ICacheControlAPIService Inheritance object APIServiceBase AgentHubAPIService Implements IAgentHubAPIService IHubAPIService ICacheControlAPIService Inherited Members APIServiceBase.RefreshConfigurationCache() APIServiceBase.RefreshCache(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Agent Hub API Service Constructors AgentHubAPIService(IOptions<AgentHubSettings>, ILogger<AgentHubAPIService>, IHttpClientFactoryService) Class for the Agent Hub API Service. public AgentHubAPIService(IOptions<AgentHubSettings> options, ILogger<AgentHubAPIService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<AgentHubSettings> logger ILogger<AgentHubAPIService> httpClientFactoryService IHttpClientFactoryService Remarks Constructor for the Agent Hub API Service Methods ListAgents() Gets the list with all the agent names and descriptions. public Task<List<AgentMetadata>> ListAgents() Returns Task<List<AgentMetadata>> A list of AgentMetadata objects containing the names and descriptions of the agents. ResolveRequest(string, string) Gets a set of agents from the Agent Hub based on the prompt and user context. public Task<AgentHubResponse> ResolveRequest(string userPrompt, string sessionId) Parameters userPrompt string The user prompt to resolve. sessionId string The session ID. Returns Task<AgentHubResponse> Status() Gets the status of the Agent Hub API public Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.DataSourceHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.DataSourceHubAPIService.html",
    "title": "Class DataSourceHubAPIService | FoundationaLLM",
    "keywords": "Class DataSourceHubAPIService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Class for the Data Source Hub API Service public class DataSourceHubAPIService : APIServiceBase, IDataSourceHubAPIService, IHubAPIService, ICacheControlAPIService Inheritance object APIServiceBase DataSourceHubAPIService Implements IDataSourceHubAPIService IHubAPIService ICacheControlAPIService Inherited Members APIServiceBase.RefreshConfigurationCache() APIServiceBase.RefreshCache(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor of the DataSource Hub API Service Constructors DataSourceHubAPIService(IOptions<DataSourceHubSettings>, ILogger<DataSourceHubAPIService>, IHttpClientFactoryService) Class for the Data Source Hub API Service public DataSourceHubAPIService(IOptions<DataSourceHubSettings> options, ILogger<DataSourceHubAPIService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<DataSourceHubSettings> logger ILogger<DataSourceHubAPIService> httpClientFactoryService IHttpClientFactoryService Remarks Constructor of the DataSource Hub API Service Methods ResolveRequest(List<string>, string) Gets a list of DataSources from the DataSource Hub public Task<DataSourceHubResponse> ResolveRequest(List<string> sources, string sessionId) Parameters sources List<string> The data sources to resolve. sessionId string The session ID. Returns Task<DataSourceHubResponse> Status() Gets the status of the DataSource Hub API public Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.DownstreamAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.DownstreamAPIService.html",
    "title": "Class DownstreamAPIService | FoundationaLLM",
    "keywords": "Class DownstreamAPIService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Contains methods for interacting with the downstream API. public class DownstreamAPIService : IDownstreamAPIService Inheritance object DownstreamAPIService Implements IDownstreamAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DownstreamAPIService(string, IHttpClientFactoryService) Contains methods for interacting with the downstream API. public DownstreamAPIService(string downstreamHttpClientName, IHttpClientFactoryService httpClientFactoryService) Parameters downstreamHttpClientName string The name of the downstream HTTP client. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. Properties APIName The name of the downstream API. public string APIName { get; } Property Value string Methods GetCompletion(CompletionRequest) Gets a completion from the downstream API. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the downstream API. public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.PromptHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.PromptHubAPIService.html",
    "title": "Class PromptHubAPIService | FoundationaLLM",
    "keywords": "Class PromptHubAPIService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Class for the PromptHub API Service public class PromptHubAPIService : APIServiceBase, IPromptHubAPIService, IHubAPIService, ICacheControlAPIService Inheritance object APIServiceBase PromptHubAPIService Implements IPromptHubAPIService IHubAPIService ICacheControlAPIService Inherited Members APIServiceBase.RefreshConfigurationCache() APIServiceBase.RefreshCache(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the PromptHub API Service Constructors PromptHubAPIService(IOptions<PromptHubSettings>, ILogger<PromptHubAPIService>, IHttpClientFactoryService) Class for the PromptHub API Service public PromptHubAPIService(IOptions<PromptHubSettings> options, ILogger<PromptHubAPIService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<PromptHubSettings> logger ILogger<PromptHubAPIService> httpClientFactoryService IHttpClientFactoryService Remarks Constructor for the PromptHub API Service Methods ResolveRequest(string, string, string) Used to get prompts for a target agent and user context. public Task<PromptHubResponse> ResolveRequest(string promptContainer, string sessionId, string promptName = \"default\") Parameters promptContainer string The prompt container from which prompt values will be retrieved. sessionId string The session ID. promptName string Name of the prompt for which to retrieve prompt values. Returns Task<PromptHubResponse> Returns a PromptHubResponse object containing the list of prompts for the specified agent. Status() Gets the status of the Prompt Hub API public Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.html",
    "title": "Namespace FoundationaLLM.Common.Services.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.API Classes APIServiceBase Contains base functionality for calling the Hub APIs. AgentHubAPIService Class for the Agent Hub API Service. DataSourceHubAPIService Class for the Data Source Hub API Service DownstreamAPIService Contains methods for interacting with the downstream API. PromptHubAPIService Class for the PromptHub API Service"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureResourceManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureResourceManagerService.html",
    "title": "Class AzureResourceManagerService | FoundationaLLM",
    "keywords": "Class AzureResourceManagerService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public class AzureResourceManagerService : IAzureResourceManagerService Inheritance object AzureResourceManagerService Implements IAzureResourceManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureResourceManagerService(ILogger<AzureResourceManagerService>) Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public AzureResourceManagerService(ILogger<AzureResourceManagerService> logger) Parameters logger ILogger<AzureResourceManagerService> The logger used for logging. Methods CreateEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Creates a new Azure Event Grid namespace topic subscription. public Task<bool> CreateEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be created. topicSubscriptionName string The name of the subscription to be created. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task<bool> True if the subscription was successfully created, false otherwise. DeleteEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Deletes an Azure Event Grid namespace topic subscription. public Task DeleteEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be deleted. topicSubscriptionName string The name of the subscription to be deleted. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.DependencyInjection.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.DependencyInjection.html",
    "title": "Class DependencyInjection | FoundationaLLM",
    "keywords": "Class DependencyInjection Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides extension methods used to configure dependency injection. public static class DependencyInjection Inheritance object DependencyInjection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAzureResourceManager(IServiceCollection) Register the dependencies required to support Azure Event Grid events. public static void AddAzureResourceManager(this IServiceCollection services) Parameters services IServiceCollection Application builder service collection."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.html",
    "title": "Namespace FoundationaLLM.Common.Services.Azure | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Azure Classes AzureResourceManagerService Provides services to interact with the Azure Resource Manager (ARM) infrastructure. DependencyInjection Provides extension methods used to configure dependency injection."
  },
  "api/dotnet/FoundationaLLM.Common.Services.AzureAppConfigurationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.AzureAppConfigurationService.html",
    "title": "Class AzureAppConfigurationService | FoundationaLLM",
    "keywords": "Class AzureAppConfigurationService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure App Configuration. public class AzureAppConfigurationService : IAzureAppConfigurationService Inheritance object AzureAppConfigurationService Implements IAzureAppConfigurationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAppConfigurationService(ConfigurationClient, ILogger<AzureAppConfigurationService>) Provides access to and management of Azure App Configuration. public AzureAppConfigurationService(ConfigurationClient configurationClient, ILogger<AzureAppConfigurationService> logger) Parameters configurationClient ConfigurationClient The Azure App Configuration ConfigurationClient. logger ILogger<AzureAppConfigurationService> The logger. Methods CheckAppConfigurationSettingsExistAsync() Returns a map of configuration setting keys and whether they exist in Azure App Configuration. public Task<Dictionary<string, bool>> CheckAppConfigurationSettingsExistAsync() Returns Task<Dictionary<string, bool>> GetConfigurationSettingAsync(string) Gets the value of a configuration setting from Azure App Configuration. public Task<string?> GetConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task<string> GetConfigurationSettingsAsync(string) Gets the values of configuration settings from Azure App Configuration. public Task<List<(string Key, string? Value, string ContentType)>> GetConfigurationSettingsAsync(string keyFilter) Parameters keyFilter string The key name filter used to select the settings keys for which values are retrieved. Returns Task<List<(string Key, string Value, string ContentType)>> GetFeatureFlagAsync(string) Gets the value of a feature flag from Azure App Configuration. public Task<bool> GetFeatureFlagAsync(string key) Parameters key string The App Configuration feature flag key. Returns Task<bool> SetConfigurationSettingAsync(string, string, string) Sets the value of a configuration setting in Azure App Configuration. public Task SetConfigurationSettingAsync(string key, string value, string contentType) Parameters key string The App Configuration setting key. value string The value to set. contentType string The content type of the value. Returns Task SetFeatureFlagAsync(string, bool) Sets the value of a feature flag in Azure App Configuration. public Task SetFeatureFlagAsync(string key, bool flagEnabled) Parameters key string The App Configuration feature flag key. flagEnabled bool Whether to enable the feature flag. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.AzureKeyVaultService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.AzureKeyVaultService.html",
    "title": "Class AzureKeyVaultService | FoundationaLLM",
    "keywords": "Class AzureKeyVaultService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure Key Vault. public class AzureKeyVaultService : IAzureKeyVaultService Inheritance object AzureKeyVaultService Implements IAzureKeyVaultService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureKeyVaultService(SecretClient) Provides access to and management of Azure Key Vault. public AzureKeyVaultService(SecretClient secretClient) Parameters secretClient SecretClient The Key Vault SecretClient. Properties KeyVaultUri Gets the URI of the Key Vault. public string KeyVaultUri { get; } Property Value string Methods CheckKeyVaultSecretsExistAsync(IEnumerable<string?>) Returns a map of secret names and whether they exist in Key Vault. public Task<Dictionary<string, bool>> CheckKeyVaultSecretsExistAsync(IEnumerable<string?> secretNames) Parameters secretNames IEnumerable<string> The list of secret names to check. Returns Task<Dictionary<string, bool>> CheckSecretExistsAsync(string) Returns whether a secret exists in Key Vault. public Task<bool> CheckSecretExistsAsync(string secretName) Parameters secretName string The secret name to check. Returns Task<bool> GetSecretValue(string) Gets the value of a secret from Key Vault. public string? GetSecretValue(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns string GetSecretValueAsync(string) Gets the value of a secret from Key Vault. public Task<string?> GetSecretValueAsync(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns Task<string> SetSecretValueAsync(string, string) Sets the value of a secret in Key Vault. public Task SetSecretValueAsync(string secretName, string secretValue) Parameters secretName string The name of the secret whose value you wish to set. secretValue string The secret value. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.AzureEventGridEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.AzureEventGridEventService.html",
    "title": "Class AzureEventGridEventService | FoundationaLLM",
    "keywords": "Class AzureEventGridEventService Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Provides services to integrate with the Azure Event Grid eventing platform. public class AzureEventGridEventService : IEventService Inheritance object AzureEventGridEventService Implements IEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureEventGridEventService(IOptions<AzureEventGridEventServiceSettings>, IOptions<AzureEventGridEventServiceProfile>, IAzureResourceManagerService, ILogger<AzureEventGridEventService>) Creates a new instance of the AzureEventGridEventService event service. public AzureEventGridEventService(IOptions<AzureEventGridEventServiceSettings> settingsOptions, IOptions<AzureEventGridEventServiceProfile> profileOptions, IAzureResourceManagerService azureResourceManager, ILogger<AzureEventGridEventService> logger) Parameters settingsOptions IOptions<AzureEventGridEventServiceSettings> The options providing the settings for the service. profileOptions IOptions<AzureEventGridEventServiceProfile> The options providing the profile for the service. azureResourceManager IAzureResourceManagerService The IAzureResourceManagerService service providing access to Azure ARM services. logger ILogger<AzureEventGridEventService> The logger used for logging. Methods ExecuteAsync(CancellationToken) Executes the event service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartAsync(CancellationToken) Starts the event service, allowing it to initialize. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the event service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SubscribeToEventSetEvent(string, EventSetEventDelegate) Adds an event set event delgate to the list of event handlers for a specified event set namespace. public void SubscribeToEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling. UnsubscribeFromEventSetEvent(string, EventSetEventDelegate) Removes an event set event delegate from the list of event handlers for a specified event set namespace. public void UnsubscribeFromEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.EventsWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.EventsWorker.html",
    "title": "Class EventsWorker | FoundationaLLM",
    "keywords": "Class EventsWorker Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Background worker used to execute the event service. public class EventsWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService EventsWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventsWorker(IEventService, ILogger<EventsWorker>) Background worker used to execute the event service. public EventsWorker(IEventService eventService, ILogger<EventsWorker> logger) Parameters eventService IEventService The IEventService to run. logger ILogger<EventsWorker> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.LocalEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.LocalEventService.html",
    "title": "Class LocalEventService | FoundationaLLM",
    "keywords": "Class LocalEventService Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern. public class LocalEventService Inheritance object LocalEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LocalEventService(LocalEventServiceSettings, IEventService, ILogger) Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern. public LocalEventService(LocalEventServiceSettings settings, IEventService eventService, ILogger logger) Parameters settings LocalEventServiceSettings The LocalEventServiceSettings containing configuration settings for the service. eventService IEventService The IEventService event service that is publishing events through event namespaces. logger ILogger The logger used for logging. Methods StartLocalEventProcessing(Func<EventSetEventArgs, Task>) Kicks off the extraction of events from the events queue. The events are initially received from the events service and are queued internally. In the background, the extraction thread will dequeue and submit them to final processing using the provided event handler. public void StartLocalEventProcessing(Func<EventSetEventArgs, Task> eventHandler) Parameters eventHandler Func<EventSetEventArgs, Task> The event handler invoked to process each set of events. SubscribeToEventNamespaces(List<string>) Subscribes this instance to a specified list of event namespaces supported by the IEventService. public void SubscribeToEventNamespaces(List<string> eventNamespaces) Parameters eventNamespaces List<string> The list with the namespace to subscribe to."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.html",
    "title": "Namespace FoundationaLLM.Common.Services.Events | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Events Classes AzureEventGridEventService Provides services to integrate with the Azure Event Grid eventing platform. EventsWorker Background worker used to execute the event service. LocalEventService Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern."
  },
  "api/dotnet/FoundationaLLM.Common.Services.HttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.HttpClientFactoryService.html",
    "title": "Class HttpClientFactoryService | FoundationaLLM",
    "keywords": "Class HttpClientFactoryService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class HttpClientFactoryService : IHttpClientFactoryService Inheritance object HttpClientFactoryService Implements IHttpClientFactoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors HttpClientFactoryService(IHttpClientFactory, ICallContext, IDownstreamAPISettings) Creates a new instance of the HttpClientFactoryService class. public HttpClientFactoryService(IHttpClientFactory httpClientFactory, ICallContext callContext, IDownstreamAPISettings apiSettings) Parameters httpClientFactory IHttpClientFactory A fully configured IHttpClientFactory that allows access to HttpClient instances by name. callContext ICallContext Stores a UnifiedUserIdentity object resolved from one or more services. apiSettings IDownstreamAPISettings A DownstreamAPISettings class that contains the configured path to the desired API key. Exceptions ArgumentNullException Methods CreateClient(string) Creates a HttpClient instance from the provided client name. The client name must be registered in the IHttpClientFactory configuration. The headers added to the request are: X-API-KEY: The API key for the target API. X-USER-IDENTITY: The user identity information for the current user. public HttpClient CreateClient(string clientName) Parameters clientName string The named HttpClient client configuration. Returns HttpClient"
  },
  "api/dotnet/FoundationaLLM.Common.Services.IAzureAppConfigurationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.IAzureAppConfigurationService.html",
    "title": "Interface IAzureAppConfigurationService | FoundationaLLM",
    "keywords": "Interface IAzureAppConfigurationService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure App Configuration. public interface IAzureAppConfigurationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckAppConfigurationSettingsExistAsync() Returns a map of configuration setting keys and whether they exist in Azure App Configuration. Task<Dictionary<string, bool>> CheckAppConfigurationSettingsExistAsync() Returns Task<Dictionary<string, bool>> GetConfigurationSettingAsync(string) Gets the value of a configuration setting from Azure App Configuration. Task<string?> GetConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task<string> GetConfigurationSettingsAsync(string) Gets the values of configuration settings from Azure App Configuration. Task<List<(string Key, string? Value, string ContentType)>> GetConfigurationSettingsAsync(string keyFilter) Parameters keyFilter string The key name filter used to select the settings keys for which values are retrieved. Returns Task<List<(string Key, string Value, string ContentType)>> GetFeatureFlagAsync(string) Gets the value of a feature flag from Azure App Configuration. Task<bool> GetFeatureFlagAsync(string key) Parameters key string The App Configuration feature flag key. Returns Task<bool> SetConfigurationSettingAsync(string, string, string) Sets the value of a configuration setting in Azure App Configuration. Task SetConfigurationSettingAsync(string key, string value, string contentType) Parameters key string The App Configuration setting key. value string The value to set. contentType string The content type of the value. Returns Task SetFeatureFlagAsync(string, bool) Sets the value of a feature flag in Azure App Configuration. Task SetFeatureFlagAsync(string key, bool flagEnabled) Parameters key string The App Configuration feature flag key. flagEnabled bool Whether to enable the feature flag. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.IAzureKeyVaultService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.IAzureKeyVaultService.html",
    "title": "Interface IAzureKeyVaultService | FoundationaLLM",
    "keywords": "Interface IAzureKeyVaultService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure Key Vault. public interface IAzureKeyVaultService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KeyVaultUri Gets the URI of the Key Vault. string KeyVaultUri { get; } Property Value string Methods CheckKeyVaultSecretsExistAsync(IEnumerable<string?>) Returns a map of secret names and whether they exist in Key Vault. Task<Dictionary<string, bool>> CheckKeyVaultSecretsExistAsync(IEnumerable<string?> secretNames) Parameters secretNames IEnumerable<string> The list of secret names to check. Returns Task<Dictionary<string, bool>> CheckSecretExistsAsync(string) Returns whether a secret exists in Key Vault. Task<bool> CheckSecretExistsAsync(string secretName) Parameters secretName string The secret name to check. Returns Task<bool> GetSecretValue(string) Gets the value of a secret from Key Vault. string? GetSecretValue(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns string GetSecretValueAsync(string) Gets the value of a secret from Key Vault. Task<string?> GetSecretValueAsync(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns Task<string> SetSecretValueAsync(string, string) Sets the value of a secret in Key Vault. Task SetSecretValueAsync(string secretName, string secretValue) Parameters secretName string The name of the secret whose value you wish to set. secretValue string The secret value. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.MemoryCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.MemoryCacheService.html",
    "title": "Class MemoryCacheService | FoundationaLLM",
    "keywords": "Class MemoryCacheService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides an in-memory cache service. public class MemoryCacheService : ICacheService Inheritance object MemoryCacheService Implements ICacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryCacheService(ILogger<MemoryCacheService>) Provides an in-memory cache service. public MemoryCacheService(ILogger<MemoryCacheService> logger) Parameters logger ILogger<MemoryCacheService> The logger used for logging. Methods GetItemsCount(string) Gets the number of items in the cache that belong to a specified category. public int GetItemsCount(string categoryName) Parameters categoryName string The name of the category. Returns int Get<T>(CacheKey) Gets an object from the cache. public T? Get<T>(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Returns T The object identified by the key. Type Parameters T The type of object retrieved from the cache. Get<T>(CacheKey, Func<Task<T>>, bool, TimeSpan?) Gets an object from the cache. If the object is not found in the cache, will attempt to retrieve it using a specified retriever. public Task<T?> Get<T>(CacheKey key, Func<Task<T>> valueRetriever, bool allowNull, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. valueRetriever Func<Task<T>> The retriever used to get the value to populate the cache. allowNull bool Indicates whether null values returned by the value retriever should be cached or not. expirationTime TimeSpan? The TimeSpan time to live. Returns Task<T> The object identified by the key. Type Parameters T The type of object retrieved from the cache. Remove(CacheKey) Removes an object from the cache. public void Remove(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. RemoveByCategory(CacheKey) Removes all objects belonging to a category from the cache. public void RemoveByCategory(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Set<T>(CacheKey, T?, TimeSpan?) Adds an object to the cache. public void Set<T>(CacheKey key, T? value, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. value T The object to be added to the cache. expirationTime TimeSpan? The TimeSpan time to live. Type Parameters T The type of object retrieved from the cache."
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderServiceBase.html",
    "title": "Class ResourceProviderServiceBase | FoundationaLLM",
    "keywords": "Class ResourceProviderServiceBase Namespace FoundationaLLM.Common.Services.ResourceProviders Assembly FoundationaLLM.Common.dll Implements basic resource provider functionality public class ResourceProviderServiceBase : IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase Implements IResourceProviderService IManagementProviderService Derived AgentResourceProviderService AuthorizationResourceProviderService ConfigurationResourceProviderService DataSourceResourceProviderService PromptResourceProviderService VectorizationResourceProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderServiceBase(InstanceSettings, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, ILogger, List<string>?) Creates a new instance of the resource provider. public ResourceProviderServiceBase(InstanceSettings instanceSettings, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, ILogger logger, List<string>? eventNamespacesToSubscribe = null) Parameters instanceSettings InstanceSettings The InstanceSettings that provides instance-wide settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services to the resource provider. storageService IStorageService The IStorageService providing storage services to the resource provider. eventService IEventService The IEventService providing event services to the resource provider. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing services to instantiate resource validators. logger ILogger The logger used for logging. eventNamespacesToSubscribe List<string> The list of Event Service event namespaces to subscribe to for local event processing. Fields _authorizationService The IAuthorizationService providing authorization services to the resource provider. protected readonly IAuthorizationService _authorizationService Field Value IAuthorizationService _eventService The IEventService providing event services to the resource provider. protected readonly IEventService _eventService Field Value IEventService _instanceSettings The InstanceSettings that provides instance-wide settings. protected readonly InstanceSettings _instanceSettings Field Value InstanceSettings _logger The logger used for logging. protected readonly ILogger _logger Field Value ILogger _resourceValidatorFactory The IResourceValidatorFactory providing services to instantiate resource validators. protected readonly IResourceValidatorFactory _resourceValidatorFactory Field Value IResourceValidatorFactory _storageService The IStorageService providing storage services to the resource provider. protected readonly IStorageService _storageService Field Value IStorageService Properties IsInitialized Indicates whether the resource provider is initialized or not. public bool IsInitialized { get; } Property Value bool Name The name of the resource provider. public string Name { get; } Property Value string _name The name of the resource provider. Must be overridden in derived classes. protected virtual string _name { get; } Property Value string _serializerSettings Default JSON serialization settings. protected virtual JsonSerializerOptions _serializerSettings { get; } Property Value JsonSerializerOptions _storageContainerName The name of the storage container name used by the resource provider to store its internal data. protected virtual string _storageContainerName { get; } Property Value string Methods DeleteResourceAsync(ResourcePath) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected virtual Task DeleteResourceAsync(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task ExecuteActionAsync(ResourcePath, string) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected virtual Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath) The internal implementation of GetResource. Must be overridden in derived classes. protected virtual T GetResourceInternal<T>(ResourcePath resourcePath) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns T Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected virtual Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResource<T>(string) Gets a resource based on its logical path. public T GetResource<T>(string resourcePath) where T : class Parameters resourcePath string The logical path of the resource. Returns T The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. GetResourcesAsyncInternal(ResourcePath) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected virtual Task<object> GetResourcesAsyncInternal(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task<object> HandleDeleteAsync(string, UnifiedUserIdentity?) Handles a HTTP DELETE request for a specified resource path. public Task HandleDeleteAsync(string resourcePath, UnifiedUserIdentity? userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected virtual Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task HandleGetAsync(string, UnifiedUserIdentity?) Handles a HTTP GET request for a specified resource path. public Task<object> HandleGetAsync(string resourcePath, UnifiedUserIdentity? userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. HandlePostAsync(string, string, UnifiedUserIdentity?) Handles a HTTP POST request for a specified resource path. public Task<object> HandlePostAsync(string resourcePath, string serializedResource, UnifiedUserIdentity? userIdentity) Parameters resourcePath string The resource path. serializedResource string userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected virtual Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected virtual Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. Returns Task<object> UpsertResourceAsync<T>(ResourcePath, T) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected virtual Task UpsertResourceAsync<T>(ResourcePath resourcePath, T resource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. resource T The instance of the resource being created or updated. Returns Task Type Parameters T UpsertResourceAsync<T>(string, T) Creates or updates a resource based on its logical path. public Task<string> UpsertResourceAsync<T>(string resourcePath, T resource) where T : class Parameters resourcePath string The logical path of the resource. resource T The instance of the resource being created or updated. Returns Task<string> The object id of the resource. Type Parameters T The type of the resource."
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Services.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.ResourceProviders Classes ResourceProviderServiceBase Implements basic resource provider functionality"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.EntraUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.EntraUserClaimsProviderService.html",
    "title": "Class EntraUserClaimsProviderService | FoundationaLLM",
    "keywords": "Class EntraUserClaimsProviderService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. public class EntraUserClaimsProviderService : IUserClaimsProviderService Inheritance object EntraUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.MicrosoftGraphGroupMembershipService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.MicrosoftGraphGroupMembershipService.html",
    "title": "Class MicrosoftGraphGroupMembershipService | FoundationaLLM",
    "keywords": "Class MicrosoftGraphGroupMembershipService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll Implements group membership services using the Microsoft Graph API. public class MicrosoftGraphGroupMembershipService : IGroupMembershipService Inheritance object MicrosoftGraphGroupMembershipService Implements IGroupMembershipService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetGroupsForPrincipal(string) Retrieves the group identifiers list of the groups where the specified user principal is a member. public Task<List<string>> GetGroupsForPrincipal(string userPrincipalName) Parameters userPrincipalName string The user principal name (UPN) for which group membership is retrieved. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.NoOpUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.NoOpUserClaimsProviderService.html",
    "title": "Class NoOpUserClaimsProviderService | FoundationaLLM",
    "keywords": "Class NoOpUserClaimsProviderService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed. public class NoOpUserClaimsProviderService : IUserClaimsProviderService Inheritance object NoOpUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserIdentity(ClaimsPrincipal?) Returns null. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal Returns UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.html",
    "title": "Namespace FoundationaLLM.Common.Services.Security | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Security Classes EntraUserClaimsProviderService Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. MicrosoftGraphGroupMembershipService Implements group membership services using the Microsoft Graph API. NoOpUserClaimsProviderService No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.BlobStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.BlobStorageService.html",
    "title": "Class BlobStorageService | FoundationaLLM",
    "keywords": "Class BlobStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to Azure blob storage. public class BlobStorageService : StorageServiceBase, IStorageService Inheritance object StorageServiceBase BlobStorageService Implements IStorageService Inherited Members StorageServiceBase._logger StorageServiceBase.InstanceName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the BlobStorageService with the specified options and logger. Constructors BlobStorageService(IOptions<BlobStorageServiceSettings>, ILogger<BlobStorageService>) Provides access to Azure blob storage. public BlobStorageService(IOptions<BlobStorageServiceSettings> storageOptions, ILogger<BlobStorageService> logger) Parameters storageOptions IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<BlobStorageService> The logger used for logging. Remarks Initializes a new instance of the BlobStorageService with the specified options and logger. Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected override void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected override void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected override void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name. FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.DataLakeStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.DataLakeStorageService.html",
    "title": "Class DataLakeStorageService | FoundationaLLM",
    "keywords": "Class DataLakeStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to Azure Data Lake blob storage. public class DataLakeStorageService : StorageServiceBase, IStorageService Inheritance object StorageServiceBase DataLakeStorageService Implements IStorageService Inherited Members StorageServiceBase._logger StorageServiceBase.InstanceName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataLakeStorageService(BlobStorageServiceSettings, ILogger<DataLakeStorageService>) Initializes a new instance of the DataLakeStorageService with the specified options and logger. public DataLakeStorageService(BlobStorageServiceSettings storageSettings, ILogger<DataLakeStorageService> logger) Parameters storageSettings BlobStorageServiceSettings The BlobStorageServiceSettings object with the blob storage settings. logger ILogger<DataLakeStorageService> The logger used for logging. DataLakeStorageService(IOptions<BlobStorageServiceSettings>, ILogger<DataLakeStorageService>) Initializes a new instance of the DataLakeStorageService with the specified options and logger. public DataLakeStorageService(IOptions<BlobStorageServiceSettings> options, ILogger<DataLakeStorageService> logger) Parameters options IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the blob storage settings. logger ILogger<DataLakeStorageService> The logger used for logging. Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected override void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected override void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected override void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name. FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.StorageServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.StorageServiceBase.html",
    "title": "Class StorageServiceBase | FoundationaLLM",
    "keywords": "Class StorageServiceBase Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to storage. public abstract class StorageServiceBase Inheritance object StorageServiceBase Derived BlobStorageService DataLakeStorageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageServiceBase(BlobStorageServiceSettings, ILogger<StorageServiceBase>) Initializes a new instance of the StorageServiceBase with the specified settings and logger. public StorageServiceBase(BlobStorageServiceSettings settings, ILogger<StorageServiceBase> logger) Parameters settings BlobStorageServiceSettings The BlobStorageServiceSettings object with the settings. logger ILogger<StorageServiceBase> The logger used for logging. StorageServiceBase(IOptions<BlobStorageServiceSettings>, ILogger<StorageServiceBase>) Initializes a new instance of the StorageServiceBase with the specified options and logger. public StorageServiceBase(IOptions<BlobStorageServiceSettings> storageOptions, ILogger<StorageServiceBase> logger) Parameters storageOptions IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<StorageServiceBase> The logger used for logging. Fields _logger The logger used for logging. protected readonly ILogger<StorageServiceBase> _logger Field Value ILogger<StorageServiceBase> Properties InstanceName The optional instance name of the storage service. public string? InstanceName { get; set; } Property Value string Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected abstract void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected abstract void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected abstract void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Services.Storage | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Storage Classes BlobStorageService Provides access to Azure blob storage. DataLakeStorageService Provides access to Azure Data Lake blob storage. StorageServiceBase Provides access to storage."
  },
  "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.TokenTextSplitterService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.TokenTextSplitterService.html",
    "title": "Class TokenTextSplitterService | FoundationaLLM",
    "keywords": "Class TokenTextSplitterService Namespace FoundationaLLM.Common.Services.TextSplitters Assembly FoundationaLLM.Common.dll Splits text based on number of tokens. public class TokenTextSplitterService : ITextSplitterService Inheritance object TokenTextSplitterService Implements ITextSplitterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenTextSplitterService(ITokenizerService, IOptions<TokenTextSplitterServiceSettings>, ILogger<TokenTextSplitterService>) Splits text based on number of tokens. public TokenTextSplitterService(ITokenizerService tokenizerService, IOptions<TokenTextSplitterServiceSettings> options, ILogger<TokenTextSplitterService> logger) Parameters tokenizerService ITokenizerService The ITokenizerService used to tokenize the input text. options IOptions<TokenTextSplitterServiceSettings> The IOptions<TOptions> providing the settings for the service. logger ILogger<TokenTextSplitterService> The logger used for logging. Methods SplitPlainText(string) Splits plain text into multiple chunks. public (List<string> TextChunks, string Message) SplitPlainText(string text) Parameters text string The plain text to split. Returns (List<string> TextChunks, string Message) A list of strings containing the result of the split and a message with optional details about the split result."
  },
  "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.html",
    "title": "Namespace FoundationaLLM.Common.Services.TextSplitters | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.TextSplitters Classes TokenTextSplitterService Splits text based on number of tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.LeasedTikTokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.LeasedTikTokenizer.html",
    "title": "Class LeasedTikTokenizer | FoundationaLLM",
    "keywords": "Class LeasedTikTokenizer Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Extends the TikTokenizer class to support leasing to multiple clients. public class LeasedTikTokenizer : TikTokenizer, ITokenizer Inheritance object TikTokenizer LeasedTikTokenizer Implements ITokenizer Inherited Members TikTokenizer.DefaultCacheSize TikTokenizer.Encode(string, IReadOnlyCollection<string>) TikTokenizer.Encode(string, bool) TikTokenizer.EncodeTrimSuffix(string, IReadOnlyCollection<string>, int) TikTokenizer.EncodeTrimSuffix(string, int, bool) TikTokenizer.EncodeTrimPrefix(string, IReadOnlyCollection<string>, int) TikTokenizer.EncodeTrimPrefix(string, int, bool) TikTokenizer.Decode(int[]) TikTokenizer.NumOfCacheEntries object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LeasedTikTokenizer(Stream, IReadOnlyDictionary<string, int>, string, int) Extends the TikTokenizer class to support leasing to multiple clients. public LeasedTikTokenizer(Stream tikTokenBpeFileStream, IReadOnlyDictionary<string, int> specialTokensEncoder, string pattern, int cacheSize) Parameters tikTokenBpeFileStream Stream specialTokensEncoder IReadOnlyDictionary<string, int> pattern string cacheSize int Properties IsLeased Indicates whether the tokenizer is leased or not. public bool IsLeased { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftBPETokenizerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftBPETokenizerService.html",
    "title": "Class MicrosoftBPETokenizerService | FoundationaLLM",
    "keywords": "Class MicrosoftBPETokenizerService Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Implements an ITokenizerService using the Microsoft BPE tokenizer (https://github.com/microsoft/Tokenizer). This class should always be instantiated as a singleton when used in dependency injection scenarios. public class MicrosoftBPETokenizerService : ITokenizerService Inheritance object MicrosoftBPETokenizerService Implements ITokenizerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MicrosoftBPETokenizerService(ILogger<MicrosoftBPETokenizerService>) Initializes a new instance of the MicrosoftBPETokenizerService class. public MicrosoftBPETokenizerService(ILogger<MicrosoftBPETokenizerService> logger) Parameters logger ILogger<MicrosoftBPETokenizerService> The logger used for logging. Methods Decode(int[], string) Decode an array of integer token ids. public string Decode(int[] tokens, string encoderName) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string) Encode a string with a set of allowed special tokens that are not broken apart. public List<int> Encode(string text, string encoderName) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerConfig.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerConfig.html",
    "title": "Class TikTokenizerConfig | FoundationaLLM",
    "keywords": "Class TikTokenizerConfig Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Provides the configuration values required to create a new TikTokenizer instance. public record TikTokenizerConfig : IEquatable<TikTokenizerConfig> Inheritance object TikTokenizerConfig Implements IEquatable<TikTokenizerConfig> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TikTokenizerConfig(string, string, Dictionary<string, int>) Provides the configuration values required to create a new TikTokenizer instance. public TikTokenizerConfig(string RegexPattern, string MergeableRanksFileUrl, Dictionary<string, int> SpecialTokens) Parameters RegexPattern string Regex pattern to break a long string. MergeableRanksFileUrl string The URL used to download the BPE rank file. SpecialTokens Dictionary<string, int> Special tokens mapping. Properties MergeableRanksFileContent The raw content of the BPE rank file. public byte[]? MergeableRanksFileContent { get; set; } Property Value byte[] MergeableRanksFileUrl The URL used to download the BPE rank file. public string MergeableRanksFileUrl { get; init; } Property Value string RegexPattern Regex pattern to break a long string. public string RegexPattern { get; init; } Property Value string SpecialTokens Special tokens mapping. public Dictionary<string, int> SpecialTokens { get; init; } Property Value Dictionary<string, int>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerEncoders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerEncoders.html",
    "title": "Class TikTokenizerEncoders | FoundationaLLM",
    "keywords": "Class TikTokenizerEncoders Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Well-known TikTokenizer encoder names. public static class TikTokenizerEncoders Inheritance object TikTokenizerEncoders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CL100K_BASE Encoder used by OpenAI models like GPT-4, GPT-3.5-Turbo, and Text-Embedding-ADA-002. public const string CL100K_BASE = \"cl100k_base\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerTokens.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerTokens.html",
    "title": "Class TikTokenizerTokens | FoundationaLLM",
    "keywords": "Class TikTokenizerTokens Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Well-known special TikTokenizer token names. public static class TikTokenizerTokens Inheritance object TikTokenizerTokens Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ENDOFPROMPT End of prompt token. public const string ENDOFPROMPT = \"<|endofprompt|>\" Field Value string ENDOFTEXT End of text token. public const string ENDOFTEXT = \"<|endoftext|>\" Field Value string FIM_MIDDLE Fill-In-the-Middle (FIM) middle token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_MIDDLE = \"<|fim_middle|>\" Field Value string FIM_PREFIX Fill-In-the-Middle (FIM) prefix token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_PREFIX = \"<|fim_prefix|>\" Field Value string FIM_SUFFIX Fill-In-the-Middle (FIM) suffix token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_SUFFIX = \"<|fim_suffix|>\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TokenizerServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TokenizerServiceNames.html",
    "title": "Class TokenizerServiceNames | FoundationaLLM",
    "keywords": "Class TokenizerServiceNames Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Names of tokenizer services supported by the platform. public static class TokenizerServiceNames Inheritance object TokenizerServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MICROSOFT_BPE_TOKENIZER Tokenizer service implemented by Microsoft. For details, see https://github.com/microsoft/Tokenizer. public const string MICROSOFT_BPE_TOKENIZER = \"MicrosoftBPETokenizer\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.html",
    "title": "Namespace FoundationaLLM.Common.Services.Tokenizers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Tokenizers Classes LeasedTikTokenizer Extends the TikTokenizer class to support leasing to multiple clients. MicrosoftBPETokenizerService Implements an ITokenizerService using the Microsoft BPE tokenizer (https://github.com/microsoft/Tokenizer). This class should always be instantiated as a singleton when used in dependency injection scenarios. TikTokenizerConfig Provides the configuration values required to create a new TikTokenizer instance. TikTokenizerEncoders Well-known TikTokenizer encoder names. TikTokenizerTokens Well-known special TikTokenizer token names. TokenizerServiceNames Names of tokenizer services supported by the platform."
  },
  "api/dotnet/FoundationaLLM.Common.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.html",
    "title": "Namespace FoundationaLLM.Common.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services Namespaces FoundationaLLM.Common.Services.API FoundationaLLM.Common.Services.Azure FoundationaLLM.Common.Services.Events FoundationaLLM.Common.Services.ResourceProviders FoundationaLLM.Common.Services.Security FoundationaLLM.Common.Services.Storage FoundationaLLM.Common.Services.TextSplitters FoundationaLLM.Common.Services.Tokenizers Classes AzureAppConfigurationService Provides access to and management of Azure App Configuration. AzureKeyVaultService Provides access to and management of Azure Key Vault. HttpClientFactoryService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. MemoryCacheService Provides an in-memory cache service. Interfaces IAzureAppConfigurationService Provides access to and management of Azure App Configuration. IAzureKeyVaultService Provides access to and management of Azure Key Vault."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.AzureAISearchAuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.AzureAISearchAuthenticationTypes.html",
    "title": "Enum AzureAISearchAuthenticationTypes | FoundationaLLM",
    "keywords": "Enum AzureAISearchAuthenticationTypes Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Types of authentication for Azure AI Search. public enum AzureAISearchAuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIKey = 1 API key authentication type. AzureIdentity = 0 Azure managed identity authentication type. Unknown = -1 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.AzureOpenAIAuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.AzureOpenAIAuthenticationTypes.html",
    "title": "Enum AzureOpenAIAuthenticationTypes | FoundationaLLM",
    "keywords": "Enum AzureOpenAIAuthenticationTypes Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Types of authentication for Azure Open AI. public enum AzureOpenAIAuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIKey = 1 API key authentication type. AzureIdentity = 0 Azure managed identity authentication type. Unknown = -1 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html",
    "title": "Class CommonHttpRetryStrategyOptions | FoundationaLLM",
    "keywords": "Class CommonHttpRetryStrategyOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Common Http retry resiliency strategy options used by the API classes and their libraries. public static class CommonHttpRetryStrategyOptions Inheritance object CommonHttpRetryStrategyOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCommonHttpRetryStrategyOptions() Configures the commonly used Polly Http retry resiliency strategy options. public static HttpRetryStrategyOptions GetCommonHttpRetryStrategyOptions() Returns HttpRetryStrategyOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerOptions.html",
    "title": "Class CommonJsonSerializerOptions | FoundationaLLM",
    "keywords": "Class CommonJsonSerializerOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll JSON serializer settings for the API classes and their libraries. public static class CommonJsonSerializerOptions Inheritance object CommonJsonSerializerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJsonSerializerOptions() Configures the System.Text.Json JSON serializer settings. public static JsonSerializerOptions GetJsonSerializerOptions() Returns JsonSerializerOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.html",
    "title": "Namespace FoundationaLLM.Common.Settings | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Settings Classes CommonHttpRetryStrategyOptions Common Http retry resiliency strategy options used by the API classes and their libraries. CommonJsonSerializerOptions JSON serializer settings for the API classes and their libraries. Enums AzureAISearchAuthenticationTypes Types of authentication for Azure AI Search. AzureOpenAIAuthenticationTypes Types of authentication for Azure Open AI."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html",
    "title": "Class TaskPool | FoundationaLLM",
    "keywords": "Class TaskPool Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents a pool of active tasks with a predefined capacity. public class TaskPool Inheritance object TaskPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TaskPool(int) Constructs a task pool with a specified capacity. public TaskPool(int maxConcurrentTasks) Parameters maxConcurrentTasks int Indicates the maximum number of tasks accepted by the task pool. Properties AvailableCapacity Indicates whether the task pool is at capacity or not. public int AvailableCapacity { get; } Property Value int Methods Add(IEnumerable<Task>) Adds a new batch of tasks to the task pool. public void Add(IEnumerable<Task> tasks) Parameters tasks IEnumerable<Task> The list of tasks to be added to the pool. Exceptions TaskPoolException The exception raised when a task cannot be added to the pool (e.g., the task pool is at capacity)."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html",
    "title": "Class TaskPoolException | FoundationaLLM",
    "keywords": "Class TaskPoolException Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents errors that occur in task pools. public class TaskPoolException : Exception, ISerializable Inheritance object Exception TaskPoolException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TaskPoolException() Initializes a new instance of the TaskPoolException class with a default message. public TaskPoolException() TaskPoolException(string?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message) Parameters message string A string that describes the error. TaskPoolException(string?, Exception?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.html",
    "title": "Namespace FoundationaLLM.Common.Tasks | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Tasks Classes TaskPool Represents a pool of active tasks with a predefined capacity. TaskPoolException Represents errors that occur in task pools."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.Metadata.LanguageModelValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.Metadata.LanguageModelValidator.html",
    "title": "Class LanguageModelValidator | FoundationaLLM",
    "keywords": "Class LanguageModelValidator Namespace FoundationaLLM.Common.Validation.Metadata Assembly FoundationaLLM.Common.dll Validator for the LanguageModel model. public class LanguageModelValidator : AbstractValidator<LanguageModel>, IValidator<LanguageModel>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<LanguageModel> LanguageModelValidator Implements IValidator<LanguageModel> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<LanguageModel>.Validate(LanguageModel) AbstractValidator<LanguageModel>.ValidateAsync(LanguageModel, CancellationToken) AbstractValidator<LanguageModel>.Validate(ValidationContext<LanguageModel>) AbstractValidator<LanguageModel>.ValidateAsync(ValidationContext<LanguageModel>, CancellationToken) AbstractValidator<LanguageModel>.CreateDescriptor() AbstractValidator<LanguageModel>.RuleFor<TProperty>(Expression<Func<LanguageModel, TProperty>>) AbstractValidator<LanguageModel>.Transform<TProperty, TTransformed>(Expression<Func<LanguageModel, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<LanguageModel>.Transform<TProperty, TTransformed>(Expression<Func<LanguageModel, TProperty>>, Func<LanguageModel, TProperty, TTransformed>) AbstractValidator<LanguageModel>.RuleForEach<TElement>(Expression<Func<LanguageModel, IEnumerable<TElement>>>) AbstractValidator<LanguageModel>.TransformForEach<TElement, TTransformed>(Expression<Func<LanguageModel, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<LanguageModel>.TransformForEach<TElement, TTransformed>(Expression<Func<LanguageModel, IEnumerable<TElement>>>, Func<LanguageModel, TElement, TTransformed>) AbstractValidator<LanguageModel>.RuleSet(string, Action) AbstractValidator<LanguageModel>.When(Func<LanguageModel, bool>, Action) AbstractValidator<LanguageModel>.When(Func<LanguageModel, ValidationContext<LanguageModel>, bool>, Action) AbstractValidator<LanguageModel>.Unless(Func<LanguageModel, bool>, Action) AbstractValidator<LanguageModel>.Unless(Func<LanguageModel, ValidationContext<LanguageModel>, bool>, Action) AbstractValidator<LanguageModel>.WhenAsync(Func<LanguageModel, CancellationToken, Task<bool>>, Action) AbstractValidator<LanguageModel>.WhenAsync(Func<LanguageModel, ValidationContext<LanguageModel>, CancellationToken, Task<bool>>, Action) AbstractValidator<LanguageModel>.UnlessAsync(Func<LanguageModel, CancellationToken, Task<bool>>, Action) AbstractValidator<LanguageModel>.UnlessAsync(Func<LanguageModel, ValidationContext<LanguageModel>, CancellationToken, Task<bool>>, Action) AbstractValidator<LanguageModel>.Include(IValidator<LanguageModel>) AbstractValidator<LanguageModel>.Include<TValidator>(Func<LanguageModel, TValidator>) AbstractValidator<LanguageModel>.GetEnumerator() AbstractValidator<LanguageModel>.EnsureInstanceNotNull(object) AbstractValidator<LanguageModel>.PreValidate(ValidationContext<LanguageModel>, ValidationResult) AbstractValidator<LanguageModel>.RaiseValidationException(ValidationContext<LanguageModel>, ValidationResult) AbstractValidator<LanguageModel>.OnRuleAdded(IValidationRule<LanguageModel>) AbstractValidator<LanguageModel>.CascadeMode AbstractValidator<LanguageModel>.ClassLevelCascadeMode AbstractValidator<LanguageModel>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LanguageModelValidator() Configures the validation rules for the LanguageModel model. public LanguageModelValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.Metadata.html",
    "title": "Namespace FoundationaLLM.Common.Validation.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Validation.Metadata Classes LanguageModelValidator Validator for the LanguageModel model."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.ResourceBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.ResourceBaseValidator.html",
    "title": "Class ResourceBaseValidator | FoundationaLLM",
    "keywords": "Class ResourceBaseValidator Namespace FoundationaLLM.Common.Validation.ResourceProvider Assembly FoundationaLLM.Common.dll Validator for the ResourceBase model. public class ResourceBaseValidator : AbstractValidator<ResourceBase>, IValidator<ResourceBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ResourceBase> ResourceBaseValidator Implements IValidator<ResourceBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ResourceBase>.Validate(ResourceBase) AbstractValidator<ResourceBase>.ValidateAsync(ResourceBase, CancellationToken) AbstractValidator<ResourceBase>.Validate(ValidationContext<ResourceBase>) AbstractValidator<ResourceBase>.ValidateAsync(ValidationContext<ResourceBase>, CancellationToken) AbstractValidator<ResourceBase>.CreateDescriptor() AbstractValidator<ResourceBase>.RuleFor<TProperty>(Expression<Func<ResourceBase, TProperty>>) AbstractValidator<ResourceBase>.Transform<TProperty, TTransformed>(Expression<Func<ResourceBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ResourceBase>.Transform<TProperty, TTransformed>(Expression<Func<ResourceBase, TProperty>>, Func<ResourceBase, TProperty, TTransformed>) AbstractValidator<ResourceBase>.RuleForEach<TElement>(Expression<Func<ResourceBase, IEnumerable<TElement>>>) AbstractValidator<ResourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<ResourceBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ResourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<ResourceBase, IEnumerable<TElement>>>, Func<ResourceBase, TElement, TTransformed>) AbstractValidator<ResourceBase>.RuleSet(string, Action) AbstractValidator<ResourceBase>.When(Func<ResourceBase, bool>, Action) AbstractValidator<ResourceBase>.When(Func<ResourceBase, ValidationContext<ResourceBase>, bool>, Action) AbstractValidator<ResourceBase>.Unless(Func<ResourceBase, bool>, Action) AbstractValidator<ResourceBase>.Unless(Func<ResourceBase, ValidationContext<ResourceBase>, bool>, Action) AbstractValidator<ResourceBase>.WhenAsync(Func<ResourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.WhenAsync(Func<ResourceBase, ValidationContext<ResourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.UnlessAsync(Func<ResourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.UnlessAsync(Func<ResourceBase, ValidationContext<ResourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.Include(IValidator<ResourceBase>) AbstractValidator<ResourceBase>.Include<TValidator>(Func<ResourceBase, TValidator>) AbstractValidator<ResourceBase>.GetEnumerator() AbstractValidator<ResourceBase>.EnsureInstanceNotNull(object) AbstractValidator<ResourceBase>.PreValidate(ValidationContext<ResourceBase>, ValidationResult) AbstractValidator<ResourceBase>.RaiseValidationException(ValidationContext<ResourceBase>, ValidationResult) AbstractValidator<ResourceBase>.OnRuleAdded(IValidationRule<ResourceBase>) AbstractValidator<ResourceBase>.CascadeMode AbstractValidator<ResourceBase>.ClassLevelCascadeMode AbstractValidator<ResourceBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceBaseValidator() Configures the validation rules for the ResourceBase model. public ResourceBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.html",
    "title": "Namespace FoundationaLLM.Common.Validation.ResourceProvider | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Validation.ResourceProvider Classes ResourceBaseValidator Validator for the ResourceBase model."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceValidatorFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceValidatorFactory.html",
    "title": "Class ResourceValidatorFactory | FoundationaLLM",
    "keywords": "Class ResourceValidatorFactory Namespace FoundationaLLM.Common.Validation Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ResourceValidatorFactory : IResourceValidatorFactory Inheritance object ResourceValidatorFactory Implements IResourceValidatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceValidatorFactory(IServiceProvider) public ResourceValidatorFactory(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetValidator(Type) Gets a validator for the Type parameter, providing a non-generic option to resolve validators at runtime. public object? GetValidator(Type type) Parameters type Type The type of object being validated. Returns object GetValidator<T>() Gets a validator for the specified type. public IValidator<T>? GetValidator<T>() where T : class Returns IValidator<T> Type Parameters T The type of object being validated."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.html",
    "title": "Namespace FoundationaLLM.Common.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Validation Namespaces FoundationaLLM.Common.Validation.Metadata FoundationaLLM.Common.Validation.ResourceProvider Classes ResourceValidatorFactory Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.html": {
    "href": "api/dotnet/FoundationaLLM.Common.html",
    "title": "Namespace FoundationaLLM.Common | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common Namespaces FoundationaLLM.Common.Authentication FoundationaLLM.Common.Constants FoundationaLLM.Common.Exceptions FoundationaLLM.Common.Extensions FoundationaLLM.Common.Interfaces FoundationaLLM.Common.Middleware FoundationaLLM.Common.Models FoundationaLLM.Common.OpenAPI FoundationaLLM.Common.Services FoundationaLLM.Common.Settings FoundationaLLM.Common.Tasks FoundationaLLM.Common.Validation"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.AppConfigurationCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.AppConfigurationCatalog.html",
    "title": "Class AppConfigurationCatalog | FoundationaLLM",
    "keywords": "Class AppConfigurationCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll A catalog containing the configuration entries for the solution. public static class AppConfigurationCatalog Inheritance object AppConfigurationCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIs The APIs configuration entries for the solution. public static readonly List<AppConfigurationEntry> APIs Field Value List<AppConfigurationEntry> Agent The Agent configuration entries for the solution. public static readonly List<AppConfigurationEntry> Agent Field Value List<AppConfigurationEntry> AgentHub The Agent Hub configuration entries for the solution. public static readonly List<AppConfigurationEntry> AgentHub Field Value List<AppConfigurationEntry> AzureContentSafety The Azure Content Safety configuration entries for the solution. public static readonly List<AppConfigurationEntry> AzureContentSafety Field Value List<AppConfigurationEntry> AzureOpenAI The Azure OpenAI configuration entries for the solution. public static readonly List<AppConfigurationEntry> AzureOpenAI Field Value List<AppConfigurationEntry> BlobStorageMemorySource The Blob Storage Memory Source configuration entries for the solution. public static readonly List<AppConfigurationEntry> BlobStorageMemorySource Field Value List<AppConfigurationEntry> Branding The Branding configuration entries for the solution. public static readonly List<AppConfigurationEntry> Branding Field Value List<AppConfigurationEntry> Configuration The Configuration-based configuration entries for the solution. public static readonly List<AppConfigurationEntry> Configuration Field Value List<AppConfigurationEntry> CoreAPI The Core API configuration entries for the solution. public static readonly List<AppConfigurationEntry> CoreAPI Field Value List<AppConfigurationEntry> CoreWorker The Core Worker configuration entries for the solution. public static readonly List<AppConfigurationEntry> CoreWorker Field Value List<AppConfigurationEntry> CosmosDB The CosmosDB configuration entries for the solution. public static readonly List<AppConfigurationEntry> CosmosDB Field Value List<AppConfigurationEntry> DataSource The Data Source resource provider configuration entries for the solution. public static readonly List<AppConfigurationEntry> DataSource Field Value List<AppConfigurationEntry> DataSourceHub The Data Source Hub configuration entries for the solution. public static readonly List<AppConfigurationEntry> DataSourceHub Field Value List<AppConfigurationEntry> Event public static readonly List<AppConfigurationEntry> Event Field Value List<AppConfigurationEntry> Instance The Instance configuration entries for the solution. public static readonly List<AppConfigurationEntry> Instance Field Value List<AppConfigurationEntry> LangChain The LangChain configuration entries for the solution. public static readonly List<AppConfigurationEntry> LangChain Field Value List<AppConfigurationEntry> LangChainAPI The LangChain API configuration entries for the solution. public static readonly List<AppConfigurationEntry> LangChainAPI Field Value List<AppConfigurationEntry> Management The Management configuration entries for the solution. public static readonly List<AppConfigurationEntry> Management Field Value List<AppConfigurationEntry> ManagementAPI The Management API configuration entries for the solution. public static readonly List<AppConfigurationEntry> ManagementAPI Field Value List<AppConfigurationEntry> OpenAI The OpenAI configuration entries for the solution. public static readonly List<AppConfigurationEntry> OpenAI Field Value List<AppConfigurationEntry> Prompt The Prompt configuration entries for the solution. public static readonly List<AppConfigurationEntry> Prompt Field Value List<AppConfigurationEntry> PromptHub The Prompt Hub configuration entries for the solution. public static readonly List<AppConfigurationEntry> PromptHub Field Value List<AppConfigurationEntry> SemanticKernelAPI The Semantic Kernel API configuration entries for the solution. public static readonly List<AppConfigurationEntry> SemanticKernelAPI Field Value List<AppConfigurationEntry> UserPortal The User Portal configuration entries for the solution. public static readonly List<AppConfigurationEntry> UserPortal Field Value List<AppConfigurationEntry> Vectorization The Vectorization configuration entries for the solution. public static readonly List<AppConfigurationEntry> Vectorization Field Value List<AppConfigurationEntry> Methods GetAllEntries() Returns the list of all the app configuration entries for this solution. public static List<AppConfigurationEntry> GetAllEntries() Returns List<AppConfigurationEntry> GetRequiredConfigurationsForVersion(string) Returns the list of all the app configuration entries for this solution that are required for the given version. public static IEnumerable<AppConfigurationEntry> GetRequiredConfigurationsForVersion(string version) Parameters version string The current version of the caller. Returns IEnumerable<AppConfigurationEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.EnvironmentVariablesCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.EnvironmentVariablesCatalog.html",
    "title": "Class EnvironmentVariablesCatalog | FoundationaLLM",
    "keywords": "Class EnvironmentVariablesCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll Provides the catalog of environment variables required by the solution. public static class EnvironmentVariablesCatalog Inheritance object EnvironmentVariablesCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRequiredEnvironmentVariables(string) Returns the required environment variables. public static IEnumerable<EnvironmentVariableEntry> GetRequiredEnvironmentVariables(string serviceName = \"\") Parameters serviceName string Optional service name. When not specified, the default environment variables list is returned. Returns IEnumerable<EnvironmentVariableEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.KeyVaultSecretsCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.KeyVaultSecretsCatalog.html",
    "title": "Class KeyVaultSecretsCatalog | FoundationaLLM",
    "keywords": "Class KeyVaultSecretsCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll A catalog of Key Vault secrets used in this solution. public static class KeyVaultSecretsCatalog Inheritance object KeyVaultSecretsCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AuthorizationEntries The list of Key Vault secret entries specific to the Authorization API. public static readonly List<KeyVaultSecretEntry> AuthorizationEntries Field Value List<KeyVaultSecretEntry> GenericEntries The list of generic Key Vault secret entries. public static readonly List<KeyVaultSecretEntry> GenericEntries Field Value List<KeyVaultSecretEntry> Methods GetRequiredKeyVaultSecretsForVersion(string, string) Returns the list of all the Key Vault secrets for this solution that are required for the given version. public static IEnumerable<KeyVaultSecretEntry> GetRequiredKeyVaultSecretsForVersion(string version, string serviceName = \"\") Parameters version string The current version of the caller. serviceName string Optional service name. When not specified, the generic key vault secrets list is returned. Returns IEnumerable<KeyVaultSecretEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.html",
    "title": "Namespace FoundationaLLM.Configuration.Catalog | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Catalog Classes AppConfigurationCatalog A catalog containing the configuration entries for the solution. EnvironmentVariablesCatalog Provides the catalog of environment variables required by the solution. KeyVaultSecretsCatalog A catalog of Key Vault secrets used in this solution."
  },
  "api/dotnet/FoundationaLLM.Configuration.Constants.ConfigurationResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Constants.ConfigurationResourceProviderActions.html",
    "title": "Class ConfigurationResourceProviderActions | FoundationaLLM",
    "keywords": "Class ConfigurationResourceProviderActions Namespace FoundationaLLM.Configuration.Constants Assembly FoundationaLLM.Configuration.dll The names of the actions implemented by the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceProviderActions Inheritance object ConfigurationResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Configuration.Constants.ConfigurationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Constants.ConfigurationResourceTypeNames.html",
    "title": "Class ConfigurationResourceTypeNames | FoundationaLLM",
    "keywords": "Class ConfigurationResourceTypeNames Namespace FoundationaLLM.Configuration.Constants Assembly FoundationaLLM.Configuration.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceTypeNames Inheritance object ConfigurationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AppConfigurations Azure App Configuration key values. public const string AppConfigurations = \"appConfigurations\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Configuration.Constants.ConfigurationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Constants.ConfigurationTypes.html",
    "title": "Class ConfigurationTypes | FoundationaLLM",
    "keywords": "Class ConfigurationTypes Namespace FoundationaLLM.Configuration.Constants Assembly FoundationaLLM.Configuration.dll String constants for the types of configurations. public class ConfigurationTypes Inheritance object ConfigurationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AppConfigurationKeyValue Azure App Configuration key value. public const string AppConfigurationKeyValue = \"appconfiguration-key-value\" Field Value string AppConfigurationKeyVaultReference Azure App Configuration key vault reference. public const string AppConfigurationKeyVaultReference = \"appconfiguration-key-vault-reference\" Field Value string Basic Basic configuration without practical functionality. Used as base for all other configurations. public const string Basic = \"basic\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Configuration.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Constants.html",
    "title": "Namespace FoundationaLLM.Configuration.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Constants Classes ConfigurationResourceProviderActions The names of the actions implemented by the FoundationaLLM.Configuration resource provider. ConfigurationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Configuration resource provider. ConfigurationTypes String constants for the types of configurations."
  },
  "api/dotnet/FoundationaLLM.Configuration.Interfaces.IConfigurationHealthChecks.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Interfaces.IConfigurationHealthChecks.html",
    "title": "Interface IConfigurationHealthChecks | FoundationaLLM",
    "keywords": "Interface IConfigurationHealthChecks Namespace FoundationaLLM.Configuration.Interfaces Assembly FoundationaLLM.Configuration.dll Provides health checks for the application's configuration settings. public interface IConfigurationHealthChecks Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidateConfigurationsAsync(string) Validates the application's configuration settings. Task ValidateConfigurationsAsync(string version) Parameters version string The current app version. Returns Task ValidateEnvironmentVariables() Validates the application's environment variables. void ValidateEnvironmentVariables() ValidateKeyVaultSecretsAsync(string) Validates the application's Key Vault secrets. Task ValidateKeyVaultSecretsAsync(string version) Parameters version string The current app version. Returns Task Exceptions ConfigurationValidationException"
  },
  "api/dotnet/FoundationaLLM.Configuration.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Interfaces.html",
    "title": "Namespace FoundationaLLM.Configuration.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Interfaces Interfaces IConfigurationHealthChecks Provides health checks for the application's configuration settings."
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.AppConfigurationKeyBase.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.AppConfigurationKeyBase.html",
    "title": "Class AppConfigurationKeyBase | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyBase Namespace FoundationaLLM.Configuration.Models Assembly FoundationaLLM.Configuration.dll Azure App Configuration key model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AppConfigurationKeyValue), \"appconfiguration-key-value\")] [JsonDerivedType(typeof(AppConfigurationKeyVaultReference), \"appconfiguration-key-vault-reference\")] public class AppConfigurationKeyBase : ResourceBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase Derived AppConfigurationKeyValue AppConfigurationKeyVaultReference Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the value. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string Key The name of the App Configuration key. [JsonPropertyName(\"key\")] public string? Key { get; set; } Property Value string Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string Value The value of the App Configuration key. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.AppConfigurationKeyValue.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.AppConfigurationKeyValue.html",
    "title": "Class AppConfigurationKeyValue | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyValue Namespace FoundationaLLM.Configuration.Models Assembly FoundationaLLM.Configuration.dll Azure App Configuration key value model. public class AppConfigurationKeyValue : AppConfigurationKeyBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase AppConfigurationKeyValue Inherited Members AppConfigurationKeyBase.Type AppConfigurationKeyBase.Key AppConfigurationKeyBase.Value AppConfigurationKeyBase.ContentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.AppConfigurationKeyVaultReference.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.AppConfigurationKeyVaultReference.html",
    "title": "Class AppConfigurationKeyVaultReference | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyVaultReference Namespace FoundationaLLM.Configuration.Models Assembly FoundationaLLM.Configuration.dll Azure App Configuration key vault reference. public class AppConfigurationKeyVaultReference : AppConfigurationKeyBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase AppConfigurationKeyVaultReference Inherited Members AppConfigurationKeyBase.Type AppConfigurationKeyBase.Key AppConfigurationKeyBase.Value AppConfigurationKeyBase.ContentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KeyVaultSecretName The name of the Azure Key Vault secret being referenced. [JsonPropertyName(\"key_vault_secret_name\")] public string? KeyVaultSecretName { get; set; } Property Value string KeyVaultUri The URI of the Azure Key Vault service being referenced. [JsonPropertyName(\"key_vault_uri\")] public string? KeyVaultUri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.html",
    "title": "Namespace FoundationaLLM.Configuration.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Models Classes AppConfigurationKeyBase Azure App Configuration key model. AppConfigurationKeyValue Azure App Configuration key value model. AppConfigurationKeyVaultReference Azure App Configuration key vault reference."
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationHealthCheckService.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationHealthCheckService.html",
    "title": "Class ConfigurationHealthCheckService | FoundationaLLM",
    "keywords": "Class ConfigurationHealthCheckService Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll public class ConfigurationHealthCheckService : IHostedService Inheritance object ConfigurationHealthCheckService Implements IHostedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationHealthCheckService(IConfigurationHealthChecks, IConfiguration, ILogger<ConfigurationHealthCheckService>, IHostApplicationLifetime) public ConfigurationHealthCheckService(IConfigurationHealthChecks healthChecks, IConfiguration configuration, ILogger<ConfigurationHealthCheckService> logger, IHostApplicationLifetime appLifetime) Parameters healthChecks IConfigurationHealthChecks configuration IConfiguration logger ILogger<ConfigurationHealthCheckService> appLifetime IHostApplicationLifetime Methods StartAsync(CancellationToken) Triggered when the application host is ready to start the service. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the start process has been aborted. Returns Task A Task that represents the asynchronous Start operation. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderMetadata.html",
    "title": "Class ConfigurationResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class ConfigurationResourceProviderMetadata Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll Provides metadata for the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceProviderMetadata Inheritance object ConfigurationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderService.html",
    "title": "Class ConfigurationResourceProviderService | FoundationaLLM",
    "keywords": "Class ConfigurationResourceProviderService Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll Implements the FoundationaLLM.Configuration resource provider. public class ConfigurationResourceProviderService : ResourceProviderServiceBase, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase ConfigurationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase._authorizationService ResourceProviderServiceBase._storageService ResourceProviderServiceBase._eventService ResourceProviderServiceBase._resourceValidatorFactory ResourceProviderServiceBase._logger ResourceProviderServiceBase._instanceSettings ResourceProviderServiceBase._storageContainerName ResourceProviderServiceBase._serializerSettings ResourceProviderServiceBase.Name ResourceProviderServiceBase.IsInitialized ResourceProviderServiceBase.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.ExecuteActionAsync(ResourcePath, string) ResourceProviderServiceBase.DeleteResourceAsync(ResourcePath) ResourceProviderServiceBase.GetResource<T>(string) ResourceProviderServiceBase.UpsertResourceAsync<T>(string, T) ResourceProviderServiceBase.GetResourceInternal<T>(ResourcePath) ResourceProviderServiceBase.UpsertResourceAsync<T>(ResourcePath, T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IAzureAppConfigurationService, IAzureKeyVaultService, IConfigurationManager, ILogger<ConfigurationResourceProviderService>) Implements the FoundationaLLM.Configuration resource provider. public ConfigurationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureAppConfigurationService appConfigurationService, IAzureKeyVaultService keyVaultService, IConfigurationManager configurationManager, ILogger<ConfigurationResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. appConfigurationService IAzureAppConfigurationService The IAzureAppConfigurationService provding access to the app configuration service. keyVaultService IAzureKeyVaultService The IAzureKeyVaultService providing access to the key vault service. configurationManager IConfigurationManager The IConfigurationManager providing configuration services. logger ILogger<ConfigurationResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsyncInternal(ResourcePath) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsyncInternal(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.html",
    "title": "Namespace FoundationaLLM.Configuration.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Services Classes ConfigurationHealthCheckService ConfigurationResourceProviderMetadata Provides metadata for the FoundationaLLM.Configuration resource provider. ConfigurationResourceProviderService Implements the FoundationaLLM.Configuration resource provider."
  },
  "api/dotnet/FoundationaLLM.Configuration.Validation.ConfigurationHealthChecks.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Validation.ConfigurationHealthChecks.html",
    "title": "Class ConfigurationHealthChecks | FoundationaLLM",
    "keywords": "Class ConfigurationHealthChecks Namespace FoundationaLLM.Configuration.Validation Assembly FoundationaLLM.Configuration.dll Provides health checks for the application's configuration settings. public class ConfigurationHealthChecks : IConfigurationHealthChecks Inheritance object ConfigurationHealthChecks Implements IConfigurationHealthChecks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationHealthChecks(IAzureAppConfigurationService, IAzureKeyVaultService, ILogger<ConfigurationHealthChecks>) Provides health checks for the application's configuration settings. public ConfigurationHealthChecks(IAzureAppConfigurationService azureAppConfigurationService, IAzureKeyVaultService azureKeyVaultService, ILogger<ConfigurationHealthChecks> logger) Parameters azureAppConfigurationService IAzureAppConfigurationService azureKeyVaultService IAzureKeyVaultService logger ILogger<ConfigurationHealthChecks> Methods ValidateConfigurationsAsync(string) Validates the application's configuration settings. public Task ValidateConfigurationsAsync(string version) Parameters version string The current app version. Returns Task ValidateEnvironmentVariables() Validates the application's environment variables. public void ValidateEnvironmentVariables() ValidateKeyVaultSecretsAsync(string) Validates the application's Key Vault secrets. public Task ValidateKeyVaultSecretsAsync(string version) Parameters version string The current app version. Returns Task Exceptions ConfigurationValidationException"
  },
  "api/dotnet/FoundationaLLM.Configuration.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Validation.html",
    "title": "Namespace FoundationaLLM.Configuration.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Validation Classes ConfigurationHealthChecks Provides health checks for the application's configuration settings."
  },
  "api/dotnet/FoundationaLLM.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.html",
    "title": "Namespace FoundationaLLM.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration Namespaces FoundationaLLM.Configuration.Catalog FoundationaLLM.Configuration.Constants FoundationaLLM.Configuration.Interfaces FoundationaLLM.Configuration.Models FoundationaLLM.Configuration.Services FoundationaLLM.Configuration.Validation"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html",
    "title": "Class BrandingController | FoundationaLLM",
    "keywords": "Class BrandingController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides branding information for the client. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"[controller]\")] public class BrandingController : ControllerBase Inheritance object ControllerBase BrandingController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BrandingController(IOptions<ClientBrandingConfiguration>) Constructor for the Branding Controller. public BrandingController(IOptions<ClientBrandingConfiguration> settings) Parameters settings IOptions<ClientBrandingConfiguration> Methods Index() Retrieves the branding information for the client. [AllowAnonymous] [HttpGet(Name = \"GetBranding\")] public IActionResult Index() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Methods for orchestration services exposed by the Gatekeeper API service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Orchestration Controller. Constructors OrchestrationController(ICoreService, ICallContext, IEnumerable<IResourceProviderService>, ILogger<OrchestrationController>) Methods for orchestration services exposed by the Gatekeeper API service. public OrchestrationController(ICoreService coreService, ICallContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger<OrchestrationController> logger) Parameters coreService ICoreService The Core service provides methods for getting completions from the orchestrator. callContext ICallContext resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource provider services. logger ILogger<OrchestrationController> The logging interface used to log under the OrchestrationController type name. Remarks Constructor for the Orchestration Controller. Methods GetAgents() Retrieves a list of global and private agents. [HttpGet(\"agents\", Name = \"GetAgents\")] public Task<IEnumerable<ResourceBase>> GetAgents() Returns Task<IEnumerable<ResourceBase>> GetCompletion(CompletionRequest) Requests a completion from the downstream APIs. [HttpPost(\"completion\", Name = \"GetCompletion\")] public Task<IActionResult> GetCompletion(CompletionRequest directCompletionRequest) Parameters directCompletionRequest CompletionRequest The user prompt for which to generate a completion. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html",
    "title": "Class SessionsController | FoundationaLLM",
    "keywords": "Class SessionsController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for interacting with the Core service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"[controller]\")] public class SessionsController : ControllerBase Inheritance object ControllerBase SessionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Core Controller. Constructors SessionsController(ICoreService, ILogger<SessionsController>) Provides methods for interacting with the Core service. public SessionsController(ICoreService coreService, ILogger<SessionsController> logger) Parameters coreService ICoreService The Core service provides methods for managing chat sessions and messages, and for getting completions from the orchestrator. logger ILogger<SessionsController> The logging interface used to log under the SessionsController type name. Remarks Constructor for the Core Controller. Methods CreateNewChatSession() Creates a new chat session. [HttpPost(Name = \"CreateNewChatSession\")] public Task<Session> CreateNewChatSession() Returns Task<Session> DeleteChatSession(string) Delete a chat session and related messages. [HttpDelete(\"{sessionId}\", Name = \"DeleteChatSession\")] public Task DeleteChatSession(string sessionId) Parameters sessionId string Returns Task GetAllChatSessions() Returns list of chat session ids and names. [HttpGet(Name = \"GetAllChatSessions\")] public Task<IEnumerable<Session>> GetAllChatSessions() Returns Task<IEnumerable<Session>> GetChatCompletion(string, OrchestrationRequest) Receive a prompt from a user, vectorize it, and get a completion from the orchestration service. [HttpPost(\"{sessionId}/completion\", Name = \"GetChatCompletion\")] public Task<Completion> GetChatCompletion(string sessionId, OrchestrationRequest orchestrationRequest) Parameters sessionId string The id of the session for which to get a completion. orchestrationRequest OrchestrationRequest Returns Task<Completion> GetChatSessionMessages(string) Returns the chat messages related to an existing session. [HttpGet(\"{sessionId}/messages\", Name = \"GetChatSessionMessages\")] public Task<IEnumerable<Message>> GetChatSessionMessages(string sessionId) Parameters sessionId string The id of the session for which to retrieve chat messages. Returns Task<IEnumerable<Message>> GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. [HttpGet(\"{sessionId}/completionprompts/{completionPromptId}\", Name = \"GetCompletionPrompt\")] public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessage(string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. [HttpPost(\"{sessionId}/message/{messageId}/rate\", Name = \"RateMessage\")] public Task<Message> RateMessage(string messageId, string sessionId, bool? rating) Parameters messageId string The id of the message to rate. sessionId string The id of the session to which the message belongs. rating bool? The rating to assign to the message. Returns Task<Message> RenameChatSession(string, string) Rename the chat session. [HttpPost(\"{sessionId}/rename\", Name = \"RenameChatSession\")] public Task<Session> RenameChatSession(string sessionId, string newChatSessionName) Parameters sessionId string The id of the session to rename. newChatSessionName string The new name for the session. Returns Task<Session> SummarizeChatSessionName(string, string) Generate a name for a chat message, based on the passed in prompt. [HttpPost(\"{sessionId}/summarize-name\", Name = \"SummarizeChatSessionName\")] public Task<Completion> SummarizeChatSessionName(string sessionId, string prompt) Parameters sessionId string The id of the session for which to generate a name. prompt string The prompt to use to generate the name. Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for checking the status of the service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html",
    "title": "Class UserProfilesController | FoundationaLLM",
    "keywords": "Class UserProfilesController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing user profiles. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"[controller]\")] public class UserProfilesController : ControllerBase Inheritance object ControllerBase UserProfilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the UserProfiles Controller. Constructors UserProfilesController(IUserProfileService) Provides methods for retrieving and managing user profiles. public UserProfilesController(IUserProfileService userProfileService) Parameters userProfileService IUserProfileService The Core service provides methods for managing the user profile. Remarks Constructor for the UserProfiles Controller. Methods Index() Retrieves user profiles. [HttpGet(Name = \"GetUserProfile\")] public Task<IActionResult> Index() Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Core.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.API.Controllers Classes BrandingController Provides branding information for the client. OrchestrationController Methods for orchestration services exposed by the Gatekeeper API service. SessionsController Provides methods for interacting with the Core service. StatusController Provides methods for checking the status of the service. UserProfilesController Provides methods for retrieving and managing user profiles."
  },
  "api/dotnet/FoundationaLLM.Core.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Core.API Assembly FoundationaLLM.Core.API.dll Main entry point for the Core API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Core API service configuration. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Core.API.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.html",
    "title": "Namespace FoundationaLLM.Core.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.API Namespaces FoundationaLLM.Core.API.Controllers Classes Program Main entry point for the Core API."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html",
    "title": "Interface ICoreService | FoundationaLLM",
    "keywords": "Interface ICoreService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. public interface ICoreService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateNewChatSessionAsync() Creates a new chat session. Task<Session> CreateNewChatSessionAsync() Returns Task<Session> DeleteChatSessionAsync(string) Delete a chat session and related messages. Task DeleteChatSessionAsync(string sessionId) Parameters sessionId string Returns Task GetAllChatSessionsAsync() Returns list of chat session ids and names. Task<List<Session>> GetAllChatSessionsAsync() Returns Task<List<Session>> GetChatCompletionAsync(OrchestrationRequest) Receive a prompt from a user, retrieve the message history from the related session, generate a completion response, and log full completion results. Task<Completion> GetChatCompletionAsync(OrchestrationRequest orchestrationRequest) Parameters orchestrationRequest OrchestrationRequest Returns Task<Completion> GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. Task<List<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<List<Message>> GetCompletionAsync(CompletionRequest) Provides a completion for a user prompt, without a session. Task<Completion> GetCompletionAsync(CompletionRequest directCompletionRequest) Parameters directCompletionRequest CompletionRequest Returns Task<Completion> GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessageAsync(string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. Task<Message> RateMessageAsync(string id, string sessionId, bool? rating) Parameters id string sessionId string rating bool? Returns Task<Message> RenameChatSessionAsync(string, string) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. Task<Session> RenameChatSessionAsync(string sessionId, string newChatSessionName) Parameters sessionId string newChatSessionName string Returns Task<Session> SummarizeChatSessionNameAsync(string?, string) Generate a name for a chat message, based on the passed in prompt. Task<Completion> SummarizeChatSessionNameAsync(string? sessionId, string prompt) Parameters sessionId string prompt string Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html",
    "title": "Interface ICosmosDbChangeFeedService | FoundationaLLM",
    "keywords": "Interface ICosmosDbChangeFeedService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains Azure Cosmos DB change feed methods. public interface ICosmosDbChangeFeedService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Indicates whether the Azure Cosmos DB change feed is initialized. bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbService.html",
    "title": "Interface ICosmosDbService | FoundationaLLM",
    "keywords": "Interface ICosmosDbService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for accessing Azure Cosmos DB for NoSQL. public interface ICosmosDbService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteSessionAndMessagesAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. Task DeleteSessionAndMessagesAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetSessionAsync(string, CancellationToken) Performs a point read to retrieve a single chat session item. Task<Session> GetSessionAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Session> The chat session item. GetSessionMessagesAsync(string, string, CancellationToken) Gets a list of all current chat messages for a specified session identifier. Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetSessionsAsync(string, string, CancellationToken) Gets a list of all current chat sessions. Task<List<Session>> GetSessionsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The session type to return. upn string The user principal name used for retrieving sessions for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Session>> List of distinct chat session items. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> GetVectorSearchDocumentsAsync(List<DocumentVector>, CancellationToken) Reads all documents retrieved by Vector Search. Task<string> GetVectorSearchDocumentsAsync(List<DocumentVector> vectorDocuments, CancellationToken cancellationToken = default) Parameters vectorDocuments List<DocumentVector> List string of JSON documents from vector search results cancellationToken CancellationToken Cancellation token for async calls. Returns Task<string> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. InsertSessionAsync(Session, CancellationToken) Creates a new chat session. Task<Session> InsertSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Newly created chat session item. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateMessageRatingAsync(string, string, bool?, CancellationToken) Updates a message's rating through a patch operation. Task<Message> UpdateMessageRatingAsync(string id, string sessionId, bool? rating, CancellationToken cancellationToken = default) Parameters id string The message id. sessionId string The message's partition key (session id). rating bool? The rating to replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateSessionAsync(Session, CancellationToken) Updates an existing chat session. Task<Session> UpdateSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised created chat session item. UpdateSessionNameAsync(string, string, CancellationToken) Updates a session's name through a patch operation. Task<Session> UpdateSessionNameAsync(string id, string name, CancellationToken cancellationToken = default) Parameters id string The session id. name string The session's new name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised chat session item. UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Session, CancellationToken) Create or update a user session from the passed in Session object. Task UpsertUserSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html",
    "title": "Interface IGatekeeperAPIService | FoundationaLLM",
    "keywords": "Interface IGatekeeperAPIService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public interface IGatekeeperAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> GetSummary(SummaryRequest) Requests a summary from the downstream APIs via the Gatekeeper API. Task<string> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summary request object. Returns Task<string> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IUserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IUserProfileService.html",
    "title": "Interface IUserProfileService | FoundationaLLM",
    "keywords": "Interface IUserProfileService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Provides methods for working with user profiles. public interface IUserProfileService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserProfileAsync() Returns the user profile of the signed in user. Task<UserProfile?> GetUserProfileAsync() Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string) Returns the user profile of the specified user. Task<UserProfile?> GetUserProfileForUserAsync(string upn) Parameters upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(UserProfile) Inserts or updates a user profile. Task UpsertUserProfileAsync(UserProfile userProfile) Parameters userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Interfaces Interfaces ICoreService Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. ICosmosDbChangeFeedService Contains Azure Cosmos DB change feed methods. ICosmosDbService Contains methods for accessing Azure Cosmos DB for NoSQL. IGatekeeperAPIService Contains methods for interacting with the Gatekeeper API. IUserProfileService Provides methods for working with user profiles."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.ChatSessionNameSummarizationType.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.ChatSessionNameSummarizationType.html",
    "title": "Enum ChatSessionNameSummarizationType | FoundationaLLM",
    "keywords": "Enum ChatSessionNameSummarizationType Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Types of summarization for chat session names. public enum ChatSessionNameSummarizationType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields LLM = 1 Name summarization produced by a LLM via a completion requesting summarization. Timestamp = 0 Name summarization containing the UTC time of the creation of the chat session."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.CoreServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.CoreServiceSettings.html",
    "title": "Class CoreServiceSettings | FoundationaLLM",
    "keywords": "Class CoreServiceSettings Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Provides settings for the CoreService. public class CoreServiceSettings Inheritance object CoreServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BypassGatekeeper Controls whether the Gatekeeper API will be invoked or not. public required bool BypassGatekeeper { get; set; } Property Value bool SessionSummarization The type of summarization for chat session names. public required ChatSessionNameSummarizationType SessionSummarization { get; set; } Property Value ChatSessionNameSummarizationType"
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.CosmosDbSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.CosmosDbSettings.html",
    "title": "Class CosmosDbSettings | FoundationaLLM",
    "keywords": "Class CosmosDbSettings Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Stores the Azure Cosmos DB settings from the app configuration. public record CosmosDbSettings : IEquatable<CosmosDbSettings> Inheritance object CosmosDbSettings Implements IEquatable<CosmosDbSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChangeFeedLeaseContainer The name of the Azure Cosmos DB container used for change feed leases. public required string ChangeFeedLeaseContainer { get; init; } Property Value string Containers Comma-separated list of Azure Cosmos DB container names. public required string Containers { get; init; } Property Value string Database The name of the Azure Cosmos DB database. public required string Database { get; init; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; init; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; init; } Property Value string Key The Azure Cosmos DB key. public required string Key { get; init; } Property Value string MonitoredContainers Comma-separated list of Azure Cosmos DB container names to monitor for changes. public required string MonitoredContainers { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Core.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Models.Configuration Classes CoreServiceSettings Provides settings for the CoreService. CosmosDbSettings Stores the Azure Cosmos DB settings from the app configuration. Enums ChatSessionNameSummarizationType Types of summarization for chat session names."
  },
  "api/dotnet/FoundationaLLM.Core.Models.SessionTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.SessionTypes.html",
    "title": "Class SessionTypes | FoundationaLLM",
    "keywords": "Class SessionTypes Namespace FoundationaLLM.Core.Models Assembly FoundationaLLM.Core.dll Constants for chat session types. public static class SessionTypes Inheritance object SessionTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KioskSession Named session with matching type for the KioskSession. public const string KioskSession = \"KioskSession\" Field Value string Session Named session with matching type for the Session. public const string Session = \"Session\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.html",
    "title": "Namespace FoundationaLLM.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Models Namespaces FoundationaLLM.Core.Models.Configuration Classes SessionTypes Constants for chat session types."
  },
  "api/dotnet/FoundationaLLM.Core.Services.CoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CoreService.html",
    "title": "Class CoreService | FoundationaLLM",
    "keywords": "Class CoreService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Initializes a new instance of the CoreService class. public class CoreService : ICoreService Inheritance object CoreService Implements ICoreService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreService(ICosmosDbService, IEnumerable<IDownstreamAPIService>, ILogger<CoreService>, IOptions<ClientBrandingConfiguration>, IOptions<CoreServiceSettings>, ICallContext) Initializes a new instance of the CoreService class. public CoreService(ICosmosDbService cosmosDbService, IEnumerable<IDownstreamAPIService> downstreamAPIServices, ILogger<CoreService> logger, IOptions<ClientBrandingConfiguration> brandingSettings, IOptions<CoreServiceSettings> settings, ICallContext callContext) Parameters cosmosDbService ICosmosDbService The Azure Cosmos DB service that contains chat sessions and messages. downstreamAPIServices IEnumerable<IDownstreamAPIService> The services used to make calls to the downstream APIs. logger ILogger<CoreService> The logging interface used to log under the CoreService type name. brandingSettings IOptions<ClientBrandingConfiguration> The ClientBrandingConfiguration settings retrieved by the injected IOptions<TOptions>. settings IOptions<CoreServiceSettings> The CoreServiceSettings settings for the service. callContext ICallContext Contains contextual data for the calling service. Methods CreateNewChatSessionAsync() Creates a new chat session. public Task<Session> CreateNewChatSessionAsync() Returns Task<Session> DeleteChatSessionAsync(string) Delete a chat session and related messages. public Task DeleteChatSessionAsync(string sessionId) Parameters sessionId string Returns Task GetAllChatSessionsAsync() Returns list of chat session ids and names. public Task<List<Session>> GetAllChatSessionsAsync() Returns Task<List<Session>> GetChatCompletionAsync(OrchestrationRequest) Receive a prompt from a user, retrieve the message history from the related session, generate a completion response, and log full completion results. public Task<Completion> GetChatCompletionAsync(OrchestrationRequest orchestrationRequest) Parameters orchestrationRequest OrchestrationRequest Returns Task<Completion> GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. public Task<List<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<List<Message>> GetCompletionAsync(CompletionRequest) Provides a completion for a user prompt, without a session. public Task<Completion> GetCompletionAsync(CompletionRequest directCompletionRequest) Parameters directCompletionRequest CompletionRequest Returns Task<Completion> GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessageAsync(string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. public Task<Message> RateMessageAsync(string id, string sessionId, bool? rating) Parameters id string sessionId string rating bool? Returns Task<Message> RenameChatSessionAsync(string, string) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. public Task<Session> RenameChatSessionAsync(string sessionId, string newChatSessionName) Parameters sessionId string newChatSessionName string Returns Task<Session> SummarizeChatSessionNameAsync(string?, string) Generate a name for a chat message, based on the passed in prompt. public Task<Completion> SummarizeChatSessionNameAsync(string? sessionId, string prompt) Parameters sessionId string prompt string Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CosmosDbChangeFeedService.html",
    "title": "Class CosmosDbChangeFeedService | FoundationaLLM",
    "keywords": "Class CosmosDbChangeFeedService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CosmosDbChangeFeedService : ICosmosDbChangeFeedService Inheritance object CosmosDbChangeFeedService Implements ICosmosDbChangeFeedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbChangeFeedService(ILogger<CosmosDbChangeFeedService>, ICosmosDbService, IOptions<CosmosDbSettings>) Initializes a new instance of the CosmosDbChangeFeedService class. public CosmosDbChangeFeedService(ILogger<CosmosDbChangeFeedService> logger, ICosmosDbService cosmosDbService, IOptions<CosmosDbSettings> settings) Parameters logger ILogger<CosmosDbChangeFeedService> The logging interface used to log under the CosmosDbChangeFeedService type name. cosmosDbService ICosmosDbService Contains standard methods for managing data stored within the Azure Cosmos DB workspace. settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Properties IsInitialized Gets a value indicating whether the change feeds have been initialized. public bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. public Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. public Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CosmosDbService.html",
    "title": "Class CosmosDbService | FoundationaLLM",
    "keywords": "Class CosmosDbService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Service to access Azure Cosmos DB for NoSQL. public class CosmosDbService : ICosmosDbService Inheritance object CosmosDbService Implements ICosmosDbService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbService(IOptions<CosmosDbSettings>, ILogger<CosmosDbService>) Initializes a new instance of the CosmosDbService class. public CosmosDbService(IOptions<CosmosDbSettings> settings, ILogger<CosmosDbService> logger) Parameters settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. logger ILogger<CosmosDbService> The logging interface used to log under the CosmosDbService type name. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Methods DeleteSessionAndMessagesAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. public Task DeleteSessionAndMessagesAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetSessionAsync(string, CancellationToken) Performs a point read to retrieve a single chat session item. public Task<Session> GetSessionAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Session> The chat session item. GetSessionMessagesAsync(string, string, CancellationToken) Gets a list of all current chat messages for a specified session identifier. public Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetSessionsAsync(string, string, CancellationToken) Gets a list of all current chat sessions. public Task<List<Session>> GetSessionsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The session type to return. upn string The user principal name used for retrieving sessions for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Session>> List of distinct chat session items. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. public Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> GetVectorSearchDocumentsAsync(List<DocumentVector>, CancellationToken) Reads all documents retrieved by Vector Search. public Task<string> GetVectorSearchDocumentsAsync(List<DocumentVector> vectorDocuments, CancellationToken cancellationToken = default) Parameters vectorDocuments List<DocumentVector> List string of JSON documents from vector search results cancellationToken CancellationToken Cancellation token for async calls. Returns Task<string> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. public Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. InsertSessionAsync(Session, CancellationToken) Creates a new chat session. public Task<Session> InsertSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Newly created chat session item. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. public Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateMessageRatingAsync(string, string, bool?, CancellationToken) Updates a message's rating through a patch operation. public Task<Message> UpdateMessageRatingAsync(string id, string sessionId, bool? rating, CancellationToken cancellationToken = default) Parameters id string The message id. sessionId string The message's partition key (session id). rating bool? The rating to replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateSessionAsync(Session, CancellationToken) Updates an existing chat session. public Task<Session> UpdateSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised created chat session item. UpdateSessionNameAsync(string, string, CancellationToken) Updates a session's name through a patch operation. public Task<Session> UpdateSessionNameAsync(string id, string name, CancellationToken cancellationToken = default) Parameters id string The session id. name string The session's new name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised chat session item. UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. public Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. public Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Session, CancellationToken) Create or update a user session from the passed in Session object. public Task UpsertUserSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html",
    "title": "Class GatekeeperAPIService | FoundationaLLM",
    "keywords": "Class GatekeeperAPIService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperAPIService : IGatekeeperAPIService Inheritance object GatekeeperAPIService Implements IGatekeeperAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperAPIService(IHttpClientFactoryService) Initializes a new instance of the GatekeeperAPIService class. public GatekeeperAPIService(IHttpClientFactoryService httpClientFactoryService) Parameters httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gateway API requests. Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. public Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> GetSummary(SummaryRequest) Requests a summary from the downstream APIs via the Gatekeeper API. public Task<string> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summary request object. Returns Task<string> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. public Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.UserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.UserProfileService.html",
    "title": "Class UserProfileService | FoundationaLLM",
    "keywords": "Class UserProfileService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class UserProfileService : IUserProfileService Inheritance object UserProfileService Implements IUserProfileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfileService(ICosmosDbService, ILogger<CoreService>, ICallContext) Initializes a new instance of the CoreService class. public UserProfileService(ICosmosDbService cosmosDbService, ILogger<CoreService> logger, ICallContext callContext) Parameters cosmosDbService ICosmosDbService The Azure Cosmos DB service that contains user profiles. logger ILogger<CoreService> The logging interface used to log under the UserProfileService type name. callContext ICallContext Contains contextual data for the calling service. Methods GetUserProfileAsync() Returns the user profile of the signed in user. public Task<UserProfile?> GetUserProfileAsync() Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string) Returns the user profile of the specified user. public Task<UserProfile?> GetUserProfileForUserAsync(string upn) Parameters upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(UserProfile) Inserts or updates a user profile. public Task UpsertUserProfileAsync(UserProfile userProfile) Parameters userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.html",
    "title": "Namespace FoundationaLLM.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Services Classes CoreService Initializes a new instance of the CoreService class. CosmosDbChangeFeedService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. CosmosDbService Service to access Azure Cosmos DB for NoSQL. GatekeeperAPIService Contains methods for interacting with the Gatekeeper API. UserProfileService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html",
    "title": "Class ObjectExtensions | FoundationaLLM",
    "keywords": "Class ObjectExtensions Namespace FoundationaLLM.Core.Utils Assembly FoundationaLLM.Core.dll Contains extension methods for objects. public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPropertyValues(object, List<string>) Gets the values of a specified set of properties of an object. public static List<string?> GetPropertyValues(this object obj, List<string> propertyNames) Parameters obj object The object instance. propertyNames List<string> The list of property names. Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Core.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.html",
    "title": "Namespace FoundationaLLM.Core.Utils | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Utils Classes ObjectExtensions Contains extension methods for objects."
  },
  "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html",
    "title": "Class ChangeFeedWorker | FoundationaLLM",
    "keywords": "Class ChangeFeedWorker Namespace FoundationaLLM.Core.Worker Assembly FoundationaLLM.Core.Worker.dll Background service that runs the Change Feed Processor. public class ChangeFeedWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService ChangeFeedWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ChangeFeedWorker(ILogger<ChangeFeedWorker>, TelemetryClient, ICosmosDbChangeFeedService) Instantiates a new instance of the ChangeFeedWorker. public ChangeFeedWorker(ILogger<ChangeFeedWorker> logger, TelemetryClient telemetryClient, ICosmosDbChangeFeedService cosmosDbChangeFeedService) Parameters logger ILogger<ChangeFeedWorker> The logging interface used to log under the ChangeFeedWorker type name. telemetryClient TelemetryClient The telemetry client sends events, metrics, and other telemetry to the App Insights service. cosmosDbChangeFeedService ICosmosDbChangeFeedService The Cosmos DB change feed processor that performs the event processing tasks for the worker. Methods ExecuteAsync(CancellationToken) Executes the Change Feed Processor. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.html",
    "title": "Namespace FoundationaLLM.Core.Worker | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Worker Classes ChangeFeedWorker Background service that runs the Change Feed Processor."
  },
  "api/dotnet/FoundationaLLM.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Core.html",
    "title": "Namespace FoundationaLLM.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core Namespaces FoundationaLLM.Core.API FoundationaLLM.Core.Interfaces FoundationaLLM.Core.Models FoundationaLLM.Core.Services FoundationaLLM.Core.Utils FoundationaLLM.Core.Worker"
  },
  "api/dotnet/FoundationaLLM.DataSource.Constants.DataSourceResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Constants.DataSourceResourceProviderActions.html",
    "title": "Class DataSourceResourceProviderActions | FoundationaLLM",
    "keywords": "Class DataSourceResourceProviderActions Namespace FoundationaLLM.DataSource.Constants Assembly FoundationaLLM.DataSource.dll The names of the actions implemented by the Data Source resource provider. public class DataSourceResourceProviderActions Inheritance object DataSourceResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.DataSource.Constants.DataSourceTypes.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Constants.DataSourceTypes.html",
    "title": "Class DataSourceTypes | FoundationaLLM",
    "keywords": "Class DataSourceTypes Namespace FoundationaLLM.DataSource.Constants Assembly FoundationaLLM.DataSource.dll String constants for the types of data sources. public static class DataSourceTypes Inheritance object DataSourceTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureDataLake Azure Data Lake data source. public const string AzureDataLake = \"azure-data-lake\" Field Value string AzureSQLDatabase Azure SQL Database data source. public const string AzureSQLDatabase = \"azure-sql-database\" Field Value string Basic Basic data source without practical functionality. Used as base for all other data sources. public const string Basic = \"basic\" Field Value string SharePointOnlineSite SharePoint Online Site data source. public const string SharePointOnlineSite = \"sharepoint-online-site\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.DataSource.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Constants.html",
    "title": "Namespace FoundationaLLM.DataSource.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.Constants Classes DataSourceResourceProviderActions The names of the actions implemented by the Data Source resource provider. DataSourceTypes String constants for the types of data sources."
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.AzureDataLakeDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.AzureDataLakeDataSource.html",
    "title": "Class AzureDataLakeDataSource | FoundationaLLM",
    "keywords": "Class AzureDataLakeDataSource Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Azure Data Lake data source. public class AzureDataLakeDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase AzureDataLakeDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSource() Creates a new instance of the AzureDataLakeDataSource data source. public AzureDataLakeDataSource() Properties Folders The list of folders from the data lake. The format is [container_name]/[folder_path]. [JsonPropertyName(\"folders\")] public List<string> Folders { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.AzureSQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.AzureSQLDatabaseDataSource.html",
    "title": "Class AzureSQLDatabaseDataSource | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseDataSource Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Azure SQL Database data source. public class AzureSQLDatabaseDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase AzureSQLDatabaseDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSource() Creates a new instance of the AzureSQLDatabaseDataSource data source. public AzureSQLDatabaseDataSource() Properties Tables The list of tables from the database. The format is [schema].[table_name]. [JsonPropertyName(\"tables\")] public List<string> Tables { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "keywords": "Class DataSourceBase Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Basic data source. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AzureDataLakeDataSource), \"azure-data-lake\")] [JsonDerivedType(typeof(AzureSQLDatabaseDataSource), \"azure-sql-database\")] [JsonDerivedType(typeof(SharePointOnlineSiteDataSource), \"sharepoint-online-site\")] public class DataSourceBase : ResourceBase Inheritance object ResourceName ResourceBase DataSourceBase Derived AzureDataLakeDataSource AzureSQLDatabaseDataSource SharePointOnlineSiteDataSource Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationReferences Configuration references associated with the data source. [JsonPropertyName(\"configuration_references\")] public Dictionary<string, string>? ConfigurationReferences { get; set; } Property Value Dictionary<string, string> Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReference.html",
    "title": "Class DataSourceReference | FoundationaLLM",
    "keywords": "Class DataSourceReference Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Contains a reference to a data source.. public class DataSourceReference : ResourceReference Inheritance object ResourceReference DataSourceReference Inherited Members ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceType The object type of the data source. [JsonIgnore] public Type DataSourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReferenceStore.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReferenceStore.html",
    "title": "Class DataSourceReferenceStore | FoundationaLLM",
    "keywords": "Class DataSourceReferenceStore Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Models the content of the data source reference store managed by the FoundationaLLM.DataSource resource provider. public class DataSourceReferenceStore Inheritance object DataSourceReferenceStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceReferences The list of all data sources registered in the system. public required List<DataSourceReference> DataSourceReferences { get; set; } Property Value List<DataSourceReference> Methods FromDictionary(Dictionary<string, DataSourceReference>) Creates a new instance of the DataSourceReferenceStore from a dictionary. public static DataSourceReferenceStore FromDictionary(Dictionary<string, DataSourceReference> dictionary) Parameters dictionary Dictionary<string, DataSourceReference> A string-based dictionary of DataSourceReference values. Returns DataSourceReferenceStore The DataSourceReferenceStore object created from the dictionary. ToDictionary() Creates a string-based dictionary of DataSourceReference values from the current object. public Dictionary<string, DataSourceReference> ToDictionary() Returns Dictionary<string, DataSourceReference> The string-based dictionary of DataSourceReference values from the current object."
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.SharePointOnlineSiteDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.SharePointOnlineSiteDataSource.html",
    "title": "Class SharePointOnlineSiteDataSource | FoundationaLLM",
    "keywords": "Class SharePointOnlineSiteDataSource Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll SharePoint Online Site data source. public class SharePointOnlineSiteDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase SharePointOnlineSiteDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineSiteDataSource() Creates a new instance of the SharePointOnlineSiteDataSource data source. public SharePointOnlineSiteDataSource() Properties DocumentLibraries The list of paths of document libraries from the SharePoint online site. The paths must be relative to the site URL. [JsonPropertyName(\"document_libraries\")] public List<string> DocumentLibraries { get; set; } Property Value List<string> SiteUrl The URL of the SharePoint Online site. [JsonPropertyName(\"site_url\")] public string? SiteUrl { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.html",
    "title": "Namespace FoundationaLLM.DataSource.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.Models Classes AzureDataLakeDataSource Azure Data Lake data source. AzureSQLDatabaseDataSource Azure SQL Database data source. DataSourceBase Basic data source. DataSourceReference Contains a reference to a data source.. DataSourceReferenceStore Models the content of the data source reference store managed by the FoundationaLLM.DataSource resource provider. SharePointOnlineSiteDataSource SharePoint Online Site data source."
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderMetadata.html",
    "title": "Class DataSourceResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class DataSourceResourceProviderMetadata Namespace FoundationaLLM.DataSource.ResourceProviders Assembly FoundationaLLM.DataSource.dll Provides metadata for the FoundationaLLM.DataSource resource provider. public static class DataSourceResourceProviderMetadata Inheritance object DataSourceResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderService.html",
    "title": "Class DataSourceResourceProviderService | FoundationaLLM",
    "keywords": "Class DataSourceResourceProviderService Namespace FoundationaLLM.DataSource.ResourceProviders Assembly FoundationaLLM.DataSource.dll Implements the FoundationaLLM.DataSource resource provider. public class DataSourceResourceProviderService : ResourceProviderServiceBase, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase DataSourceResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase._authorizationService ResourceProviderServiceBase._storageService ResourceProviderServiceBase._eventService ResourceProviderServiceBase._resourceValidatorFactory ResourceProviderServiceBase._logger ResourceProviderServiceBase._instanceSettings ResourceProviderServiceBase._storageContainerName ResourceProviderServiceBase._serializerSettings ResourceProviderServiceBase.Name ResourceProviderServiceBase.IsInitialized ResourceProviderServiceBase.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.GetResource<T>(string) ResourceProviderServiceBase.UpsertResourceAsync<T>(string, T) ResourceProviderServiceBase.GetResourceInternal<T>(ResourcePath) ResourceProviderServiceBase.UpsertResourceAsync<T>(ResourcePath, T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, ILoggerFactory) Implements the FoundationaLLM.DataSource resource provider. public DataSourceResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task ExecuteActionAsync(ResourcePath, string) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. Returns Task<object> Exceptions NotImplementedException GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsyncInternal(ResourcePath) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsyncInternal(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.DataSource.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.ResourceProviders Classes DataSourceResourceProviderMetadata Provides metadata for the FoundationaLLM.DataSource resource provider. DataSourceResourceProviderService Implements the FoundationaLLM.DataSource resource provider."
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.AzureDataLakeDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.AzureDataLakeDataSourceValidator.html",
    "title": "Class AzureDataLakeDataSourceValidator | FoundationaLLM",
    "keywords": "Class AzureDataLakeDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the AzureDataLakeDataSource model. public class AzureDataLakeDataSourceValidator : DataSourceValidator<AzureDataLakeDataSource>, IValidator<AzureDataLakeDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureDataLakeDataSource> DataSourceValidator<AzureDataLakeDataSource> AzureDataLakeDataSourceValidator Implements IValidator<AzureDataLakeDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<AzureDataLakeDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<AzureDataLakeDataSource>.Validate(AzureDataLakeDataSource) AbstractValidator<AzureDataLakeDataSource>.ValidateAsync(AzureDataLakeDataSource, CancellationToken) AbstractValidator<AzureDataLakeDataSource>.Validate(ValidationContext<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.ValidateAsync(ValidationContext<AzureDataLakeDataSource>, CancellationToken) AbstractValidator<AzureDataLakeDataSource>.CreateDescriptor() AbstractValidator<AzureDataLakeDataSource>.RuleFor<TProperty>(Expression<Func<AzureDataLakeDataSource, TProperty>>) AbstractValidator<AzureDataLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureDataLakeDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureDataLakeDataSource, TProperty>>, Func<AzureDataLakeDataSource, TProperty, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.RuleForEach<TElement>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>) AbstractValidator<AzureDataLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>, Func<AzureDataLakeDataSource, TElement, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.RuleSet(string, Action) AbstractValidator<AzureDataLakeDataSource>.When(Func<AzureDataLakeDataSource, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.When(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.Unless(Func<AzureDataLakeDataSource, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.Unless(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.WhenAsync(Func<AzureDataLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.WhenAsync(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.UnlessAsync(Func<AzureDataLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.UnlessAsync(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.Include(IValidator<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.Include<TValidator>(Func<AzureDataLakeDataSource, TValidator>) AbstractValidator<AzureDataLakeDataSource>.GetEnumerator() AbstractValidator<AzureDataLakeDataSource>.EnsureInstanceNotNull(object) AbstractValidator<AzureDataLakeDataSource>.PreValidate(ValidationContext<AzureDataLakeDataSource>, ValidationResult) AbstractValidator<AzureDataLakeDataSource>.RaiseValidationException(ValidationContext<AzureDataLakeDataSource>, ValidationResult) AbstractValidator<AzureDataLakeDataSource>.OnRuleAdded(IValidationRule<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.CascadeMode AbstractValidator<AzureDataLakeDataSource>.ClassLevelCascadeMode AbstractValidator<AzureDataLakeDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSourceValidator() Configures the validation rules for the AzureDataLakeDataSource model. public AzureDataLakeDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.AzureSQLDatabaseDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.AzureSQLDatabaseDataSourceValidator.html",
    "title": "Class AzureSQLDatabaseDataSourceValidator | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the AzureSQLDatabaseDataSource model. public class AzureSQLDatabaseDataSourceValidator : DataSourceValidator<AzureSQLDatabaseDataSource>, IValidator<AzureSQLDatabaseDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureSQLDatabaseDataSource> DataSourceValidator<AzureSQLDatabaseDataSource> AzureSQLDatabaseDataSourceValidator Implements IValidator<AzureSQLDatabaseDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<AzureSQLDatabaseDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<AzureSQLDatabaseDataSource>.Validate(AzureSQLDatabaseDataSource) AbstractValidator<AzureSQLDatabaseDataSource>.ValidateAsync(AzureSQLDatabaseDataSource, CancellationToken) AbstractValidator<AzureSQLDatabaseDataSource>.Validate(ValidationContext<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.ValidateAsync(ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken) AbstractValidator<AzureSQLDatabaseDataSource>.CreateDescriptor() AbstractValidator<AzureSQLDatabaseDataSource>.RuleFor<TProperty>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>) AbstractValidator<AzureSQLDatabaseDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>, Func<AzureSQLDatabaseDataSource, TProperty, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.RuleForEach<TElement>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>) AbstractValidator<AzureSQLDatabaseDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>, Func<AzureSQLDatabaseDataSource, TElement, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.RuleSet(string, Action) AbstractValidator<AzureSQLDatabaseDataSource>.When(Func<AzureSQLDatabaseDataSource, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.When(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Unless(Func<AzureSQLDatabaseDataSource, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Unless(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.WhenAsync(Func<AzureSQLDatabaseDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.WhenAsync(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.UnlessAsync(Func<AzureSQLDatabaseDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.UnlessAsync(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Include(IValidator<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.Include<TValidator>(Func<AzureSQLDatabaseDataSource, TValidator>) AbstractValidator<AzureSQLDatabaseDataSource>.GetEnumerator() AbstractValidator<AzureSQLDatabaseDataSource>.EnsureInstanceNotNull(object) AbstractValidator<AzureSQLDatabaseDataSource>.PreValidate(ValidationContext<AzureSQLDatabaseDataSource>, ValidationResult) AbstractValidator<AzureSQLDatabaseDataSource>.RaiseValidationException(ValidationContext<AzureSQLDatabaseDataSource>, ValidationResult) AbstractValidator<AzureSQLDatabaseDataSource>.OnRuleAdded(IValidationRule<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.CascadeMode AbstractValidator<AzureSQLDatabaseDataSource>.ClassLevelCascadeMode AbstractValidator<AzureSQLDatabaseDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSourceValidator() Configures the validation rules for the AzureSQLDatabaseDataSource model. public AzureSQLDatabaseDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceBaseValidator.html",
    "title": "Class DataSourceBaseValidator | FoundationaLLM",
    "keywords": "Class DataSourceBaseValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the DataSourceBase model. public class DataSourceBaseValidator : AbstractValidator<DataSourceBase>, IValidator<DataSourceBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DataSourceBase> DataSourceBaseValidator Implements IValidator<DataSourceBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DataSourceBase>.Validate(DataSourceBase) AbstractValidator<DataSourceBase>.ValidateAsync(DataSourceBase, CancellationToken) AbstractValidator<DataSourceBase>.Validate(ValidationContext<DataSourceBase>) AbstractValidator<DataSourceBase>.ValidateAsync(ValidationContext<DataSourceBase>, CancellationToken) AbstractValidator<DataSourceBase>.CreateDescriptor() AbstractValidator<DataSourceBase>.RuleFor<TProperty>(Expression<Func<DataSourceBase, TProperty>>) AbstractValidator<DataSourceBase>.Transform<TProperty, TTransformed>(Expression<Func<DataSourceBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DataSourceBase>.Transform<TProperty, TTransformed>(Expression<Func<DataSourceBase, TProperty>>, Func<DataSourceBase, TProperty, TTransformed>) AbstractValidator<DataSourceBase>.RuleForEach<TElement>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>) AbstractValidator<DataSourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DataSourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>, Func<DataSourceBase, TElement, TTransformed>) AbstractValidator<DataSourceBase>.RuleSet(string, Action) AbstractValidator<DataSourceBase>.When(Func<DataSourceBase, bool>, Action) AbstractValidator<DataSourceBase>.When(Func<DataSourceBase, ValidationContext<DataSourceBase>, bool>, Action) AbstractValidator<DataSourceBase>.Unless(Func<DataSourceBase, bool>, Action) AbstractValidator<DataSourceBase>.Unless(Func<DataSourceBase, ValidationContext<DataSourceBase>, bool>, Action) AbstractValidator<DataSourceBase>.WhenAsync(Func<DataSourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.WhenAsync(Func<DataSourceBase, ValidationContext<DataSourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.UnlessAsync(Func<DataSourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.UnlessAsync(Func<DataSourceBase, ValidationContext<DataSourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.Include(IValidator<DataSourceBase>) AbstractValidator<DataSourceBase>.Include<TValidator>(Func<DataSourceBase, TValidator>) AbstractValidator<DataSourceBase>.GetEnumerator() AbstractValidator<DataSourceBase>.EnsureInstanceNotNull(object) AbstractValidator<DataSourceBase>.PreValidate(ValidationContext<DataSourceBase>, ValidationResult) AbstractValidator<DataSourceBase>.RaiseValidationException(ValidationContext<DataSourceBase>, ValidationResult) AbstractValidator<DataSourceBase>.OnRuleAdded(IValidationRule<DataSourceBase>) AbstractValidator<DataSourceBase>.CascadeMode AbstractValidator<DataSourceBase>.ClassLevelCascadeMode AbstractValidator<DataSourceBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceBaseValidator() Configures the validation rules for the DataSourceBase model. public DataSourceBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceValidator-1.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceValidator-1.html",
    "title": "Class DataSourceValidator<T> | FoundationaLLM",
    "keywords": "Class DataSourceValidator<T> Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Base validator for data sources. public class DataSourceValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : DataSourceBase Type Parameters T The type of data source to validate. Inheritance object AbstractValidator<T> DataSourceValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Derived AzureDataLakeDataSourceValidator AzureSQLDatabaseDataSourceValidator SharePointOnlineSiteDataSourceValidator Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.OnRuleAdded(IValidationRule<T>) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidConfigurationReference(DataSourceBase, string) Validates the value of a specified configuration reference. protected bool ValidConfigurationReference(DataSourceBase dataSource, string configurationKey) Parameters dataSource DataSourceBase The data source object being validated. configurationKey string The name of the configuration reference being validated. Returns bool True if the value of the configuration reference is valid, False otherwise."
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.SharePointOnlineSiteDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.SharePointOnlineSiteDataSourceValidator.html",
    "title": "Class SharePointOnlineSiteDataSourceValidator | FoundationaLLM",
    "keywords": "Class SharePointOnlineSiteDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the SharePointOnlineSiteDataSource model. public class SharePointOnlineSiteDataSourceValidator : DataSourceValidator<SharePointOnlineSiteDataSource>, IValidator<SharePointOnlineSiteDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SharePointOnlineSiteDataSource> DataSourceValidator<SharePointOnlineSiteDataSource> SharePointOnlineSiteDataSourceValidator Implements IValidator<SharePointOnlineSiteDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<SharePointOnlineSiteDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<SharePointOnlineSiteDataSource>.Validate(SharePointOnlineSiteDataSource) AbstractValidator<SharePointOnlineSiteDataSource>.ValidateAsync(SharePointOnlineSiteDataSource, CancellationToken) AbstractValidator<SharePointOnlineSiteDataSource>.Validate(ValidationContext<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.ValidateAsync(ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken) AbstractValidator<SharePointOnlineSiteDataSource>.CreateDescriptor() AbstractValidator<SharePointOnlineSiteDataSource>.RuleFor<TProperty>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>) AbstractValidator<SharePointOnlineSiteDataSource>.Transform<TProperty, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.Transform<TProperty, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>, Func<SharePointOnlineSiteDataSource, TProperty, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.RuleForEach<TElement>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>) AbstractValidator<SharePointOnlineSiteDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>, Func<SharePointOnlineSiteDataSource, TElement, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.RuleSet(string, Action) AbstractValidator<SharePointOnlineSiteDataSource>.When(Func<SharePointOnlineSiteDataSource, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.When(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Unless(Func<SharePointOnlineSiteDataSource, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Unless(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.WhenAsync(Func<SharePointOnlineSiteDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.WhenAsync(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.UnlessAsync(Func<SharePointOnlineSiteDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.UnlessAsync(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Include(IValidator<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.Include<TValidator>(Func<SharePointOnlineSiteDataSource, TValidator>) AbstractValidator<SharePointOnlineSiteDataSource>.GetEnumerator() AbstractValidator<SharePointOnlineSiteDataSource>.EnsureInstanceNotNull(object) AbstractValidator<SharePointOnlineSiteDataSource>.PreValidate(ValidationContext<SharePointOnlineSiteDataSource>, ValidationResult) AbstractValidator<SharePointOnlineSiteDataSource>.RaiseValidationException(ValidationContext<SharePointOnlineSiteDataSource>, ValidationResult) AbstractValidator<SharePointOnlineSiteDataSource>.OnRuleAdded(IValidationRule<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.CascadeMode AbstractValidator<SharePointOnlineSiteDataSource>.ClassLevelCascadeMode AbstractValidator<SharePointOnlineSiteDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineSiteDataSourceValidator() Configures the validation rules for the SharePointOnlineSiteDataSource model. public SharePointOnlineSiteDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.html",
    "title": "Namespace FoundationaLLM.DataSource.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.Validation Classes AzureDataLakeDataSourceValidator Validator for the AzureDataLakeDataSource model. AzureSQLDatabaseDataSourceValidator Validator for the AzureSQLDatabaseDataSource model. DataSourceBaseValidator Validator for the DataSourceBase model. DataSourceValidator<T> Base validator for data sources. SharePointOnlineSiteDataSourceValidator Validator for the SharePointOnlineSiteDataSource model."
  },
  "api/dotnet/FoundationaLLM.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.html",
    "title": "Namespace FoundationaLLM.DataSource | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource Namespaces FoundationaLLM.DataSource.Constants FoundationaLLM.DataSource.Models FoundationaLLM.DataSource.ResourceProviders FoundationaLLM.DataSource.Validation"
  },
  "api/dotnet/FoundationaLLM.DependencyInjection.html": {
    "href": "api/dotnet/FoundationaLLM.DependencyInjection.html",
    "title": "Class DependencyInjection | FoundationaLLM",
    "keywords": "Class DependencyInjection Namespace FoundationaLLM Assembly FoundationaLLM.DataSource.dll Data Source resource provider service implementation of resource provider dependency injection extensions. public static class DependencyInjection Inheritance object DependencyInjection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAgentResourceProvider(IHostApplicationBuilder) Add the Agent resource provider and its related services the the dependency injection container. public static void AddAgentResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAuthenticationConfiguration(IHostApplicationBuilder, string, string, string, string) Add authentication configuration to the dependency injection container. public static void AddAuthenticationConfiguration(this IHostApplicationBuilder builder, string entraInstanceConfigurationKey, string entraTenantIdConfigurationKey, string entraClientIdConfigurationkey, string entraScopesConfigurationKey) Parameters builder IHostApplicationBuilder entraInstanceConfigurationKey string The configuration key for the Entra ID instance. entraTenantIdConfigurationKey string The configuration key for the Entra ID tenant id. entraClientIdConfigurationkey string The configuration key for the Entra ID client id. entraScopesConfigurationKey string The configuration key for the Entra ID scopes. AddAuthorizationCore(IHostApplicationBuilder) Add the Authorization Core service to the dependency injection container (used by the Authorization API). public static void AddAuthorizationCore(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddAuthorizationResourceProvider(IHostApplicationBuilder) Register the FoundatiionaLLM.Authorization resource provider with the dependency injection container. public static void AddAuthorizationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder Application builder. AddAuthorizationService(IHostApplicationBuilder) Add the authorization service to the dependency injection container (used by all resource providers). public static void AddAuthorizationService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder AddAzureEventGridEvents(IServiceCollection, IConfigurationManager, string) Register the dependencies required to support Azure Event Grid events. public static void AddAzureEventGridEvents(this IServiceCollection services, IConfigurationManager configuration, string eventGridProfileSection) Parameters services IServiceCollection Application builder service collection. configuration IConfigurationManager The IConfigurationManager providing access to configuration. eventGridProfileSection string The name of the configuration section that contains the Event Grid profile to load. AddAzureKeyVaultService(IHostApplicationBuilder, string) Register the AzureKeyVaultService with the dependency injection container. public static void AddAzureKeyVaultService(this IHostApplicationBuilder builder, string keyVaultUriConfigurationKeyName) Parameters builder IHostApplicationBuilder keyVaultUriConfigurationKeyName string The name of the configuration key that provides the URI of the Azure Key Vault service. AddConfigurationResourceProvider(IHostApplicationBuilder) Register the FoundatiionaLLM.Configuration resource provider with the dependency injection container. public static void AddConfigurationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder Application builder. AddCorsPolicies(IHostApplicationBuilder) Add CORS policies the the dependency injection container. public static void AddCorsPolicies(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddDataSourceResourceProvider(IHostApplicationBuilder) Add the Data Source Rrsource provider and its related services the the dependency injection container. public static void AddDataSourceResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddGroupMembership(IHostApplicationBuilder) Add group membership services to dependency injection container. public static void AddGroupMembership(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddInstanceProperties(IServiceCollection, IConfigurationManager) Register instance settings mapped to configuration. public static void AddInstanceProperties(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection Application builder service collection. configuration IConfigurationManager The IConfigurationManager providing access to configuration. AddOpenTelemetry(IHostApplicationBuilder, string, string) Add OpenTelemetry the the dependency injection container. public static void AddOpenTelemetry(this IHostApplicationBuilder builder, string connectionStringConfigurationKey, string serviceName) Parameters builder IHostApplicationBuilder The host application builder. connectionStringConfigurationKey string The configuration key for the OpenTelemetry connection string. serviceName string The name of the service. AddPromptResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor public static void AddPromptResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddVectorizationResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor. public static void AddVectorizationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Wrapper for Gatekeeper service. [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper API orchestration controller. Constructors OrchestrationController(IGatekeeperService) Wrapper for Gatekeeper service. public OrchestrationController(IGatekeeperService gatekeeperService) Parameters gatekeeperService IGatekeeperService Remarks Constructor for the Gatekeeper API orchestration controller. Methods GetCompletion(CompletionRequest) Gets a completion from the Gatekeeper service. [HttpPost(\"completion\")] public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Gatekeeper service. [HttpPost(\"summary\")] public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Gatekeeper API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Gatekeeper API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.API.Controllers Classes OrchestrationController Wrapper for Gatekeeper service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Gatekeeper.API Assembly FoundationaLLM.Gatekeeper.API.dll Program class for the Gatekeeper API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for Gatekeeper API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.API Namespaces FoundationaLLM.Gatekeeper.API.Controllers Classes Program Program class for the Gatekeeper API."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html",
    "title": "Interface IContentSafetyService | FoundationaLLM",
    "keywords": "Interface IContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling a content safety service. public interface IContentSafetyService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html",
    "title": "Interface IGatekeeperIntegrationAPIService | FoundationaLLM",
    "keywords": "Interface IGatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper Integration API. public interface IGatekeeperIntegrationAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html",
    "title": "Interface IGatekeeperService | FoundationaLLM",
    "keywords": "Interface IGatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for the Gatekeeper service. public interface IGatekeeperService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(CompletionRequest) Gets a completion from the Gatekeeper service. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Gatekeeper service. Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IRefinementService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IRefinementService.html",
    "title": "Interface IRefinementService | FoundationaLLM",
    "keywords": "Interface IRefinementService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for a user prompt refinement service. public interface IRefinementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods RefineUserPrompt(string) Refines the user prompt text. Task<string> RefineUserPrompt(string userPrompt) Parameters userPrompt string The user prompt text. Returns Task<string> The refined user prompt text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Interfaces IContentSafetyService Interface for calling a content safety service. IGatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper Integration API. IGatekeeperService Interface for the Gatekeeper service. IRefinementService Interface for a user prompt refinement service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html",
    "title": "Class AzureContentSafetySettings | FoundationaLLM",
    "keywords": "Class AzureContentSafetySettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Azure Content Safety service. public record AzureContentSafetySettings : IEquatable<AzureContentSafetySettings> Inheritance object AzureContentSafetySettings Implements IEquatable<AzureContentSafetySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The Azure Content Safety key. public required string APIKey { get; init; } Property Value string APIUrl The Azure Content Safety endpoint. public required string APIUrl { get; init; } Property Value string HateSeverity The threshold for filtering the contents of a text, based on the \"Hate\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int HateSeverity { get; init; } Property Value int SelfHarmSeverity The threshold for filtering the contents of a text, based on the \"Self-Harm\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SelfHarmSeverity { get; init; } Property Value int SexualSeverity The threshold for filtering the contents of a text, based on the \"Sexual\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SexualSeverity { get; init; } Property Value int ViolenceSeverity The threshold for filtering the contents of a text, based on the \"Violence\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int ViolenceSeverity { get; init; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html",
    "title": "Class GatekeeperServiceSettings | FoundationaLLM",
    "keywords": "Class GatekeeperServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Gatekeeper service. public record GatekeeperServiceSettings : IEquatable<GatekeeperServiceSettings> Inheritance object GatekeeperServiceSettings Implements IEquatable<GatekeeperServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EnableAzureContentSafety Flag for enabling or disabling the Azure Content Safety feature. public required bool EnableAzureContentSafety { get; init; } Property Value bool EnableMicrosoftPresidio Flag for enabling or disabling the Microsoft Presidio feature. public required bool EnableMicrosoftPresidio { get; init; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.RefinementServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.RefinementServiceSettings.html",
    "title": "Class RefinementServiceSettings | FoundationaLLM",
    "keywords": "Class RefinementServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the user prompt Refinement service. public record RefinementServiceSettings : IEquatable<RefinementServiceSettings> Inheritance object RefinementServiceSettings Implements IEquatable<RefinementServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Classes AzureContentSafetySettings Provides configuration options for the Azure Content Safety service. GatekeeperServiceSettings Provides configuration options for the Gatekeeper service. RefinementServiceSettings Provides configuration options for the user prompt Refinement service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html",
    "title": "Class AnalyzeTextFilterResult | FoundationaLLM",
    "keywords": "Class AnalyzeTextFilterResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Content filter text analysis restult. public class AnalyzeTextFilterResult Inheritance object AnalyzeTextFilterResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Reason The reason why the content was considered to be unsafe. public required string Reason { get; set; } Property Value string Safe A flag representing if the content is safe or not. public bool Safe { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Classes AnalyzeTextFilterResult Content filter text analysis restult."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html",
    "title": "Class AnalyzeRequest | FoundationaLLM",
    "keywords": "Class AnalyzeRequest Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis request. public class AnalyzeRequest Inheritance object AnalyzeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Anonymize A flag used to tell if PII found by analysis should be anonymized. [JsonPropertyName(\"anonymize\")] public required bool Anonymize { get; set; } Property Value bool Content The text to be analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Language The language used to detect PII. [JsonPropertyName(\"language\")] public string? Language { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html",
    "title": "Class AnalyzeResponse | FoundationaLLM",
    "keywords": "Class AnalyzeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis response. public class AnalyzeResponse Inheritance object AnalyzeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Results A list of PII (personally identifiable information) entities identified in the analyzed text. [JsonPropertyName(\"results\")] public required List<PIIResult> Results { get; set; } Property Value List<PIIResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html",
    "title": "Class AnonymizeResponse | FoundationaLLM",
    "keywords": "Class AnonymizeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text anonymize response. public class AnonymizeResponse Inheritance object AnonymizeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Results A list of anonymized PII (personally identifiable information) entities identified in the analyzed text. [JsonPropertyName(\"results\")] public required List<PIIResultAnonymized> Results { get; set; } Property Value List<PIIResultAnonymized>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html",
    "title": "Class PIIResult | FoundationaLLM",
    "keywords": "Class PIIResult Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the PII (personally identifiable information) results. public class PIIResult Inheritance object PIIResult Derived PIIResultAnonymized Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EndIndex The end index where a PII entity was detected. [JsonPropertyName(\"end_index\")] public required int EndIndex { get; set; } Property Value int EntityType The type of personally identifiable information (i.e. Person, Location, Date). [JsonPropertyName(\"entity_type\")] public required string EntityType { get; set; } Property Value string StartIndex The start index where a PII was detected. [JsonPropertyName(\"start_index\")] public required int StartIndex { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html",
    "title": "Class PIIResultAnonymized | FoundationaLLM",
    "keywords": "Class PIIResultAnonymized Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the anonymized PII (personally identifiable information) results. public class PIIResultAnonymized : PIIResult Inheritance object PIIResult PIIResultAnonymized Inherited Members PIIResult.EntityType PIIResult.StartIndex PIIResult.EndIndex object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AnonymizedText The anonymized text to be used instead of the original text. [JsonPropertyName(\"anonymized_text\")] public required string AnonymizedText { get; set; } Property Value string Operator The operator needed to anonymize the original text. [JsonPropertyName(\"operator\")] public required string Operator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Classes AnalyzeRequest Encapsulates a text analysis request. AnalyzeResponse Encapsulates a text analysis response. AnonymizeResponse Encapsulates a text anonymize response. PIIResult Encapsulates the PII (personally identifiable information) results. PIIResultAnonymized Encapsulates the anonymized PII (personally identifiable information) results."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models Namespaces FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions FoundationaLLM.Gatekeeper.Core.Models.ContentSafety FoundationaLLM.Gatekeeper.Core.Models.Integration"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html",
    "title": "Class AzureContentSafetyService | FoundationaLLM",
    "keywords": "Class AzureContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IContentSafetyService interface. public class AzureContentSafetyService : IContentSafetyService Inheritance object AzureContentSafetyService Implements IContentSafetyService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContentSafetyService(IOptions<AzureContentSafetySettings>, ILogger<AzureContentSafetyService>) Constructor for the Azure Content Safety service. public AzureContentSafetyService(IOptions<AzureContentSafetySettings> options, ILogger<AzureContentSafetyService> logger) Parameters options IOptions<AzureContentSafetySettings> The configuration options for the Azure Content Safety service. logger ILogger<AzureContentSafetyService> The logger for the Azure Content Safety service. Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. public Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html",
    "title": "Class GatekeeperIntegrationAPIService | FoundationaLLM",
    "keywords": "Class GatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperIntegrationAPIService : IGatekeeperIntegrationAPIService Inheritance object GatekeeperIntegrationAPIService Implements IGatekeeperIntegrationAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperIntegrationAPIService(IHttpClientFactoryService) Initializes a new instance of the GatekeeperIntegrationAPIService class. public GatekeeperIntegrationAPIService(IHttpClientFactoryService httpClientFactoryService) Parameters httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gatekeeper Integration API requests. Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. public Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. public Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html",
    "title": "Class GatekeeperService | FoundationaLLM",
    "keywords": "Class GatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IGatekeeperService interface. public class GatekeeperService : IGatekeeperService Inheritance object GatekeeperService Implements IGatekeeperService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper service. Constructors GatekeeperService(IDownstreamAPIService, IContentSafetyService, IGatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings>) Implements the IGatekeeperService interface. public GatekeeperService(IDownstreamAPIService agentFactoryAPIService, IContentSafetyService contentSafetyService, IGatekeeperIntegrationAPIService gatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings> gatekeeperServiceSettings) Parameters agentFactoryAPIService IDownstreamAPIService The Agent Factory API client. contentSafetyService IContentSafetyService The user prompt Content Safety service. gatekeeperIntegrationAPIService IGatekeeperIntegrationAPIService The Gatekeeper Integration API client. gatekeeperServiceSettings IOptions<GatekeeperServiceSettings> The configuration options for the Gatekeeper service. Remarks Constructor for the Gatekeeper service. Methods GetCompletion(CompletionRequest) Gets a completion from the Gatekeeper service. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Gatekeeper service. public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.RefinementService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.RefinementService.html",
    "title": "Class RefinementService | FoundationaLLM",
    "keywords": "Class RefinementService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IRefinementService interface. public class RefinementService : IRefinementService Inheritance object RefinementService Implements IRefinementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RefinementService(IOptions<RefinementServiceSettings>, ILogger<RefinementService>) Constructor for the Refinement service. public RefinementService(IOptions<RefinementServiceSettings> options, ILogger<RefinementService> logger) Parameters options IOptions<RefinementServiceSettings> The configuration options for the Refinement service. logger ILogger<RefinementService> Methods RefineUserPrompt(string) Refines the user prompt text. public Task<string> RefineUserPrompt(string userPrompt) Parameters userPrompt string The user prompt text. Returns Task<string> The refined user prompt text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Services Classes AzureContentSafetyService Implements the IContentSafetyService interface. GatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper API. GatekeeperService Implements the IGatekeeperService interface. RefinementService Implements the IRefinementService interface."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core Namespaces FoundationaLLM.Gatekeeper.Core.Interfaces FoundationaLLM.Gatekeeper.Core.Models FoundationaLLM.Gatekeeper.Core.Services"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.html",
    "title": "Namespace FoundationaLLM.Gatekeeper | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper Namespaces FoundationaLLM.Gatekeeper.API FoundationaLLM.Gatekeeper.Core"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.CachesController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.CachesController.html",
    "title": "Class CachesController | FoundationaLLM",
    "keywords": "Class CachesController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for implementing the cache provider. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/providersX/FoundationaLLM.Configuration/caches\")] public class CachesController : ControllerBase Inheritance object ControllerBase CachesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Caches Controller. Constructors CachesController(ICacheManagementService) Provides methods for implementing the cache provider. public CachesController(ICacheManagementService cacheManagementService) Parameters cacheManagementService ICacheManagementService Provides cache management methods for managing configuration and state of downstream services. Remarks Constructor for the Caches Controller. Methods ClearAgentCache() Clears the agent cache from the relevant downstream services. [HttpPost(\"agent/clear\", Name = \"ClearAgentCache\")] public Task<APICacheRefreshResult> ClearAgentCache() Returns Task<APICacheRefreshResult> ClearDataSourceCache() Clears the datasource cache from the relevant downstream services. [HttpPost(\"datasource/clear\", Name = \"ClearDataSourceCache\")] public Task<APICacheRefreshResult> ClearDataSourceCache() Returns Task<APICacheRefreshResult> ClearPromptCache() Clears the prompt cache from the relevant downstream services. [HttpPost(\"prompt/clear\", Name = \"ClearPromptCache\")] public Task<APICacheRefreshResult> ClearPromptCache() Returns Task<APICacheRefreshResult>"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.ConfigurationsController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.ConfigurationsController.html",
    "title": "Class ConfigurationsController | FoundationaLLM",
    "keywords": "Class ConfigurationsController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for interacting with the Configuration Management service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/providersX/FoundationaLLM.Configuration/configurations\")] public class ConfigurationsController : ControllerBase Inheritance object ControllerBase ConfigurationsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Configurations Controller. Constructors ConfigurationsController(IConfigurationManagementService) Provides methods for interacting with the Configuration Management service. public ConfigurationsController(IConfigurationManagementService configurationManagementService) Parameters configurationManagementService IConfigurationManagementService The Configuration Management service provides methods for managing configurations for FoundationaLLM. Remarks Constructor for the Configurations Controller. Methods GetBrandingConfigurations() Returns the branding configuration from app configuration. [HttpGet(\"branding\", Name = \"GetBrandingConfigurations\")] public Task<ClientBrandingConfiguration> GetBrandingConfigurations() Returns Task<ClientBrandingConfiguration> UpdateBrandingConfigurations(ClientBrandingConfiguration) Updates the branding configuration in app configuration. [HttpPut(\"branding\", Name = \"UpdateBrandingConfigurations\")] public Task UpdateBrandingConfigurations(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.ResourceController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.ResourceController.html",
    "title": "Class ResourceController | FoundationaLLM",
    "keywords": "Class ResourceController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods to manage resources. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/providers/{resourceProvider}\")] public class ResourceController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller ResourceController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceController(ICallContext, IEnumerable<IResourceProviderService>, ILogger<ResourceController>) Provides methods to manage resources. public ResourceController(ICallContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger<ResourceController> logger) Parameters callContext ICallContext resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource providers. logger ILogger<ResourceController> The ILogger used for logging. Methods DeleteResource(string, string, string) Deletes a resource. [HttpDelete(\"{*resourcePath}\", Name = \"DeleteResource\")] public Task<IActionResult> DeleteResource(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> GetResources(string, string, string) Gets one or more resources. [HttpGet(\"{*resourcePath}\", Name = \"GetResources\")] public Task<IActionResult> GetResources(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> UpsertResource(string, string, string, object) Creates or updates resources. [HttpPost(\"{*resourcePath}\", Name = \"UpsertResource\")] public Task<IActionResult> UpsertResource(string instanceId, string resourceProvider, string resourcePath, object serializedResource) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. serializedResource object The serialized resource to be created or updated. Returns Task<IActionResult> The ObjectId of the created or updated resource."
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for checking the status of the service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiController] [Route(\"status\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Management.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.API.Controllers Classes CachesController Provides methods for implementing the cache provider. ConfigurationsController Provides methods for interacting with the Configuration Management service. ResourceController Provides methods to manage resources. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Management.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Management.API Assembly FoundationaLLM.Management.API.dll Main entry point for the Management API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Management API service configuration. public static Task Main(string[] args) Parameters args string[] Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.API.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.html",
    "title": "Namespace FoundationaLLM.Management.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.API Namespaces FoundationaLLM.Management.API.Controllers Classes Program Main entry point for the Management API."
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.ICacheManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.ICacheManagementService.html",
    "title": "Interface ICacheManagementService | FoundationaLLM",
    "keywords": "Interface ICacheManagementService Namespace FoundationaLLM.Management.Interfaces Assembly FoundationaLLM.Management.dll Provides cache management functionality. public interface ICacheManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ClearAgentCache() Clears the agent cache from the AgentFactoryService and AgentHubService. Task<bool> ClearAgentCache() Returns Task<bool> ClearDataSourceCache() Clears the agent cache from the AgentFactoryService and DataSourceHubService. Task<bool> ClearDataSourceCache() Returns Task<bool> ClearPromptCache() Clears the agent cache from the AgentFactoryService and DataSourceHubService. Task<bool> ClearPromptCache() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.IConfigurationManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.IConfigurationManagementService.html",
    "title": "Interface IConfigurationManagementService | FoundationaLLM",
    "keywords": "Interface IConfigurationManagementService Namespace FoundationaLLM.Management.Interfaces Assembly FoundationaLLM.Management.dll Provides methods for managing app configuration. public interface IConfigurationManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetBrandingConfigurationAsync() Retrieves the branding configuration from app configuration. Task<ClientBrandingConfiguration> GetBrandingConfigurationAsync() Returns Task<ClientBrandingConfiguration> SetBrandingConfiguration(ClientBrandingConfiguration) Sets the branding configuration in app configuration. Task SetBrandingConfiguration(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration The branding configuration settings to apply. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.html",
    "title": "Namespace FoundationaLLM.Management.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Interfaces Interfaces ICacheManagementService Provides cache management functionality. IConfigurationManagementService Provides methods for managing app configuration."
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.AppConfigurationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.AppConfigurationSettings.html",
    "title": "Class AppConfigurationSettings | FoundationaLLM",
    "keywords": "Class AppConfigurationSettings Namespace FoundationaLLM.Management.Models.Configuration Assembly FoundationaLLM.Management.dll Contains settings for the Azure App Configuration service. public record AppConfigurationSettings : IEquatable<AppConfigurationSettings> Inheritance object AppConfigurationSettings Implements IEquatable<AppConfigurationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The Azure App Configuration connection string. public required string ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.CosmosDbSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.CosmosDbSettings.html",
    "title": "Class CosmosDbSettings | FoundationaLLM",
    "keywords": "Class CosmosDbSettings Namespace FoundationaLLM.Management.Models.Configuration Assembly FoundationaLLM.Management.dll Stores the Azure Cosmos DB settings from the app configuration. public record CosmosDbSettings : IEquatable<CosmosDbSettings> Inheritance object CosmosDbSettings Implements IEquatable<CosmosDbSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Database The name of the Azure Cosmos DB database. public required string Database { get; init; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; init; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; init; } Property Value string Key The Azure Cosmos DB key. public required string Key { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Management.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Models.Configuration Classes AppConfigurationSettings Contains settings for the Azure App Configuration service. CosmosDbSettings Stores the Azure Cosmos DB settings from the app configuration."
  },
  "api/dotnet/FoundationaLLM.Management.Services.APIServices.AgentFactoryAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.APIServices.AgentFactoryAPIService.html",
    "title": "Class AgentFactoryAPIService | FoundationaLLM",
    "keywords": "Class AgentFactoryAPIService Namespace FoundationaLLM.Management.Services.APIServices Assembly FoundationaLLM.Common.dll Provides access to the Agent Factory API. public class AgentFactoryAPIService : IAgentFactoryAPIService Inheritance object AgentFactoryAPIService Implements IAgentFactoryAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Agent Factory APIS client. Constructors AgentFactoryAPIService(IHttpClientFactoryService, ILogger<AgentFactoryAPIService>) Provides access to the Agent Factory API. public AgentFactoryAPIService(IHttpClientFactoryService httpClientFactoryService, ILogger<AgentFactoryAPIService> logger) Parameters httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. logger ILogger<AgentFactoryAPIService> The logging interface used to log under the AgentFactoryAPIService type name. Remarks Constructor for the Agent Factory APIS client. Methods RemoveCacheCategory(string) Removes all objects belonging to a category from the cache within the Agent Factory API. public Task<bool> RemoveCacheCategory(string name) Parameters name string The name of the category of objects to be removed from the cache. Returns Task<bool> RemoveCacheItem(string) Removes a specific cache item by its name within the Agent Factory API. public Task<bool> RemoveCacheItem(string name) Parameters name string The name of the object to be removed from the cache. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Management.Services.APIServices.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.APIServices.html",
    "title": "Namespace FoundationaLLM.Management.Services.APIServices | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Services.APIServices Classes AgentFactoryAPIService Provides access to the Agent Factory API."
  },
  "api/dotnet/FoundationaLLM.Management.Services.CacheManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.CacheManagementService.html",
    "title": "Class CacheManagementService | FoundationaLLM",
    "keywords": "Class CacheManagementService Namespace FoundationaLLM.Management.Services Assembly FoundationaLLM.Management.dll Provides cache management functionality. public class CacheManagementService : ICacheManagementService Inheritance object CacheManagementService Implements ICacheManagementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CacheManagementService(ILogger<CacheManagementService>, IAgentFactoryAPIService, IAgentHubAPIService, IDataSourceHubAPIService, IPromptHubAPIService) Provides cache management functionality. public CacheManagementService(ILogger<CacheManagementService> logger, IAgentFactoryAPIService agentFactoryApiService, IAgentHubAPIService agentHubApiService, IDataSourceHubAPIService dataSourceHubApiService, IPromptHubAPIService promptHubApiService) Parameters logger ILogger<CacheManagementService> The logging interface used to log under the CacheManagementService type name. agentFactoryApiService IAgentFactoryAPIService Provides functionality for calling the AgentFactoryAPI. agentHubApiService IAgentHubAPIService Provides functionality for calling the AgentHubAPI. dataSourceHubApiService IDataSourceHubAPIService Provides functionality for calling the DataSourceHubAPI. promptHubApiService IPromptHubAPIService Provides functionality for calling the PromptHubAPI. Methods ClearAgentCache() Clears the agent cache from the AgentFactoryService and AgentHubService. public Task<bool> ClearAgentCache() Returns Task<bool> ClearDataSourceCache() Clears the agent cache from the AgentFactoryService and DataSourceHubService. public Task<bool> ClearDataSourceCache() Returns Task<bool> ClearPromptCache() Clears the agent cache from the AgentFactoryService and DataSourceHubService. public Task<bool> ClearPromptCache() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Management.Services.ConfigurationManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.ConfigurationManagementService.html",
    "title": "Class ConfigurationManagementService | FoundationaLLM",
    "keywords": "Class ConfigurationManagementService Namespace FoundationaLLM.Management.Services Assembly FoundationaLLM.Management.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ConfigurationManagementService : IConfigurationManagementService Inheritance object ConfigurationManagementService Implements IConfigurationManagementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationManagementService(ILogger<ConfigurationManagementService>, IOptions<AppConfigurationSettings>) Initializes a new instance of the ConfigurationManagementService class. public ConfigurationManagementService(ILogger<ConfigurationManagementService> logger, IOptions<AppConfigurationSettings> appConfigurationSettings) Parameters logger ILogger<ConfigurationManagementService> The logging interface used to log under the ConfigurationManagementService type name. appConfigurationSettings IOptions<AppConfigurationSettings> The application configuration settings. Methods GetBrandingConfigurationAsync() Retrieves the branding configuration from app configuration. public Task<ClientBrandingConfiguration> GetBrandingConfigurationAsync() Returns Task<ClientBrandingConfiguration> SetBrandingConfiguration(ClientBrandingConfiguration) Sets the branding configuration in app configuration. public Task SetBrandingConfiguration(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration The branding configuration settings to apply. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.html",
    "title": "Namespace FoundationaLLM.Management.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Services Namespaces FoundationaLLM.Management.Services.APIServices Classes CacheManagementService Provides cache management functionality. ConfigurationManagementService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Management.html": {
    "href": "api/dotnet/FoundationaLLM.Management.html",
    "title": "Namespace FoundationaLLM.Management | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management Namespaces FoundationaLLM.Management.API FoundationaLLM.Management.Interfaces FoundationaLLM.Management.Models.Configuration FoundationaLLM.Management.Services"
  },
  "api/dotnet/FoundationaLLM.Prompt.Constants.PromptResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Constants.PromptResourceProviderActions.html",
    "title": "Class PromptResourceProviderActions | FoundationaLLM",
    "keywords": "Class PromptResourceProviderActions Namespace FoundationaLLM.Prompt.Constants Assembly FoundationaLLM.Prompt.dll The names of the actions implemented by the Agent resource provider. public static class PromptResourceProviderActions Inheritance object PromptResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Prompt.Constants.PromptResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Constants.PromptResourceTypeNames.html",
    "title": "Class PromptResourceTypeNames | FoundationaLLM",
    "keywords": "Class PromptResourceTypeNames Namespace FoundationaLLM.Prompt.Constants Assembly FoundationaLLM.Prompt.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Prompt resource provider. public class PromptResourceTypeNames Inheritance object PromptResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Prompts Prompts. public const string Prompts = \"prompts\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Prompt.Constants.PromptTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Constants.PromptTypes.html",
    "title": "Class PromptTypes | FoundationaLLM",
    "keywords": "Class PromptTypes Namespace FoundationaLLM.Prompt.Constants Assembly FoundationaLLM.Prompt.dll Contains constants for the types of prompts. public static class PromptTypes Inheritance object PromptTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Basic Basic agent without practical functionality. Used as base for all the other agents. public const string Basic = \"basic\" Field Value string Multipart Multipart prompt composed of a prefix and a suffix. public const string Multipart = \"multipart\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Prompt.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Constants.html",
    "title": "Namespace FoundationaLLM.Prompt.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.Constants Classes PromptResourceProviderActions The names of the actions implemented by the Agent resource provider. PromptResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Prompt resource provider. PromptTypes Contains constants for the types of prompts."
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Metadata.MultipartPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Metadata.MultipartPrompt.html",
    "title": "Class MultipartPrompt | FoundationaLLM",
    "keywords": "Class MultipartPrompt Namespace FoundationaLLM.Prompt.Models.Metadata Assembly FoundationaLLM.Prompt.dll Multipart prompt composed of a prefix and a suffix. public class MultipartPrompt : PromptBase Inheritance object ResourceName ResourceBase PromptBase MultipartPrompt Inherited Members PromptBase.Type ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MultipartPrompt() Set default property values. public MultipartPrompt() Properties Prefix The prompt prefix. [JsonPropertyName(\"prefix\")] public string? Prefix { get; set; } Property Value string Suffix The prompt suffix. [JsonPropertyName(\"suffix\")] public string? Suffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Metadata.PromptBase.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Metadata.PromptBase.html",
    "title": "Class PromptBase | FoundationaLLM",
    "keywords": "Class PromptBase Namespace FoundationaLLM.Prompt.Models.Metadata Assembly FoundationaLLM.Prompt.dll Basic prompt. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(MultipartPrompt), \"multipart\")] public class PromptBase : ResourceBase Inheritance object ResourceName ResourceBase PromptBase Derived MultipartPrompt Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Metadata.html",
    "title": "Namespace FoundationaLLM.Prompt.Models.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.Models.Metadata Classes MultipartPrompt Multipart prompt composed of a prefix and a suffix. PromptBase Basic prompt."
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReference.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReference.html",
    "title": "Class PromptReference | FoundationaLLM",
    "keywords": "Class PromptReference Namespace FoundationaLLM.Prompt.Models.Resources Assembly FoundationaLLM.Prompt.dll Provides details about a prompt. public class PromptReference : ResourceReference Inheritance object ResourceReference PromptReference Inherited Members ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptType The object type of the agent. [JsonIgnore] public Type PromptType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReferenceStore.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReferenceStore.html",
    "title": "Class PromptReferenceStore | FoundationaLLM",
    "keywords": "Class PromptReferenceStore Namespace FoundationaLLM.Prompt.Models.Resources Assembly FoundationaLLM.Prompt.dll Models the content of the prompt reference store managed by the FoundationaLLM.Prompt resource provider. public class PromptReferenceStore Inheritance object PromptReferenceStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptReferences The list of all prompts registered in the system. public required List<PromptReference> PromptReferences { get; set; } Property Value List<PromptReference> Methods FromDictionary(Dictionary<string, PromptReference>) Creates a new instance of the PromptReferenceStore from a dictionary. public static PromptReferenceStore FromDictionary(Dictionary<string, PromptReference> dictionary) Parameters dictionary Dictionary<string, PromptReference> A string-based dictionary of PromptReference values. Returns PromptReferenceStore The PromptReferenceStore object created from the dictionary. ToDictionary() Creates a string-based dictionary of PromptReference values from the current object. public Dictionary<string, PromptReference> ToDictionary() Returns Dictionary<string, PromptReference> The string-based dictionary of PromptReference values from the current object."
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Prompt.Models.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.Models.Resources Classes PromptReference Provides details about a prompt. PromptReferenceStore Models the content of the prompt reference store managed by the FoundationaLLM.Prompt resource provider."
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.html",
    "title": "Namespace FoundationaLLM.Prompt.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.Models Namespaces FoundationaLLM.Prompt.Models.Metadata FoundationaLLM.Prompt.Models.Resources"
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderMetadata.html",
    "title": "Class PromptResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class PromptResourceProviderMetadata Namespace FoundationaLLM.Prompt.ResourceProviders Assembly FoundationaLLM.Prompt.dll Provides metadata for the FoundationaLLM.Prompt resource provider. public static class PromptResourceProviderMetadata Inheritance object PromptResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderService.html",
    "title": "Class PromptResourceProviderService | FoundationaLLM",
    "keywords": "Class PromptResourceProviderService Namespace FoundationaLLM.Prompt.ResourceProviders Assembly FoundationaLLM.Prompt.dll Implements the FoundationaLLM.Prompt resource provider. public class PromptResourceProviderService : ResourceProviderServiceBase, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase PromptResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase._authorizationService ResourceProviderServiceBase._storageService ResourceProviderServiceBase._eventService ResourceProviderServiceBase._resourceValidatorFactory ResourceProviderServiceBase._logger ResourceProviderServiceBase._instanceSettings ResourceProviderServiceBase._storageContainerName ResourceProviderServiceBase._serializerSettings ResourceProviderServiceBase.Name ResourceProviderServiceBase.IsInitialized ResourceProviderServiceBase.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.GetResource<T>(string) ResourceProviderServiceBase.UpsertResourceAsync<T>(string, T) ResourceProviderServiceBase.GetResourceInternal<T>(ResourcePath) ResourceProviderServiceBase.UpsertResourceAsync<T>(ResourcePath, T) ResourceProviderServiceBase.HandleEvents(EventSetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PromptResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, ILogger<PromptResourceProviderService>) Implements the FoundationaLLM.Prompt resource provider. public PromptResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, ILogger<PromptResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. logger ILogger<PromptResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task ExecuteActionAsync(ResourcePath, string) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. Returns Task<object> Exceptions NotImplementedException GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsyncInternal(ResourcePath) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsyncInternal(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task<object> InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Prompt.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.ResourceProviders Classes PromptResourceProviderMetadata Provides metadata for the FoundationaLLM.Prompt resource provider. PromptResourceProviderService Implements the FoundationaLLM.Prompt resource provider."
  },
  "api/dotnet/FoundationaLLM.Prompt.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.html",
    "title": "Namespace FoundationaLLM.Prompt | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt Namespaces FoundationaLLM.Prompt.Constants FoundationaLLM.Prompt.Models FoundationaLLM.Prompt.ResourceProviders"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Wrapper for the Semantic Kernel service. [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationController(IKnowledgeManagementAgentPlugin, ILegacyAgentPlugin) Constructor for the Semantic Kernel API orchestration controller. public OrchestrationController(IKnowledgeManagementAgentPlugin knowledgeManagementAgentPlugin, ILegacyAgentPlugin legacyAgentPlugin) Parameters knowledgeManagementAgentPlugin IKnowledgeManagementAgentPlugin legacyAgentPlugin ILegacyAgentPlugin Methods GetCompletion(LLMCompletionRequest) Gets a completion from the Semantic Kernel service. [HttpPost(\"completion\")] public Task<LLMCompletionResponse> GetCompletion(LLMCompletionRequest request) Parameters request LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LLMCompletionResponse> The completion response."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Semantic Kernel API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Semantic Kernel API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.API.Controllers Classes OrchestrationController Wrapper for the Semantic Kernel service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.SemanticKernel.API Assembly FoundationaLLM.SemanticKernel.API.dll Program class for the Semantic Kernel API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Semantic Kernel API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.API Namespaces FoundationaLLM.SemanticKernel.API.Controllers Classes Program Program class for the Semantic Kernel API."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.IKnowledgeManagementAgentPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.IKnowledgeManagementAgentPlugin.html",
    "title": "Interface IKnowledgeManagementAgentPlugin | FoundationaLLM",
    "keywords": "Interface IKnowledgeManagementAgentPlugin Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll public interface IKnowledgeManagementAgentPlugin Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(KnowledgeManagementCompletionRequest) Gets a completion from the Semantic Kernel service. Task<LLMCompletionResponse> GetCompletion(KnowledgeManagementCompletionRequest request) Parameters request KnowledgeManagementCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ILegacyAgentPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ILegacyAgentPlugin.html",
    "title": "Interface ILegacyAgentPlugin | FoundationaLLM",
    "keywords": "Interface ILegacyAgentPlugin Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll public interface ILegacyAgentPlugin Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(LegacyCompletionRequest) Gets a completion from the Semantic Kernel service. Task<LLMCompletionResponse> GetCompletion(LegacyCompletionRequest request) Parameters request LegacyCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Interfaces IKnowledgeManagementAgentPlugin ILegacyAgentPlugin"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureAISearchIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureAISearchIndexingServiceSettings.html",
    "title": "Class AzureAISearchIndexingServiceSettings | FoundationaLLM",
    "keywords": "Class AzureAISearchIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the Azure AI Search indexing service. public record AzureAISearchIndexingServiceSettings : IEquatable<AzureAISearchIndexingServiceSettings> Inheritance object AzureAISearchIndexingServiceSettings Implements IEquatable<AzureAISearchIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key used to connect to the Azure AI Search endpoint. Valid only if AuthenticationType is APIKey. public string? APIKey { get; set; } Property Value string AuthenticationType The AuthenticationType indicating which authentication mechanism to use. [JsonConverter(typeof(JsonStringEnumConverter))] public required AzureAISearchAuthenticationTypes AuthenticationType { get; set; } Property Value AzureAISearchAuthenticationTypes Endpoint The endpoint of the Azure AI deployment. public required string Endpoint { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelTextEmbeddingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelTextEmbeddingServiceSettings.html",
    "title": "Class SemanticKernelTextEmbeddingServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelTextEmbeddingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the SemanticKernelTextEmbeddingService service. public record SemanticKernelTextEmbeddingServiceSettings : IEquatable<SemanticKernelTextEmbeddingServiceSettings> Inheritance object SemanticKernelTextEmbeddingServiceSettings Implements IEquatable<SemanticKernelTextEmbeddingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key used to connect to the Azure Open AI endpoint. Valid only if AuthenticationType is APIKey. public string? APIKey { get; set; } Property Value string AuthenticationType The AuthenticationType indicating which authentication mechanism to use. [JsonConverter(typeof(JsonStringEnumConverter))] public required AzureOpenAIAuthenticationTypes AuthenticationType { get; set; } Property Value AzureOpenAIAuthenticationTypes DeploymentName The name of the Azure Open AI deployment. public required string DeploymentName { get; set; } Property Value string Endpoint The endpoint of the Azure Open AI deployment. public required string Endpoint { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Classes AzureAISearchIndexingServiceSettings Provides configuration settings for the Azure AI Search indexing service. SemanticKernelTextEmbeddingServiceSettings Provides configuration settings for the SemanticKernelTextEmbeddingService service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.KnowledgeManagementAgentPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.KnowledgeManagementAgentPlugin.html",
    "title": "Class KnowledgeManagementAgentPlugin | FoundationaLLM",
    "keywords": "Class KnowledgeManagementAgentPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins Assembly FoundationaLLM.SemanticKernel.Core.dll public class KnowledgeManagementAgentPlugin : IKnowledgeManagementAgentPlugin Inheritance object KnowledgeManagementAgentPlugin Implements IKnowledgeManagementAgentPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgentPlugin(ILogger<KnowledgeManagementAgentPlugin>, IConfiguration) public KnowledgeManagementAgentPlugin(ILogger<KnowledgeManagementAgentPlugin> logger, IConfiguration configuration) Parameters logger ILogger<KnowledgeManagementAgentPlugin> configuration IConfiguration Methods GetCompletion(KnowledgeManagementCompletionRequest) Gets a completion from the Semantic Kernel service. public Task<LLMCompletionResponse> GetCompletion(KnowledgeManagementCompletionRequest request) Parameters request KnowledgeManagementCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.LegacyAgentPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.LegacyAgentPlugin.html",
    "title": "Class LegacyAgentPlugin | FoundationaLLM",
    "keywords": "Class LegacyAgentPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins Assembly FoundationaLLM.SemanticKernel.Core.dll public class LegacyAgentPlugin : ILegacyAgentPlugin Inheritance object LegacyAgentPlugin Implements ILegacyAgentPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LegacyAgentPlugin(ILogger<LegacyAgentPlugin>, IConfiguration) public LegacyAgentPlugin(ILogger<LegacyAgentPlugin> logger, IConfiguration configuration) Parameters logger ILogger<LegacyAgentPlugin> configuration IConfiguration Methods GetCompletion(LegacyCompletionRequest) Gets a completion from the Semantic Kernel service. public Task<LLMCompletionResponse> GetCompletion(LegacyCompletionRequest request) Parameters request LegacyCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins Classes KnowledgeManagementAgentPlugin LegacyAgentPlugin"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.AzureAISearchIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.AzureAISearchIndexingService.html",
    "title": "Class AzureAISearchIndexingService | FoundationaLLM",
    "keywords": "Class AzureAISearchIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on Azure AI Search. public class AzureAISearchIndexingService : IIndexingService Inheritance object AzureAISearchIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAISearchIndexingService(IOptions<AzureAISearchIndexingServiceSettings>, ILogger<AzureAISearchIndexingService>) Creates a new SemanticKernelTextEmbeddingService instance. public AzureAISearchIndexingService(IOptions<AzureAISearchIndexingServiceSettings> options, ILogger<AzureAISearchIndexingService> logger) Parameters options IOptions<AzureAISearchIndexingServiceSettings> The IOptions<TOptions> providing configuration settings. logger ILogger<AzureAISearchIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTextEmbeddingService.html",
    "title": "Class SemanticKernelTextEmbeddingService | FoundationaLLM",
    "keywords": "Class SemanticKernelTextEmbeddingService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Generates text embeddings using the Semantic Kernel orchestrator. public class SemanticKernelTextEmbeddingService : ITextEmbeddingService Inheritance object SemanticKernelTextEmbeddingService Implements ITextEmbeddingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelTextEmbeddingService(IOptions<SemanticKernelTextEmbeddingServiceSettings>, ILogger<SemanticKernelTextEmbeddingService>) Creates a new SemanticKernelTextEmbeddingService instance. public SemanticKernelTextEmbeddingService(IOptions<SemanticKernelTextEmbeddingServiceSettings> options, ILogger<SemanticKernelTextEmbeddingService> logger) Parameters options IOptions<SemanticKernelTextEmbeddingServiceSettings> The IOptions<TOptions> providing configuration settings. logger ILogger<SemanticKernelTextEmbeddingService> The ILogger used for logging. Methods GetEmbeddingAsync(string) Creates the vector embedding for a specified text. public Task<(Embedding Embedding, int TokenCount)> GetEmbeddingAsync(string text) Parameters text string The text which needs to be embedded. Returns Task<(Embedding Embedding, int TokenCount)> Response containing the vector embedding and the amount of tokens used. GetEmbeddingsAsync(IList<string>) Creates the vector embeddings for a specified list of texts. public Task<(IList<Embedding> Embeddings, int TokenCount)> GetEmbeddingsAsync(IList<string> texts) Parameters texts IList<string> The list of texts which need to be embedded. Returns Task<(IList<Embedding> Embeddings, int TokenCount)> Response containing the list of vector embeddings and the amount of tokens used."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Services Classes AzureAISearchIndexingService Provides vector embedding indexing based on Azure AI Search. SemanticKernelTextEmbeddingService Generates text embeddings using the Semantic Kernel orchestrator."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core Namespaces FoundationaLLM.SemanticKernel.Core.Interfaces FoundationaLLM.SemanticKernel.Core.Models.Configuration FoundationaLLM.SemanticKernel.Core.Plugins FoundationaLLM.SemanticKernel.Core.Services"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.html",
    "title": "Namespace FoundationaLLM.SemanticKernel | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel Namespaces FoundationaLLM.SemanticKernel.API FoundationaLLM.SemanticKernel.Core"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html",
    "title": "Class VectorizationRequestController | FoundationaLLM",
    "keywords": "Class VectorizationRequestController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Methods for managing vectorization requests. [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class VectorizationRequestController : ControllerBase Inheritance object ControllerBase VectorizationRequestController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the vectorization request controller. Constructors VectorizationRequestController(IVectorizationService) Methods for managing vectorization requests. public VectorizationRequestController(IVectorizationService vectorizationService) Parameters vectorizationService IVectorizationService Remarks Constructor for the vectorization request controller. Methods ProcessRequest(VectorizationRequest) Handles an incoming vectorization request by starting a new vectorization pipeline. [HttpPost] public Task<IActionResult> ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.API.Controllers Classes StatusController Provides methods for checking the status of the service. VectorizationRequestController Methods for managing vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Constants.VectorizationResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Constants.VectorizationResourceProviderActions.html",
    "title": "Class VectorizationResourceProviderActions | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderActions Namespace FoundationaLLM.Vectorization.Constants Assembly FoundationaLLM.Vectorization.dll The names of the actions implemented by the Agent resource provider. public static class VectorizationResourceProviderActions Inheritance object VectorizationResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Constants.VectorizationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Constants.VectorizationResourceTypeNames.html",
    "title": "Class VectorizationResourceTypeNames | FoundationaLLM",
    "keywords": "Class VectorizationResourceTypeNames Namespace FoundationaLLM.Vectorization.Constants Assembly FoundationaLLM.Vectorization.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Vectorization resource provider. public static class VectorizationResourceTypeNames Inheritance object VectorizationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContentSourceProfiles Vectorization content sources. public const string ContentSourceProfiles = \"contentSourceProfiles\" Field Value string IndexingProfiles Indexing profiles. public const string IndexingProfiles = \"indexingProfiles\" Field Value string TextEmbeddingProfiles Text embedding profiles. public const string TextEmbeddingProfiles = \"textEmbeddingProfiles\" Field Value string TextPartitioningProfiles Text partitioning profiles. public const string TextPartitioningProfiles = \"textPartitioningProfiles\" Field Value string VectorizationRequests Vectorization requests. public const string VectorizationRequests = \"vectorizationRequests\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Constants.html",
    "title": "Namespace FoundationaLLM.Vectorization.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Constants Classes VectorizationResourceProviderActions The names of the actions implemented by the Agent resource provider. VectorizationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Vectorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.DOCXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.DOCXTextExtractor.html",
    "title": "Class DOCXTextExtractor | FoundationaLLM",
    "keywords": "Class DOCXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.dll Extracts text from DOCX files. public class DOCXTextExtractor Inheritance object DOCXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a DOCX document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the DOCX document. Returns string The text content of the DOCX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.PPTXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.PPTXTextExtractor.html",
    "title": "Class PPTXTextExtractor | FoundationaLLM",
    "keywords": "Class PPTXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.dll Extracts text from PPTX files. public class PPTXTextExtractor Inheritance object PPTXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a PPTX document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PPTX document. Returns string The text content of the PPTX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.XLSXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.XLSXTextExtractor.html",
    "title": "Class XLSXTextExtractor | FoundationaLLM",
    "keywords": "Class XLSXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.dll Extracts text from XLSX files. public class XLSXTextExtractor Inheritance object XLSXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors XLSXTextExtractor(bool, bool, bool, string?, string?, string?, string?, string?) Constructor for XLSXTextExtractor. public XLSXTextExtractor(bool withWorksheetNumber = true, bool withEndOfWorksheetMarker = false, bool withQuotes = true, string? worksheetNumberTemplate = null, string? endOfWorksheetMarkerTemplate = null, string? rowPrefix = null, string? columnSeparator = null, string? rowSuffix = null) Parameters withWorksheetNumber bool withEndOfWorksheetMarker bool withQuotes bool worksheetNumberTemplate string endOfWorksheetMarkerTemplate string rowPrefix string columnSeparator string rowSuffix string Methods GetText(BinaryData) Extracts the text content from a PPTX document. public string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PPTX document. Returns string The text content of the PPTX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats.Office | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.DataFormats.Office Classes DOCXTextExtractor Extracts text from DOCX files. PPTXTextExtractor Extracts text from PPTX files. XLSXTextExtractor Extracts text from XLSX files."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.PDFTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.PDFTextExtractor.html",
    "title": "Class PDFTextExtractor | FoundationaLLM",
    "keywords": "Class PDFTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.PDF Assembly FoundationaLLM.Vectorization.dll Extracts text from PDF files. public class PDFTextExtractor Inheritance object PDFTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a PDF document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PDF document. Returns string The text content of the PDF document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats.PDF | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.DataFormats.PDF Classes PDFTextExtractor Extracts text from PDF files."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.DataFormats Namespaces FoundationaLLM.Vectorization.DataFormats.Office FoundationaLLM.Vectorization.DataFormats.PDF"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Exceptions.VectorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Exceptions.VectorizationException.html",
    "title": "Class VectorizationException | FoundationaLLM",
    "keywords": "Class VectorizationException Namespace FoundationaLLM.Vectorization.Exceptions Assembly FoundationaLLM.Vectorization.dll Represents errors that occur during the vectorization process. public class VectorizationException : Exception, ISerializable Inheritance object Exception VectorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationException() Initializes a new instance of the VectorizationException class with a default message. public VectorizationException() VectorizationException(string?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message) Parameters message string A string that describes the error. VectorizationException(string?, Exception?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Exceptions.html",
    "title": "Namespace FoundationaLLM.Vectorization.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Exceptions Classes VectorizationException Represents errors that occur during the vectorization process."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html",
    "title": "Class EmbeddingHandler | FoundationaLLM",
    "keywords": "Class EmbeddingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the embedding stage of the vectorization pipeline. public class EmbeddingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase EmbeddingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the embedding stage of the vectorization pipeline. public EmbeddingHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html",
    "title": "Class ExtractionHandler | FoundationaLLM",
    "keywords": "Class ExtractionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the extraction stage of the vectorization pipeline. public class ExtractionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase ExtractionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ExtractionHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the extraction stage of the vectorization pipeline. public ExtractionHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html",
    "title": "Class IndexingHandler | FoundationaLLM",
    "keywords": "Class IndexingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the indexing stage of the vectorization pipeline. public class IndexingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase IndexingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the indexing stage of the vectorization pipeline. public IndexingHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html",
    "title": "Class PartitionHandler | FoundationaLLM",
    "keywords": "Class PartitionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the partitioning stage of the vectorization pipeline. public class PartitionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase PartitionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PartitionHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the partitioning stage of the vectorization pipeline. public PartitionHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html",
    "title": "Class VectorizationStepHandlerBase | FoundationaLLM",
    "keywords": "Class VectorizationStepHandlerBase Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Implements basic vectorization step handler functionality. public class VectorizationStepHandlerBase : IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase Implements IVectorizationStepHandler Derived EmbeddingHandler ExtractionHandler IndexingHandler PartitionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationStepHandlerBase(string, string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Implements basic vectorization step handler functionality. public VectorizationStepHandlerBase(string stepId, string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters stepId string The identifier of the vectorization step. messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Fields _logger The logger used for logging. protected readonly ILogger<VectorizationStepHandlerBase> _logger Field Value ILogger<VectorizationStepHandlerBase> _messageId The identifier of underlying message retrieved from the request source. protected readonly string _messageId Field Value string _parameters The dictionary of named parameters used to configure the handler. protected readonly Dictionary<string, string> _parameters Field Value Dictionary<string, string> _serviceProvider The service provider implemented by the dependency injection container. protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider _stateService The vectorization state service. protected readonly IVectorizationStateService _stateService Field Value IVectorizationStateService _stepId The identifier of the vectorization step. protected readonly string _stepId Field Value string _stepsConfiguration The app configuration section containing the configuration for vectorization pipeline steps. protected readonly IConfigurationSection? _stepsConfiguration Field Value IConfigurationSection Properties StepId The identifier of the vectorization pipeline step. public string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, CancellationToken) Invokes the handler. public Task<bool> Invoke(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task<bool> True if the vectorization step request was handled successfully. ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected virtual Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html",
    "title": "Class VectorizationStepHandlerFactory | FoundationaLLM",
    "keywords": "Class VectorizationStepHandlerFactory Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Implements a factory that creates vectorization step handlers. public class VectorizationStepHandlerFactory Inheritance object VectorizationStepHandlerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Create(string, string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Creates a vectorization step handler capable of handling a specified vectorization pipeline step. public static IVectorizationStepHandler Create(string step, string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters step string The identifier of the vectorization pipeline step for which the handler is created. messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The parameters used to initialize the vectorization step handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. Returns IVectorizationStepHandler A class implementing IVectorizationStepHandler."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Handlers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Handlers Classes EmbeddingHandler Handles the embedding stage of the vectorization pipeline. ExtractionHandler Handles the extraction stage of the vectorization pipeline. IndexingHandler Handles the indexing stage of the vectorization pipeline. PartitionHandler Handles the partitioning stage of the vectorization pipeline. VectorizationStepHandlerBase Implements basic vectorization step handler functionality. VectorizationStepHandlerFactory Implements a factory that creates vectorization step handlers."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html",
    "title": "Interface IContentSourceService | FoundationaLLM",
    "keywords": "Interface IContentSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides access to files from a content source. public interface IContentSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractTextAsync(ContentIdentifier, CancellationToken) Reads the binary content of a specified file from the storage. Task<string> ExtractTextAsync(ContentIdentifier contentId, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the file being read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the file."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html",
    "title": "Interface IRequestManagerService | FoundationaLLM",
    "keywords": "Interface IRequestManagerService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests. public interface IRequestManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Run() Runs the vectorization requests processing cycle. Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html",
    "title": "Interface IRequestSourceService | FoundationaLLM",
    "keywords": "Interface IRequestSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests. public interface IRequestSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SourceName The name of the vectorization request source. string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. Task DeleteRequest(string messageId, string popReceipt) Parameters messageId string The underlying message identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt, long DequeueCount)>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt, long DequeueCount)>> A collection of tuples containg a VectorizationRequest object, a message id, pop receipt, and dequeue count. The message id and pop receipt will be used to delete the message from the request source after it has been processed. SubmitRequest(VectorizationRequest) Submits a new vectorization request to the source. Task SubmitRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest item describing the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html",
    "title": "Interface IRequestSourcesCache | FoundationaLLM",
    "keywords": "Interface IRequestSourcesCache Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Defines a cache of IRequestSourceService objects. public interface IRequestSourcesCache Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html",
    "title": "Interface IVectorizationService | FoundationaLLM",
    "keywords": "Interface IVectorizationService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Interface for the vectorization service. public interface IVectorizationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(VectorizationRequest) Processes an incoming vectorization request. Task<VectorizationProcessingResult> ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. Returns Task<VectorizationProcessingResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceFactory-1.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceFactory-1.html",
    "title": "Interface IVectorizationServiceFactory<T> | FoundationaLLM",
    "keywords": "Interface IVectorizationServiceFactory<T> Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Creates typed service instances. public interface IVectorizationServiceFactory<T> Type Parameters T Creates typed service instances. Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetService(string) Retrieves a service instance of type T specified by name. T GetService(string serviceName) Parameters serviceName string The name of the service instance to create. Returns T The service instance created by name. GetServiceWithProfile(string) Retrieves a service instance of type T specified by name and its associated vectorizaiton profile. (T Service, VectorizationProfileBase VectorizationProfile) GetServiceWithProfile(string serviceName) Parameters serviceName string The name of the service instance to create. Returns (T Service, VectorizationProfileBase VectorizationProfile) The service instance and its associated vectorization profile."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html",
    "title": "Interface IVectorizationStateService | FoundationaLLM",
    "keywords": "Interface IVectorizationStateService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides persistence services for vectorization pipeline states. public interface IVectorizationStateService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadState(VectorizationRequest) Reads the state associated with a vectorization request. Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SaveState(VectorizationState) Saves a specified vectorization state. Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html",
    "title": "Interface IVectorizationStepHandler | FoundationaLLM",
    "keywords": "Interface IVectorizationStepHandler Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Handles requests associated with a specific vectorization pipeline step. public interface IVectorizationStepHandler Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties StepId The identifier of the vectorization pipeline step. string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, CancellationToken) Invokes the handler. Task<bool> Invoke(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task<bool> True if the vectorization step request was handled successfully."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html",
    "title": "Namespace FoundationaLLM.Vectorization.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Interfaces Interfaces IContentSourceService Provides access to files from a content source. IRequestManagerService Manages vectorization requests. IRequestSourceService Manages vectorization requests. IRequestSourcesCache Defines a cache of IRequestSourceService objects. IVectorizationService Interface for the vectorization service. IVectorizationServiceFactory<T> Creates typed service instances. IVectorizationStateService Provides persistence services for vectorization pipeline states. IVectorizationStepHandler Handles requests associated with a specific vectorization pipeline step."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.AzureSQLDatabaseContentSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.AzureSQLDatabaseContentSourceServiceSettings.html",
    "title": "Class AzureSQLDatabaseContentSourceServiceSettings | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseContentSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a Sql Database content source service. public class AzureSQLDatabaseContentSourceServiceSettings Inheritance object AzureSQLDatabaseContentSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string used for authentication. public string? ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html",
    "title": "Class RequestManagerServiceSettings | FoundationaLLM",
    "keywords": "Class RequestManagerServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a request manager instance. public record RequestManagerServiceSettings : IEquatable<RequestManagerServiceSettings> Inheritance object RequestManagerServiceSettings Implements IEquatable<RequestManagerServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxHandlerInstances The maximum number of handler instances allowed to run in parallel. [JsonPropertyOrder(1)] public int MaxHandlerInstances { get; set; } Property Value int QueueMaxNumberOfRetries The maximum number of retries to process a request in case of a failure. [JsonPropertyOrder(5)] public int QueueMaxNumberOfRetries { get; set; } Property Value int QueuePollingInterval The interval in seconds to poll the queue for new requests, when the request queue is empty. [JsonPropertyOrder(4)] public int QueuePollingInterval { get; set; } Property Value int QueueProcessingPace The wait time after processing a request from the queue in seconds. [JsonPropertyOrder(3)] public int QueueProcessingPace { get; set; } Property Value int RequestSourceName The name of the request source that provides the requests processed by the request manager. [JsonPropertyOrder(0)] public required string RequestSourceName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html",
    "title": "Class RequestSourceServiceSettings | FoundationaLLM",
    "keywords": "Class RequestSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a request source service. public class RequestSourceServiceSettings Inheritance object RequestSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionConfigurationName The name of the configuration setting holding connection information public required string ConnectionConfigurationName { get; set; } Property Value string ConnectionString The connection string to connect to the request source queue. public string? ConnectionString { get; set; } Property Value string Name The name of the request source. public required string Name { get; set; } Property Value string VisibilityTimeoutSeconds The timeout in seconds available for the processing of each request provided by the request source. If a request is not processed within the timeout window it will become visible again to request managers and might be picked up for processing again. public required int VisibilityTimeoutSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.SharePointOnlineContentSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.SharePointOnlineContentSourceServiceSettings.html",
    "title": "Class SharePointOnlineContentSourceServiceSettings | FoundationaLLM",
    "keywords": "Class SharePointOnlineContentSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a SharePoint Online content source service. public class SharePointOnlineContentSourceServiceSettings Inheritance object SharePointOnlineContentSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CertificateName The name of the X.509 certificate stored in Azure KeyVault. public string? CertificateName { get; set; } Property Value string ClientId The application (client) identifier of the Azure app registration. public string? ClientId { get; set; } Property Value string KeyVaultURL The Azure KeyVault URL in which the X.509 certificate is stored. public string? KeyVaultURL { get; set; } Property Value string TenantId The Azure tenant identifier where the app was registered. public string? TenantId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html",
    "title": "Class VectorizationStateServiceSettings | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a vectorization state service. public class VectorizationStateServiceSettings Inheritance object VectorizationStateServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Storage The settings for connecting to the underlying blob storage. public required BlobStorageServiceSettings Storage { get; set; } Property Value BlobStorageServiceSettings StorageContainerName The name of the container where the underlying persistence service stores vectorization state. public required string StorageContainerName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html",
    "title": "Class VectorizationWorkerSettings | FoundationaLLM",
    "keywords": "Class VectorizationWorkerSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Settings for the vectorization worker. public class VectorizationWorkerSettings Inheritance object VectorizationWorkerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties QueuingEngine The type of queuing engine used to dispatch vectorization requests. [JsonPropertyOrder(2)] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationQueuing QueuingEngine { get; set; } Property Value VectorizationQueuing RequestManagers Settings for the request managers. [JsonPropertyOrder(0)] public List<RequestManagerServiceSettings>? RequestManagers { get; set; } Property Value List<RequestManagerServiceSettings> RequestSources Settings for the request sources. [JsonPropertyOrder(1)] public List<RequestSourceServiceSettings>? RequestSources { get; set; } Property Value List<RequestSourceServiceSettings>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models.Configuration Classes AzureSQLDatabaseContentSourceServiceSettings Provides configuration settings to initialize a Sql Database content source service. RequestManagerServiceSettings Provides configuration settings to initialize a request manager instance. RequestSourceServiceSettings Provides configuration settings to initialize a request source service. SharePointOnlineContentSourceServiceSettings Provides configuration settings to initialize a SharePoint Online content source service. VectorizationStateServiceSettings Provides configuration settings to initialize a vectorization state service. VectorizationWorkerSettings Settings for the vectorization worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ContentSourceProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ContentSourceProfile.html",
    "title": "Class ContentSourceProfile | FoundationaLLM",
    "keywords": "Class ContentSourceProfile Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Provides details about a content source. public class ContentSourceProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase ContentSourceProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentSource The type of the content source. [JsonPropertyName(\"content_source\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required ContentSourceType ContentSource { get; set; } Property Value ContentSourceType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ContentSourceType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ContentSourceType.html",
    "title": "Enum ContentSourceType | FoundationaLLM",
    "keywords": "Enum ContentSourceType Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Types of content sources from which documents can be retrieved. public enum ContentSourceType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureDataLake = 0 Azure data lake storage account. AzureSQLDatabase = 2 Azure SQL Database. SharePointOnline = 1 SharePoint Online document library. Web = 3 Web page."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.IndexerType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.IndexerType.html",
    "title": "Enum IndexerType | FoundationaLLM",
    "keywords": "Enum IndexerType Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Types of vectori indexes available to store embeddings. public enum IndexerType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAISearchIndexer = 0 Indexer using Azure AI Search vector indexes."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.IndexingProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.IndexingProfile.html",
    "title": "Class IndexingProfile | FoundationaLLM",
    "keywords": "Class IndexingProfile Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Provides details about an indexing profile. public class IndexingProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase IndexingProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Indexer The type of the indexer. [JsonPropertyName(\"indexer\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required IndexerType Indexer { get; set; } Property Value IndexerType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ProfileStore-1.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ProfileStore-1.html",
    "title": "Class ProfileStore<T> | FoundationaLLM",
    "keywords": "Class ProfileStore<T> Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Models the content of a profile store managed by the FoundationaLLM.Vectorization resource provider. public class ProfileStore<T> where T : VectorizationProfileBase Type Parameters T Models the content of a profile store managed by the FoundationaLLM.Vectorization resource provider. Inheritance object ProfileStore<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Profiles The list of all profiles that are registered in the profile store. public required List<T> Profiles { get; set; } Property Value List<T> Methods FromDictionary(Dictionary<string, T>) Creates a new profile store from a dictionary. public static ProfileStore<T> FromDictionary(Dictionary<string, T> dictionary) Parameters dictionary Dictionary<string, T> The dictionary containing the profiles. Returns ProfileStore<T> The newly created profile store. ToDictionary() Creates a dictionary of profiles from the profile store. public Dictionary<string, T> ToDictionary() Returns Dictionary<string, T> The newly created dictionary."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextEmbeddingProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextEmbeddingProfile.html",
    "title": "Class TextEmbeddingProfile | FoundationaLLM",
    "keywords": "Class TextEmbeddingProfile Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Provides details about a text embedding profile. public class TextEmbeddingProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase TextEmbeddingProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextEmbedding The type of the text splitter. [JsonPropertyName(\"text_embedding\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required TextEmbeddingType TextEmbedding { get; set; } Property Value TextEmbeddingType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextEmbeddingType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextEmbeddingType.html",
    "title": "Enum TextEmbeddingType | FoundationaLLM",
    "keywords": "Enum TextEmbeddingType Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Types of text embeddings available for text embedding. public enum TextEmbeddingType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields SemanticKernelTextEmbedding = 0 Text embedding that uses Semantic Kernel to embed text."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextPartitioningProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextPartitioningProfile.html",
    "title": "Class TextPartitioningProfile | FoundationaLLM",
    "keywords": "Class TextPartitioningProfile Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Provides details about a text partitioning profile. public class TextPartitioningProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase TextPartitioningProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextSplitter The type of the text splitter. [JsonPropertyName(\"text_splitter\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required TextSplitterType TextSplitter { get; set; } Property Value TextSplitterType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextSplitterType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.TextSplitterType.html",
    "title": "Enum TextSplitterType | FoundationaLLM",
    "keywords": "Enum TextSplitterType Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Types of text splitters available for text partitioning. public enum TextSplitterType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields TokenTextSplitter = 0 Text splitter that uses token counts to partition text."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.VectorizationProfileBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.VectorizationProfileBase.html",
    "title": "Class VectorizationProfileBase | FoundationaLLM",
    "keywords": "Class VectorizationProfileBase Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Basic properties for vectorization profiles. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(ContentSourceProfile), \"content-source-profile\")] [JsonDerivedType(typeof(TextPartitioningProfile), \"text-partitioning-profile\")] [JsonDerivedType(typeof(TextEmbeddingProfile), \"text-embedding-profile\")] [JsonDerivedType(typeof(IndexingProfile), \"indexing-profile\")] public class VectorizationProfileBase : ResourceBase Inheritance object ResourceName ResourceBase VectorizationProfileBase Derived ContentSourceProfile IndexingProfile TextEmbeddingProfile TextPartitioningProfile Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationReferences Configuration references associated with the vectorization profile. [JsonPropertyName(\"configuration_references\")] public Dictionary<string, string>? ConfigurationReferences { get; set; } Property Value Dictionary<string, string> Settings The configuration associated with the vectorization profile. [JsonPropertyName(\"settings\")] public Dictionary<string, string>? Settings { get; set; } Property Value Dictionary<string, string> Type The type of the vectorization profile. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models.Resources Classes ContentSourceProfile Provides details about a content source. IndexingProfile Provides details about an indexing profile. ProfileStore<T> Models the content of a profile store managed by the FoundationaLLM.Vectorization resource provider. TextEmbeddingProfile Provides details about a text embedding profile. TextPartitioningProfile Provides details about a text partitioning profile. VectorizationProfileBase Basic properties for vectorization profiles. Enums ContentSourceType Types of content sources from which documents can be retrieved. IndexerType Types of vectori indexes available to store embeddings. TextEmbeddingType Types of text embeddings available for text embedding. TextSplitterType Types of text splitters available for text partitioning."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifact.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifact.html",
    "title": "Class VectorizationArtifact | FoundationaLLM",
    "keywords": "Class VectorizationArtifact Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization artifact. public class VectorizationArtifact Inheritance object VectorizationArtifact Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the vectorization artifact. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public string? CanonicalId { get; set; } Property Value string Content The content of the artifact. [JsonIgnore] public string? Content { get; set; } Property Value string IsDirty Indicates the need to persist the content of the artifact. [JsonIgnore] public bool IsDirty { get; set; } Property Value bool Position The position of the vectorization artifact. This is relevant only for artifact types that can have multiple parts. [JsonPropertyOrder(3)] [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value int Type The type of the vectorization artifact. [JsonPropertyOrder(1)] [JsonPropertyName(\"type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationArtifactType Type { get; set; } Property Value VectorizationArtifactType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifactType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifactType.html",
    "title": "Enum VectorizationArtifactType | FoundationaLLM",
    "keywords": "Enum VectorizationArtifactType Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Deifines types of vectorization artifacts. public enum VectorizationArtifactType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields ExtractedText = 0 Text extracted from source content. TextEmbeddingVector = 2 Vector embedding derived from a text partition. TextPartition = 1 Text partition suitable for embedding."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationIndexReference.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationIndexReference.html",
    "title": "Class VectorizationIndexReference | FoundationaLLM",
    "keywords": "Class VectorizationIndexReference Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a reference to an index entry that contains vectorized content. public class VectorizationIndexReference Inheritance object VectorizationIndexReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IndexEntryId The unique identifier of the index entry reference. [JsonPropertyOrder(1)] [JsonPropertyName(\"type\")] public required string IndexEntryId { get; set; } Property Value string Position The position of the index entry reference. [JsonPropertyOrder(2)] [JsonPropertyName(\"position\")] public required int Position { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html",
    "title": "Class VectorizationLogEntry | FoundationaLLM",
    "keywords": "Class VectorizationLogEntry Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a log entry that contains information about vectorization operations. public class VectorizationLogEntry Inheritance object VectorizationLogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationLogEntry(string, string, string, string) Represents a log entry that contains information about vectorization operations. public VectorizationLogEntry(string requestId, string messageId, string source, string text) Parameters requestId string messageId string source string text string Properties MessageId The identifier of underlying message retrieved from the request source. [JsonPropertyOrder(1)] [JsonPropertyName(\"mid\")] public string MessageId { get; set; } Property Value string RequestId The unique identifier of the vectorization request. [JsonPropertyOrder(0)] [JsonPropertyName(\"rid\")] public string RequestId { get; set; } Property Value string Source The source of the log entry. This is usually the name of the vectorization step handler. [JsonPropertyOrder(3)] [JsonPropertyName(\"src\")] public string Source { get; set; } Property Value string Text The content of the log entry. [JsonPropertyOrder(4)] [JsonPropertyName(\"txt\")] public string Text { get; set; } Property Value string Time The time at which the log entry was created. [JsonPropertyOrder(2)] [JsonPropertyName(\"t\")] public DateTimeOffset Time { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationProcessingResult.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationProcessingResult.html",
    "title": "Class VectorizationProcessingResult | FoundationaLLM",
    "keywords": "Class VectorizationProcessingResult Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents the result of processing a vectorization request. public record VectorizationProcessingResult : IEquatable<VectorizationProcessingResult> Inheritance object VectorizationProcessingResult Implements IEquatable<VectorizationProcessingResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationProcessingResult(string, bool, string?) Represents the result of processing a vectorization request. public VectorizationProcessingResult(string ObjectId, bool IsSuccess, string? ErrorMessage) Parameters ObjectId string The object id to which the result refers to. IsSuccess bool Indicates whether the processing was completed successfully. ErrorMessage string When IsSuccess is false, contains an error message with details. Properties ErrorMessage When IsSuccess is false, contains an error message with details. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; init; } Property Value string IsSuccess Indicates whether the processing was completed successfully. [JsonPropertyName(\"is_success\")] public bool IsSuccess { get; init; } Property Value bool ObjectId The object id to which the result refers to. [JsonPropertyName(\"object_id\")] public string ObjectId { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationProcessingType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationProcessingType.html",
    "title": "Enum VectorizationProcessingType | FoundationaLLM",
    "keywords": "Enum VectorizationProcessingType Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll The type of vectorization request processing. public enum VectorizationProcessingType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Asynchronous = 0 Asynchronous processing using vectorization workers. Synchronous = 1 Synchronous processing using the vectorization API."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html",
    "title": "Enum VectorizationQueuing | FoundationaLLM",
    "keywords": "Enum VectorizationQueuing Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Types of queuing engines used to dispatch vectorization requests. public enum VectorizationQueuing Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureStorageQueue = 1 Azure storage account queuing. None = 0 No persisted queuing. Results in using a simple, non-production grade, in-memory queuing mechanism."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequest.html",
    "title": "Class VectorizationRequest | FoundationaLLM",
    "keywords": "Class VectorizationRequest Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization request. public class VectorizationRequest Inheritance object VectorizationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Complete Indicates whether the vectorization process is complete or not. [JsonIgnore] public bool Complete { get; } Property Value bool CompletedSteps The ordered list of the names of the vectorization steps that were already completed. [JsonPropertyOrder(11)] [JsonPropertyName(\"completed_steps\")] public List<string> CompletedSteps { get; set; } Property Value List<string> ContentIdentifier The ContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"content_identifier\")] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier CurrentStep The current step of the vectorization request. [JsonIgnore] public string? CurrentStep { get; } Property Value string Id The unique identifier of the vectorization request. The responsibility to create this identifier belongs to the initiator of the vectorization request. [JsonPropertyOrder(-1)] [JsonPropertyName(\"id\")] public string? Id { get; set; } Property Value string this[string] Gets the vectorization pipeline step that has a specific identifier. public VectorizationStep? this[string step] { get; } Parameters step string The identifier of the vectorization pipeline step. Property Value VectorizationStep An instances of the VectorizationStep class with the details required by the step handler. ObjectId The unique identifier of the vectorization request. The responsibility to create this identifier belongs to the FoundationaLLM.Vectorization resource provider. Subsequent vectorization requests referring to the same content will have different unique identifiers. [JsonPropertyOrder(0)] [JsonPropertyName(\"object_id\")] public string? ObjectId { get; set; } Property Value string ProcessingType The VectorizationProcessingType indicating how should the request be processed. [JsonPropertyOrder(2)] [JsonPropertyName(\"processing_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required VectorizationProcessingType ProcessingType { get; set; } Property Value VectorizationProcessingType RemainingSteps The ordered list of the names of the vectorization steps that still need to be executed. [JsonPropertyOrder(12)] [JsonPropertyName(\"remaining_steps\")] public List<string> RemainingSteps { get; set; } Property Value List<string> Steps The list of vectorization steps requested by the vectorization request. Vectorization steps are identified by unique names like \"extract\", \"partition\", \"embed\", \"index\", etc. [JsonPropertyOrder(10)] [JsonPropertyName(\"steps\")] public required List<VectorizationStep> Steps { get; set; } Property Value List<VectorizationStep> Methods MoveToNextStep() Advances the vectorization pipeline to the next step. The newly set current step is used to choose the next request source to which the vectorization request will be added. public (string PreviousStep, string? CurrentStep) MoveToNextStep() Returns (string PreviousStep, string CurrentStep) A tuple containing the name of the previous step and the name of the next step to execute if there are steps left to execute or null if the processing of the vectorization request is complete. RollbackToPreviousStep() Reverts the vectorization pipeline to the previous step, returning the name of the step to execute public string RollbackToPreviousStep() Returns string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html",
    "title": "Class VectorizationState | FoundationaLLM",
    "keywords": "Class VectorizationState Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). public class VectorizationState Inheritance object VectorizationState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Artifacts The vectorization artifacts associated with the vectorization state. [JsonPropertyOrder(2)] [JsonPropertyName(\"artifacts\")] public List<VectorizationArtifact> Artifacts { get; set; } Property Value List<VectorizationArtifact> ContentIdentifier The ContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"content_identifier\")] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier CurrentRequestId The unique identifier of the current vectorization request. Subsequent vectorization requests referring to the same content will have different unique identifiers. [JsonPropertyOrder(0)] [JsonPropertyName(\"request_id\")] public required string CurrentRequestId { get; set; } Property Value string IndexReferences The vector index references associated with the vectorization state. [JsonPropertyOrder(3)] [JsonPropertyName(\"index_references\")] public List<VectorizationIndexReference> IndexReferences { get; set; } Property Value List<VectorizationIndexReference> LogEntries The list of log entries associated with actions executed by the vectorization pipeline. [JsonPropertyOrder(20)] [JsonPropertyName(\"log\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public List<VectorizationLogEntry> LogEntries { get; set; } Property Value List<VectorizationLogEntry> Requests The list of vectorization requests associated with the content identified by ContentIdentifier. [JsonPropertyOrder(19)] [JsonPropertyName(\"requests\")] public List<VectorizationRequest> Requests { get; set; } Property Value List<VectorizationRequest> Methods AddOrReplaceArtifact(VectorizationArtifact) Adds or replaces a vectorization artifact associated with the vectorization state. public void AddOrReplaceArtifact(VectorizationArtifact artifact) Parameters artifact VectorizationArtifact The VectorizationArtifact to be added or replaced. AddOrReplaceIndexReferences(IList<string>) Adds or replaces the list of vector index references associated with the vectorization state. public void AddOrReplaceIndexReferences(IList<string> indexEntryIds) Parameters indexEntryIds IList<string> The ordered list of vector index entry identifiers. AddRequestIfMissing(VectorizationRequest) Adds a vectorization request to the list of requests if it is not already there. public void AddRequestIfMissing(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest being added. FromRequest(VectorizationRequest) Creates a new VectorizationState instance based on a specified vectorization request. public static VectorizationState FromRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest instance for which the state is created. Returns VectorizationState The VectorizationState created from the request. Log(IVectorizationStepHandler, string, string, string) Adds a new generic log entry. public void Log(IVectorizationStepHandler handler, string requestId, string messageId, string text) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. text string The string content of the log entry. LogHandlerEnd(IVectorizationStepHandler, string, string) Adds a log entry marking the completion of handling. public void LogHandlerEnd(IVectorizationStepHandler handler, string requestId, string messageId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. LogHandlerError(IVectorizationStepHandler, string, string, Exception) Adds a log entry for a handling exception. public void LogHandlerError(IVectorizationStepHandler handler, string requestId, string messageId, Exception ex) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. ex Exception The exception being logged. LogHandlerStart(IVectorizationStepHandler, string, string) Adds a log entry marking the start of handling. public void LogHandlerStart(IVectorizationStepHandler handler, string requestId, string messageId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationStep.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationStep.html",
    "title": "Class VectorizationStep | FoundationaLLM",
    "keywords": "Class VectorizationStep Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization step in a vectorization request. public class VectorizationStep Inheritance object VectorizationStep Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The identifier of the step. [JsonPropertyOrder(0)] [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string Parameters Dictionary-based configuration for the step. [JsonPropertyOrder(1)] [JsonPropertyName(\"parameters\")] public required Dictionary<string, string> Parameters { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models Namespaces FoundationaLLM.Vectorization.Models.Configuration FoundationaLLM.Vectorization.Models.Resources Classes VectorizationArtifact Represents a vectorization artifact. VectorizationIndexReference Represents a reference to an index entry that contains vectorized content. VectorizationLogEntry Represents a log entry that contains information about vectorization operations. VectorizationProcessingResult Represents the result of processing a vectorization request. VectorizationRequest Represents a vectorization request. VectorizationState Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). VectorizationStep Represents a vectorization step in a vectorization request. Enums VectorizationArtifactType Deifines types of vectorization artifacts. VectorizationProcessingType The type of vectorization request processing. VectorizationQueuing Types of queuing engines used to dispatch vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderMetadata.html",
    "title": "Class VectorizationResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderMetadata Namespace FoundationaLLM.Vectorization.ResourceProviders Assembly FoundationaLLM.Vectorization.dll Provides metadata for the FoundationaLLM.Vectorization resource provider. public static class VectorizationResourceProviderMetadata Inheritance object VectorizationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderService.html",
    "title": "Class VectorizationResourceProviderService | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderService Namespace FoundationaLLM.Vectorization.ResourceProviders Assembly FoundationaLLM.Vectorization.dll Implements the FoundationaLLM.Vectorization resource provider. public class VectorizationResourceProviderService : ResourceProviderServiceBase, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase VectorizationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase._authorizationService ResourceProviderServiceBase._storageService ResourceProviderServiceBase._eventService ResourceProviderServiceBase._resourceValidatorFactory ResourceProviderServiceBase._logger ResourceProviderServiceBase._instanceSettings ResourceProviderServiceBase._storageContainerName ResourceProviderServiceBase._serializerSettings ResourceProviderServiceBase.Name ResourceProviderServiceBase.IsInitialized ResourceProviderServiceBase.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase.GetResource<T>(string) ResourceProviderServiceBase.UpsertResourceAsync<T>(string, T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, ILogger<VectorizationResourceProviderService>) Implements the FoundationaLLM.Vectorization resource provider. public VectorizationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, ILogger<VectorizationResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. logger ILogger<VectorizationResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task ExecuteActionAsync(ResourcePath, string) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath) The internal implementation of GetResource. Must be overridden in derived classes. protected override T GetResourceInternal<T>(ResourcePath resourcePath) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns T Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsyncInternal(ResourcePath) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsyncInternal(ResourcePath resourcePath) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. Returns Task<object> UpsertResourceAsync<T>(ResourcePath, T) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task UpsertResourceAsync<T>(ResourcePath resourcePath, T resource) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. resource T The instance of the resource being created or updated. Returns Task Type Parameters T"
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Vectorization.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.ResourceProviders Classes VectorizationResourceProviderMetadata Provides metadata for the FoundationaLLM.Vectorization resource provider. VectorizationResourceProviderService Implements the FoundationaLLM.Vectorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.AzureSQLDatabaseContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.AzureSQLDatabaseContentSourceService.html",
    "title": "Class AzureSQLDatabaseContentSourceService | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Implements a vectorization content source for content residing in Azure SQL. public class AzureSQLDatabaseContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase AzureSQLDatabaseContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseContentSourceService(AzureSQLDatabaseContentSourceServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source. public AzureSQLDatabaseContentSourceService(AzureSQLDatabaseContentSourceServiceSettings settings, ILoggerFactory loggerFactory) Parameters settings AzureSQLDatabaseContentSourceServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, CancellationToken) Reads the binary content of a specified file from the storage. public Task<string> ExtractTextAsync(ContentIdentifier contentId, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the file being read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the file. Remarks contentId[0] = the schema. contentId[1] = the table. contentId[2] = the column containing the contents of the files. contentId[3] = the column containing the file names. contentId[4] = the name of the file."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html",
    "title": "Class ContentSourceServiceBase | FoundationaLLM",
    "keywords": "Class ContentSourceServiceBase Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Provides common functionalities for all content sources. public class ContentSourceServiceBase Inheritance object ContentSourceServiceBase Derived AzureSQLDatabaseContentSourceService DataLakeContentSourceService SharePointOnlineContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractTextFromFileAsync(string, BinaryData) Reads the binary content of a specified file from the storage. public static Task<string> ExtractTextFromFileAsync(string fileName, BinaryData binaryContent) Parameters fileName string The file name of the file being extracted. binaryContent BinaryData The binary data of the file being extracted. Returns Task<string> The string content of the file. Exceptions VectorizationException"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceFactory.html",
    "title": "Class ContentSourceServiceFactory | FoundationaLLM",
    "keywords": "Class ContentSourceServiceFactory Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Manages content sources registered for use in the vectorization pipelines. public class ContentSourceServiceFactory : IVectorizationServiceFactory<IContentSourceService> Inheritance object ContentSourceServiceFactory Implements IVectorizationServiceFactory<IContentSourceService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the content source manager service. Constructors ContentSourceServiceFactory(IResourceProviderService, IConfiguration, ILoggerFactory) Manages content sources registered for use in the vectorization pipelines. public ContentSourceServiceFactory(IResourceProviderService vectorizationResourceProviderService, IConfiguration configuration, ILoggerFactory loggerFactory) Parameters vectorizationResourceProviderService IResourceProviderService The vectorization resource provider service. configuration IConfiguration The global configuration provider. loggerFactory ILoggerFactory The logger factory used to create loggers. Remarks Creates a new instance of the content source manager service. Methods GetService(string) Retrieves a service instance of type T specified by name. public IContentSourceService GetService(string serviceName) Parameters serviceName string The name of the service instance to create. Returns IContentSourceService The service instance created by name. GetServiceWithProfile(string) Retrieves a service instance of type T specified by name and its associated vectorizaiton profile. public (IContentSourceService Service, VectorizationProfileBase VectorizationProfile) GetServiceWithProfile(string serviceName) Parameters serviceName string The name of the service instance to create. Returns (IContentSourceService Service, VectorizationProfileBase VectorizationProfile) The service instance and its associated vectorization profile."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.DataLakeContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.DataLakeContentSourceService.html",
    "title": "Class DataLakeContentSourceService | FoundationaLLM",
    "keywords": "Class DataLakeContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Implements a vectorization content source for content residing in blob storage. public class DataLakeContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase DataLakeContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataLakeContentSourceService(BlobStorageServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source. public DataLakeContentSourceService(BlobStorageServiceSettings storageSettings, ILoggerFactory loggerFactory) Parameters storageSettings BlobStorageServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, CancellationToken) Reads the binary content of a specified file from the storage. public Task<string> ExtractTextAsync(ContentIdentifier contentId, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the file being read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the file. Remarks contentId[0] = the URL of the storage account. contentId[1] = the container name. contentId[2] = path of the file relative to the container name."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.SharePointOnlineContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.SharePointOnlineContentSourceService.html",
    "title": "Class SharePointOnlineContentSourceService | FoundationaLLM",
    "keywords": "Class SharePointOnlineContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Implements a vectorization content source for content residing in SharePoint Online. public class SharePointOnlineContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase SharePointOnlineContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineContentSourceService(SharePointOnlineContentSourceServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source. public SharePointOnlineContentSourceService(SharePointOnlineContentSourceServiceSettings settings, ILoggerFactory loggerFactory) Parameters settings SharePointOnlineContentSourceServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, CancellationToken) Reads the binary content of a specified file from the storage. public Task<string> ExtractTextAsync(ContentIdentifier contentId, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the file being read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the file. Remarks contentId[0] = the URL of the SharePoint online tenant. contentId[1] = the relative path of the site/subsite. contentId[2] = the folder path, starting with the document library. contentId[3] = the name of the file."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.WebPageContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.WebPageContentSourceService.html",
    "title": "Class WebPageContentSourceService | FoundationaLLM",
    "keywords": "Class WebPageContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Extracts text from a web page. public class WebPageContentSourceService : IContentSourceService Inheritance object WebPageContentSourceService Implements IContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors WebPageContentSourceService(ILoggerFactory) Creates a new instance of the vectorization content source that scrapes web pages. public WebPageContentSourceService(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory Logger factory that generates loggers for the class. Methods ExtractTextAsync(ContentIdentifier, CancellationToken) Reads the binary content of a specified file from the storage. public Task<string> ExtractTextAsync(ContentIdentifier contentId, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the file being read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the file. Remarks Expected MultipartId: contentId[0] = Protocol: either http or https contentId[1] = the web URL without the protocol"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.ContentSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.ContentSources Classes AzureSQLDatabaseContentSourceService Implements a vectorization content source for content residing in Azure SQL. ContentSourceServiceBase Provides common functionalities for all content sources. ContentSourceServiceFactory Manages content sources registered for use in the vectorization pipelines. DataLakeContentSourceService Implements a vectorization content source for content residing in blob storage. SharePointOnlineContentSourceService Implements a vectorization content source for content residing in SharePoint Online. WebPageContentSourceService Extracts text from a web page."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.NullAuthorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.NullAuthorizationService.html",
    "title": "Class NullAuthorizationService | FoundationaLLM",
    "keywords": "Class NullAuthorizationService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.dll public class NullAuthorizationService : IAuthorizationService Inheritance object NullAuthorizationService Implements IAuthorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessAuthorizationRequest(ActionAuthorizationRequest) Processes an action authorization request. public Task<ActionAuthorizationResult> ProcessAuthorizationRequest(ActionAuthorizationRequest authorizationRequest) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest to process. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html",
    "title": "Class RequestManagerService | FoundationaLLM",
    "keywords": "Class RequestManagerService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests originating from a specific request source. public class RequestManagerService : IRequestManagerService Inheritance object RequestManagerService Implements IRequestManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestManagerService(RequestManagerServiceSettings, Dictionary<string, IRequestSourceService>, IVectorizationStateService, IConfigurationSection?, IServiceProvider, ILoggerFactory, CancellationToken) Initializes a new instance of the RequestManagerService class with the configuration and services required to manage vectorization requests originating from a specific request source. public RequestManagerService(RequestManagerServiceSettings settings, Dictionary<string, IRequestSourceService> requestSourceServices, IVectorizationStateService vectorizationStateService, IConfigurationSection? stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory, CancellationToken cancellationToken) Parameters settings RequestManagerServiceSettings The configuration settings used to initialize the instance. requestSourceServices Dictionary<string, IRequestSourceService> The dictionary with all the request source services registered in the vectorization platform. vectorizationStateService IVectorizationStateService The service providing vectorization state management. stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. cancellationToken CancellationToken The cancellation token that can be used to cancel the work. Exceptions VectorizationException The exception thrown when the initialization of the instance fails. Methods Run() Runs the vectorization requests processing cycle. public Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html",
    "title": "Class MemoryRequestSourceService | FoundationaLLM",
    "keywords": "Class MemoryRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements an in-memory request source, suitable for testing and quick prototyping. public class MemoryRequestSourceService : IRequestSourceService Inheritance object MemoryRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryRequestSourceService(RequestSourceServiceSettings, ILogger<MemoryRequestSourceService>) Implements an in-memory request source, suitable for testing and quick prototyping. public MemoryRequestSourceService(RequestSourceServiceSettings settings, ILogger<MemoryRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The settings used to initialize the request source. logger ILogger<MemoryRequestSourceService> The logger instnce used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string requestId, string popReceipt) Parameters requestId string popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. public Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt, long DequeueCount)>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt, long DequeueCount)>> A collection of tuples containg a VectorizationRequest object, a message id, pop receipt, and dequeue count. The message id and pop receipt will be used to delete the message from the request source after it has been processed. SubmitRequest(VectorizationRequest) Submits a new vectorization request to the source. public Task SubmitRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest item describing the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html",
    "title": "Class RequestSourcesBuilder | FoundationaLLM",
    "keywords": "Class RequestSourcesBuilder Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). public class RequestSourcesBuilder Inheritance object RequestSourcesBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestSourcesBuilder() Constructs a new instance of the builder. public RequestSourcesBuilder() Methods Build() Builds the dictionary of request source. public Dictionary<string, IRequestSourceService> Build() Returns Dictionary<string, IRequestSourceService> The dictionary of IRequestSourceService instances, hashed by the identifier of the request source. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for the request sources. public RequestSourcesBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the request sources. public RequestSourcesBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuing(VectorizationQueuing) Specifies the type of queuing used by the request sources. public RequestSourcesBuilder WithQueuing(VectorizationQueuing queuing) Parameters queuing VectorizationQueuing The VectorizationQueuing value defining the type of queuing. Returns RequestSourcesBuilder The updated instance of the builder. WithSettings(List<RequestSourceServiceSettings>?) Specifies the settings for each IRequestSourceService instance to be built. public RequestSourcesBuilder WithSettings(List<RequestSourceServiceSettings>? settings) Parameters settings List<RequestSourceServiceSettings> The list of RequestSourceServiceSettings objects providing the settings for the request sources. Returns RequestSourcesBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html",
    "title": "Class RequestSourcesCache | FoundationaLLM",
    "keywords": "Class RequestSourcesCache Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public class RequestSourcesCache : IRequestSourcesCache Inheritance object RequestSourcesCache Implements IRequestSourcesCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the cache. Constructors RequestSourcesCache(IOptions<VectorizationWorkerSettings>, IConfigurationSection, ILoggerFactory) Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public RequestSourcesCache(IOptions<VectorizationWorkerSettings> vectorizationWorkerOptions, IConfigurationSection queuesConfiguration, ILoggerFactory loggerFactory) Parameters vectorizationWorkerOptions IOptions<VectorizationWorkerSettings> The IOptions<TOptions> instance containing the VectorizationWorkerSettings instance. queuesConfiguration IConfigurationSection The IConfigurationSection containing settings for the queues. loggerFactory ILoggerFactory The ILoggerFactory used to create new loggers for child objects. Remarks Creates a new instance of the cache. Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. public Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html",
    "title": "Class StorageQueueRequestSourceService | FoundationaLLM",
    "keywords": "Class StorageQueueRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a request source that uses Azure storage queues. public class StorageQueueRequestSourceService : IRequestSourceService Inheritance object StorageQueueRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageQueueRequestSourceService(RequestSourceServiceSettings, ILogger<StorageQueueRequestSourceService>) Creates a new instance of the request source. public StorageQueueRequestSourceService(RequestSourceServiceSettings settings, ILogger<StorageQueueRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The RequestSourceServiceSettings object providing the settings. logger ILogger<StorageQueueRequestSourceService> The logger used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string messageId, string popReceipt) Parameters messageId string The underlying message identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. public Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt, long DequeueCount)>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt, long DequeueCount)>> A collection of tuples containg a VectorizationRequest object, a message id, pop receipt, and dequeue count. The message id and pop receipt will be used to delete the message from the request source after it has been processed. SubmitRequest(VectorizationRequest) Submits a new vectorization request to the source. public Task SubmitRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest item describing the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.RequestSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.RequestSources Classes MemoryRequestSourceService Implements an in-memory request source, suitable for testing and quick prototyping. RequestSourcesBuilder Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). RequestSourcesCache Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. StorageQueueRequestSourceService Implements a request source that uses Azure storage queues."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.IndexingServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.IndexingServiceFactory.html",
    "title": "Class IndexingServiceFactory | FoundationaLLM",
    "keywords": "Class IndexingServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Creates text splitter service instances. public class IndexingServiceFactory : IVectorizationServiceFactory<IIndexingService> Inheritance object IndexingServiceFactory Implements IVectorizationServiceFactory<IIndexingService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingServiceFactory(IResourceProviderService, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public IndexingServiceFactory(IResourceProviderService vectorizationResourceProviderService, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters vectorizationResourceProviderService IResourceProviderService The vectorization resource provider service. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string) Retrieves a service instance of type T specified by name. public IIndexingService GetService(string serviceName) Parameters serviceName string The name of the service instance to create. Returns IIndexingService The service instance created by name. GetServiceWithProfile(string) Retrieves a service instance of type T specified by name and its associated vectorizaiton profile. public (IIndexingService Service, VectorizationProfileBase VectorizationProfile) GetServiceWithProfile(string serviceName) Parameters serviceName string The name of the service instance to create. Returns (IIndexingService Service, VectorizationProfileBase VectorizationProfile) The service instance and its associated vectorization profile."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextEmbeddingServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextEmbeddingServiceFactory.html",
    "title": "Class TextEmbeddingServiceFactory | FoundationaLLM",
    "keywords": "Class TextEmbeddingServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Creates text splitter service instances. public class TextEmbeddingServiceFactory : IVectorizationServiceFactory<ITextEmbeddingService> Inheritance object TextEmbeddingServiceFactory Implements IVectorizationServiceFactory<ITextEmbeddingService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextEmbeddingServiceFactory(IResourceProviderService, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public TextEmbeddingServiceFactory(IResourceProviderService vectorizationResourceProviderService, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters vectorizationResourceProviderService IResourceProviderService The vectorization resource provider service. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string) Retrieves a service instance of type T specified by name. public ITextEmbeddingService GetService(string serviceName) Parameters serviceName string The name of the service instance to create. Returns ITextEmbeddingService The service instance created by name. GetServiceWithProfile(string) Retrieves a service instance of type T specified by name and its associated vectorizaiton profile. public (ITextEmbeddingService Service, VectorizationProfileBase VectorizationProfile) GetServiceWithProfile(string serviceName) Parameters serviceName string The name of the service instance to create. Returns (ITextEmbeddingService Service, VectorizationProfileBase VectorizationProfile) The service instance and its associated vectorization profile."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextSplitterServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextSplitterServiceFactory.html",
    "title": "Class TextSplitterServiceFactory | FoundationaLLM",
    "keywords": "Class TextSplitterServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Creates text splitter service instances. public class TextSplitterServiceFactory : IVectorizationServiceFactory<ITextSplitterService> Inheritance object TextSplitterServiceFactory Implements IVectorizationServiceFactory<ITextSplitterService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextSplitterServiceFactory(IResourceProviderService, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public TextSplitterServiceFactory(IResourceProviderService vectorizationResourceProviderService, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters vectorizationResourceProviderService IResourceProviderService The vectorization resource provider service. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string) Retrieves a service instance of type T specified by name. public ITextSplitterService GetService(string serviceName) Parameters serviceName string The name of the service instance to create. Returns ITextSplitterService The service instance created by name. GetServiceWithProfile(string) Retrieves a service instance of type T specified by name and its associated vectorizaiton profile. public (ITextSplitterService Service, VectorizationProfileBase VectorizationProfile) GetServiceWithProfile(string serviceName) Parameters serviceName string The name of the service instance to create. Returns (ITextSplitterService Service, VectorizationProfileBase VectorizationProfile) The service instance and its associated vectorization profile."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.Text | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.Text Classes IndexingServiceFactory Creates text splitter service instances. TextEmbeddingServiceFactory Creates text splitter service instances. TextSplitterServiceFactory Creates text splitter service instances."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationService.html",
    "title": "Class VectorizationService | FoundationaLLM",
    "keywords": "Class VectorizationService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.dll Implements the IVectorizationService interface. public class VectorizationService : IVectorizationService Inheritance object VectorizationService Implements IVectorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the VectorizationService service. Constructors VectorizationService(IRequestSourcesCache, IVectorizationStateService, IResourceProviderService, IConfigurationSection, IServiceProvider, ILoggerFactory) Implements the IVectorizationService interface. public VectorizationService(IRequestSourcesCache requestSourcesCache, IVectorizationStateService vectorizationStateService, IResourceProviderService vectorizationResourceProvider, IConfigurationSection stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters requestSourcesCache IRequestSourcesCache The IRequestSourcesCache cache of request sources. vectorizationStateService IVectorizationStateService The service providing vectorization state management. vectorizationResourceProvider IResourceProviderService The IResourceProviderService implementing the vectorization resource provider. stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. Remarks Creates a new instance of the VectorizationService service. Methods ProcessRequest(VectorizationRequest) Processes an incoming vectorization request. public Task<VectorizationProcessingResult> ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. Returns Task<VectorizationProcessingResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html",
    "title": "Class BlobStorageVectorizationStateService | FoundationaLLM",
    "keywords": "Class BlobStorageVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Provides vectorization state persistence services using Azure blob storage. public class BlobStorageVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase BlobStorageVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.GetPersistenceIdentifier(ContentIdentifier) VectorizationStateServiceBase.HashContentIdentifier(ContentIdentifier) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new vectorization state service instance. Constructors BlobStorageVectorizationStateService(IStorageService, ILoggerFactory) Provides vectorization state persistence services using Azure blob storage. public BlobStorageVectorizationStateService(IStorageService storageService, ILoggerFactory loggerFactory) Parameters storageService IStorageService The IStorageService that provides storage services. loggerFactory ILoggerFactory The logger factory used to create loggers. Remarks Creates a new vectorization state service instance. Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). public Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html",
    "title": "Class MemoryVectorizationStateService | FoundationaLLM",
    "keywords": "Class MemoryVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Provides in-memory vectorization state persistence. public class MemoryVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase MemoryVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.GetPersistenceIdentifier(ContentIdentifier) VectorizationStateServiceBase.HashContentIdentifier(ContentIdentifier) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). public Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html",
    "title": "Class VectorizationStateServiceBase | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceBase Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Provides base services for the vectorization state services. public abstract class VectorizationStateServiceBase Inheritance object VectorizationStateServiceBase Derived BlobStorageVectorizationStateService MemoryVectorizationStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPersistenceIdentifier(ContentIdentifier) Gets the location of the vectorization state based on the content identifier. protected string GetPersistenceIdentifier(ContentIdentifier contentIdentifier) Parameters contentIdentifier ContentIdentifier The ContentIdentifier holding the content identification information. Returns string HashContentIdentifier(ContentIdentifier) Computes the MD5 hash of the content identifier. protected static string HashContentIdentifier(ContentIdentifier contentIdentifier) Parameters contentIdentifier ContentIdentifier The ContentIdentifier holding the content identification information. Returns string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Classes BlobStorageVectorizationStateService Provides vectorization state persistence services using Azure blob storage. MemoryVectorizationStateService Provides in-memory vectorization state persistence. VectorizationStateServiceBase Provides base services for the vectorization state services."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services Namespaces FoundationaLLM.Vectorization.Services.ContentSources FoundationaLLM.Vectorization.Services.RequestSources FoundationaLLM.Vectorization.Services.Text FoundationaLLM.Vectorization.Services.VectorizationStates Classes NullAuthorizationService RequestManagerService Manages vectorization requests originating from a specific request source. VectorizationService Implements the IVectorizationService interface."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.ContentSourceProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.ContentSourceProfileValidator.html",
    "title": "Class ContentSourceProfileValidator | FoundationaLLM",
    "keywords": "Class ContentSourceProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the ContentSourceProfile model. public class ContentSourceProfileValidator : AbstractValidator<ContentSourceProfile>, IValidator<ContentSourceProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ContentSourceProfile> ContentSourceProfileValidator Implements IValidator<ContentSourceProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ContentSourceProfile>.Validate(ContentSourceProfile) AbstractValidator<ContentSourceProfile>.ValidateAsync(ContentSourceProfile, CancellationToken) AbstractValidator<ContentSourceProfile>.Validate(ValidationContext<ContentSourceProfile>) AbstractValidator<ContentSourceProfile>.ValidateAsync(ValidationContext<ContentSourceProfile>, CancellationToken) AbstractValidator<ContentSourceProfile>.CreateDescriptor() AbstractValidator<ContentSourceProfile>.RuleFor<TProperty>(Expression<Func<ContentSourceProfile, TProperty>>) AbstractValidator<ContentSourceProfile>.Transform<TProperty, TTransformed>(Expression<Func<ContentSourceProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ContentSourceProfile>.Transform<TProperty, TTransformed>(Expression<Func<ContentSourceProfile, TProperty>>, Func<ContentSourceProfile, TProperty, TTransformed>) AbstractValidator<ContentSourceProfile>.RuleForEach<TElement>(Expression<Func<ContentSourceProfile, IEnumerable<TElement>>>) AbstractValidator<ContentSourceProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<ContentSourceProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ContentSourceProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<ContentSourceProfile, IEnumerable<TElement>>>, Func<ContentSourceProfile, TElement, TTransformed>) AbstractValidator<ContentSourceProfile>.RuleSet(string, Action) AbstractValidator<ContentSourceProfile>.When(Func<ContentSourceProfile, bool>, Action) AbstractValidator<ContentSourceProfile>.When(Func<ContentSourceProfile, ValidationContext<ContentSourceProfile>, bool>, Action) AbstractValidator<ContentSourceProfile>.Unless(Func<ContentSourceProfile, bool>, Action) AbstractValidator<ContentSourceProfile>.Unless(Func<ContentSourceProfile, ValidationContext<ContentSourceProfile>, bool>, Action) AbstractValidator<ContentSourceProfile>.WhenAsync(Func<ContentSourceProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentSourceProfile>.WhenAsync(Func<ContentSourceProfile, ValidationContext<ContentSourceProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentSourceProfile>.UnlessAsync(Func<ContentSourceProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentSourceProfile>.UnlessAsync(Func<ContentSourceProfile, ValidationContext<ContentSourceProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentSourceProfile>.Include(IValidator<ContentSourceProfile>) AbstractValidator<ContentSourceProfile>.Include<TValidator>(Func<ContentSourceProfile, TValidator>) AbstractValidator<ContentSourceProfile>.GetEnumerator() AbstractValidator<ContentSourceProfile>.EnsureInstanceNotNull(object) AbstractValidator<ContentSourceProfile>.PreValidate(ValidationContext<ContentSourceProfile>, ValidationResult) AbstractValidator<ContentSourceProfile>.RaiseValidationException(ValidationContext<ContentSourceProfile>, ValidationResult) AbstractValidator<ContentSourceProfile>.OnRuleAdded(IValidationRule<ContentSourceProfile>) AbstractValidator<ContentSourceProfile>.CascadeMode AbstractValidator<ContentSourceProfile>.ClassLevelCascadeMode AbstractValidator<ContentSourceProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentSourceProfileValidator() Configures the validation rules for the ContentSourceProfile model. public ContentSourceProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.IndexingProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.IndexingProfileValidator.html",
    "title": "Class IndexingProfileValidator | FoundationaLLM",
    "keywords": "Class IndexingProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the IndexingProfile model. public class IndexingProfileValidator : AbstractValidator<IndexingProfile>, IValidator<IndexingProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IndexingProfile> IndexingProfileValidator Implements IValidator<IndexingProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IndexingProfile>.Validate(IndexingProfile) AbstractValidator<IndexingProfile>.ValidateAsync(IndexingProfile, CancellationToken) AbstractValidator<IndexingProfile>.Validate(ValidationContext<IndexingProfile>) AbstractValidator<IndexingProfile>.ValidateAsync(ValidationContext<IndexingProfile>, CancellationToken) AbstractValidator<IndexingProfile>.CreateDescriptor() AbstractValidator<IndexingProfile>.RuleFor<TProperty>(Expression<Func<IndexingProfile, TProperty>>) AbstractValidator<IndexingProfile>.Transform<TProperty, TTransformed>(Expression<Func<IndexingProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IndexingProfile>.Transform<TProperty, TTransformed>(Expression<Func<IndexingProfile, TProperty>>, Func<IndexingProfile, TProperty, TTransformed>) AbstractValidator<IndexingProfile>.RuleForEach<TElement>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>) AbstractValidator<IndexingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IndexingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>, Func<IndexingProfile, TElement, TTransformed>) AbstractValidator<IndexingProfile>.RuleSet(string, Action) AbstractValidator<IndexingProfile>.When(Func<IndexingProfile, bool>, Action) AbstractValidator<IndexingProfile>.When(Func<IndexingProfile, ValidationContext<IndexingProfile>, bool>, Action) AbstractValidator<IndexingProfile>.Unless(Func<IndexingProfile, bool>, Action) AbstractValidator<IndexingProfile>.Unless(Func<IndexingProfile, ValidationContext<IndexingProfile>, bool>, Action) AbstractValidator<IndexingProfile>.WhenAsync(Func<IndexingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.WhenAsync(Func<IndexingProfile, ValidationContext<IndexingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.UnlessAsync(Func<IndexingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.UnlessAsync(Func<IndexingProfile, ValidationContext<IndexingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.Include(IValidator<IndexingProfile>) AbstractValidator<IndexingProfile>.Include<TValidator>(Func<IndexingProfile, TValidator>) AbstractValidator<IndexingProfile>.GetEnumerator() AbstractValidator<IndexingProfile>.EnsureInstanceNotNull(object) AbstractValidator<IndexingProfile>.PreValidate(ValidationContext<IndexingProfile>, ValidationResult) AbstractValidator<IndexingProfile>.RaiseValidationException(ValidationContext<IndexingProfile>, ValidationResult) AbstractValidator<IndexingProfile>.OnRuleAdded(IValidationRule<IndexingProfile>) AbstractValidator<IndexingProfile>.CascadeMode AbstractValidator<IndexingProfile>.ClassLevelCascadeMode AbstractValidator<IndexingProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingProfileValidator() Configures the validation rules for the IndexingProfile model. public IndexingProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextEmbeddingProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextEmbeddingProfileValidator.html",
    "title": "Class TextEmbeddingProfileValidator | FoundationaLLM",
    "keywords": "Class TextEmbeddingProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the TextEmbeddingProfile model. public class TextEmbeddingProfileValidator : AbstractValidator<TextEmbeddingProfile>, IValidator<TextEmbeddingProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TextEmbeddingProfile> TextEmbeddingProfileValidator Implements IValidator<TextEmbeddingProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TextEmbeddingProfile>.Validate(TextEmbeddingProfile) AbstractValidator<TextEmbeddingProfile>.ValidateAsync(TextEmbeddingProfile, CancellationToken) AbstractValidator<TextEmbeddingProfile>.Validate(ValidationContext<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.ValidateAsync(ValidationContext<TextEmbeddingProfile>, CancellationToken) AbstractValidator<TextEmbeddingProfile>.CreateDescriptor() AbstractValidator<TextEmbeddingProfile>.RuleFor<TProperty>(Expression<Func<TextEmbeddingProfile, TProperty>>) AbstractValidator<TextEmbeddingProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextEmbeddingProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TextEmbeddingProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextEmbeddingProfile, TProperty>>, Func<TextEmbeddingProfile, TProperty, TTransformed>) AbstractValidator<TextEmbeddingProfile>.RuleForEach<TElement>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>) AbstractValidator<TextEmbeddingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TextEmbeddingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>, Func<TextEmbeddingProfile, TElement, TTransformed>) AbstractValidator<TextEmbeddingProfile>.RuleSet(string, Action) AbstractValidator<TextEmbeddingProfile>.When(Func<TextEmbeddingProfile, bool>, Action) AbstractValidator<TextEmbeddingProfile>.When(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, bool>, Action) AbstractValidator<TextEmbeddingProfile>.Unless(Func<TextEmbeddingProfile, bool>, Action) AbstractValidator<TextEmbeddingProfile>.Unless(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, bool>, Action) AbstractValidator<TextEmbeddingProfile>.WhenAsync(Func<TextEmbeddingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.WhenAsync(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.UnlessAsync(Func<TextEmbeddingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.UnlessAsync(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.Include(IValidator<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.Include<TValidator>(Func<TextEmbeddingProfile, TValidator>) AbstractValidator<TextEmbeddingProfile>.GetEnumerator() AbstractValidator<TextEmbeddingProfile>.EnsureInstanceNotNull(object) AbstractValidator<TextEmbeddingProfile>.PreValidate(ValidationContext<TextEmbeddingProfile>, ValidationResult) AbstractValidator<TextEmbeddingProfile>.RaiseValidationException(ValidationContext<TextEmbeddingProfile>, ValidationResult) AbstractValidator<TextEmbeddingProfile>.OnRuleAdded(IValidationRule<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.CascadeMode AbstractValidator<TextEmbeddingProfile>.ClassLevelCascadeMode AbstractValidator<TextEmbeddingProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextEmbeddingProfileValidator() Configures the validation rules for the TextEmbeddingProfile model. public TextEmbeddingProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextPartitioningProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextPartitioningProfileValidator.html",
    "title": "Class TextPartitioningProfileValidator | FoundationaLLM",
    "keywords": "Class TextPartitioningProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the TextPartitioningProfile model. public class TextPartitioningProfileValidator : AbstractValidator<TextPartitioningProfile>, IValidator<TextPartitioningProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TextPartitioningProfile> TextPartitioningProfileValidator Implements IValidator<TextPartitioningProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TextPartitioningProfile>.Validate(TextPartitioningProfile) AbstractValidator<TextPartitioningProfile>.ValidateAsync(TextPartitioningProfile, CancellationToken) AbstractValidator<TextPartitioningProfile>.Validate(ValidationContext<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.ValidateAsync(ValidationContext<TextPartitioningProfile>, CancellationToken) AbstractValidator<TextPartitioningProfile>.CreateDescriptor() AbstractValidator<TextPartitioningProfile>.RuleFor<TProperty>(Expression<Func<TextPartitioningProfile, TProperty>>) AbstractValidator<TextPartitioningProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextPartitioningProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TextPartitioningProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextPartitioningProfile, TProperty>>, Func<TextPartitioningProfile, TProperty, TTransformed>) AbstractValidator<TextPartitioningProfile>.RuleForEach<TElement>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>) AbstractValidator<TextPartitioningProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TextPartitioningProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>, Func<TextPartitioningProfile, TElement, TTransformed>) AbstractValidator<TextPartitioningProfile>.RuleSet(string, Action) AbstractValidator<TextPartitioningProfile>.When(Func<TextPartitioningProfile, bool>, Action) AbstractValidator<TextPartitioningProfile>.When(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, bool>, Action) AbstractValidator<TextPartitioningProfile>.Unless(Func<TextPartitioningProfile, bool>, Action) AbstractValidator<TextPartitioningProfile>.Unless(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, bool>, Action) AbstractValidator<TextPartitioningProfile>.WhenAsync(Func<TextPartitioningProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.WhenAsync(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.UnlessAsync(Func<TextPartitioningProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.UnlessAsync(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.Include(IValidator<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.Include<TValidator>(Func<TextPartitioningProfile, TValidator>) AbstractValidator<TextPartitioningProfile>.GetEnumerator() AbstractValidator<TextPartitioningProfile>.EnsureInstanceNotNull(object) AbstractValidator<TextPartitioningProfile>.PreValidate(ValidationContext<TextPartitioningProfile>, ValidationResult) AbstractValidator<TextPartitioningProfile>.RaiseValidationException(ValidationContext<TextPartitioningProfile>, ValidationResult) AbstractValidator<TextPartitioningProfile>.OnRuleAdded(IValidationRule<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.CascadeMode AbstractValidator<TextPartitioningProfile>.ClassLevelCascadeMode AbstractValidator<TextPartitioningProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextPartitioningProfileValidator() Configures the validation rules for the TextPartitioningProfile model. public TextPartitioningProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationProfileBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationProfileBaseValidator.html",
    "title": "Class VectorizationProfileBaseValidator | FoundationaLLM",
    "keywords": "Class VectorizationProfileBaseValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationProfileBase model. public class VectorizationProfileBaseValidator : AbstractValidator<VectorizationProfileBase>, IValidator<VectorizationProfileBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationProfileBase> VectorizationProfileBaseValidator Implements IValidator<VectorizationProfileBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationProfileBase>.Validate(VectorizationProfileBase) AbstractValidator<VectorizationProfileBase>.ValidateAsync(VectorizationProfileBase, CancellationToken) AbstractValidator<VectorizationProfileBase>.Validate(ValidationContext<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.ValidateAsync(ValidationContext<VectorizationProfileBase>, CancellationToken) AbstractValidator<VectorizationProfileBase>.CreateDescriptor() AbstractValidator<VectorizationProfileBase>.RuleFor<TProperty>(Expression<Func<VectorizationProfileBase, TProperty>>) AbstractValidator<VectorizationProfileBase>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationProfileBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationProfileBase>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationProfileBase, TProperty>>, Func<VectorizationProfileBase, TProperty, TTransformed>) AbstractValidator<VectorizationProfileBase>.RuleForEach<TElement>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>) AbstractValidator<VectorizationProfileBase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationProfileBase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>, Func<VectorizationProfileBase, TElement, TTransformed>) AbstractValidator<VectorizationProfileBase>.RuleSet(string, Action) AbstractValidator<VectorizationProfileBase>.When(Func<VectorizationProfileBase, bool>, Action) AbstractValidator<VectorizationProfileBase>.When(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, bool>, Action) AbstractValidator<VectorizationProfileBase>.Unless(Func<VectorizationProfileBase, bool>, Action) AbstractValidator<VectorizationProfileBase>.Unless(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, bool>, Action) AbstractValidator<VectorizationProfileBase>.WhenAsync(Func<VectorizationProfileBase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.WhenAsync(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.UnlessAsync(Func<VectorizationProfileBase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.UnlessAsync(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.Include(IValidator<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.Include<TValidator>(Func<VectorizationProfileBase, TValidator>) AbstractValidator<VectorizationProfileBase>.GetEnumerator() AbstractValidator<VectorizationProfileBase>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationProfileBase>.PreValidate(ValidationContext<VectorizationProfileBase>, ValidationResult) AbstractValidator<VectorizationProfileBase>.RaiseValidationException(ValidationContext<VectorizationProfileBase>, ValidationResult) AbstractValidator<VectorizationProfileBase>.OnRuleAdded(IValidationRule<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.CascadeMode AbstractValidator<VectorizationProfileBase>.ClassLevelCascadeMode AbstractValidator<VectorizationProfileBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationProfileBaseValidator() Configures the validation rules for the VectorizationProfileBase model. public VectorizationProfileBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Validation.Resources Classes ContentSourceProfileValidator Validator for the ContentSourceProfile model. IndexingProfileValidator Validator for the IndexingProfile model. TextEmbeddingProfileValidator Validator for the TextEmbeddingProfile model. TextPartitioningProfileValidator Validator for the TextPartitioningProfile model. VectorizationProfileBaseValidator Validator for the VectorizationProfileBase model."
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html",
    "title": "Class VectorizationWorker | FoundationaLLM",
    "keywords": "Class VectorizationWorker Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.dll Provides the core execution context for the vectorization worker. public class VectorizationWorker Inheritance object VectorizationWorker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorker(IEnumerable<IRequestManagerService>) Provides the core execution context for the vectorization worker. public VectorizationWorker(IEnumerable<IRequestManagerService> requestManagerServices) Parameters requestManagerServices IEnumerable<IRequestManagerService> The collection of request managers to run. Methods Run() Starts all the request managers and enters a holding pattern waiting on them to stop. public Task Run() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html",
    "title": "Class VectorizationWorkerBuilder | FoundationaLLM",
    "keywords": "Class VectorizationWorkerBuilder Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.dll Implements a builder for a vectorization worker. public class VectorizationWorkerBuilder Inheritance object VectorizationWorkerBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorkerBuilder() Constructs a new instance of the builder. public VectorizationWorkerBuilder() Methods Build() Builds the vectorization worker. public VectorizationWorker Build() Returns VectorizationWorker The vectorization worker instance. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithCancellationToken(CancellationToken) Specifies the cancellation token used to signal stopping the vectorization worker. public VectorizationWorkerBuilder WithCancellationToken(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken used to signal stopping. Returns VectorizationWorkerBuilder The updated instance of the builder. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for child objects. public VectorizationWorkerBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns VectorizationWorkerBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the vectorization worker. public VectorizationWorkerBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithServiceProvider(IServiceProvider) Specifies the dependency injection service provider. public VectorizationWorkerBuilder WithServiceProvider(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. Returns VectorizationWorkerBuilder The updated instance of the builder. WithSettings(VectorizationWorkerSettings) Specifies the settings used to build the vectorization worker. public VectorizationWorkerBuilder WithSettings(VectorizationWorkerSettings settings) Parameters settings VectorizationWorkerSettings The VectorizationWorkerSettingsobject providing the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStateService(IVectorizationStateService) Specifies the vectorization state service that manages vectorization states. public VectorizationWorkerBuilder WithStateService(IVectorizationStateService stateService) Parameters stateService IVectorizationStateService The IVectorizationStateService service managing state. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStepsConfiguration(IConfigurationSection) Specifies the configuration section containing settings for vectorization pipeline steps. public VectorizationWorkerBuilder WithStepsConfiguration(IConfigurationSection stepsConfiguration) Parameters stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Vectorization.Worker.Controllers Assembly FoundationaLLM.Vectorization.Worker.dll Methods for managing vectorization requests. [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetWorkerStatus() Gets the status of the vectorization worker. [HttpGet] public Task<bool> GetWorkerStatus() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Worker.Controllers Classes StatusController Methods for managing vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html",
    "title": "Class Worker | FoundationaLLM",
    "keywords": "Class Worker Namespace FoundationaLLM.Vectorization.Worker Assembly FoundationaLLM.Vectorization.Worker.dll The background service used to run the worker. public class Worker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService Worker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the worker. Constructors Worker(IVectorizationStateService, IOptions<VectorizationWorkerSettings>, IConfigurationSection, IConfigurationSection, IServiceProvider, ILoggerFactory) The background service used to run the worker. public Worker(IVectorizationStateService stateService, IOptions<VectorizationWorkerSettings> settings, IConfigurationSection queuesConfigurationSection, IConfigurationSection stepsConfigurationSection, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters stateService IVectorizationStateService The IVectorizationStateService used to manage the vectorization state. settings IOptions<VectorizationWorkerSettings> The VectorizationWorkerSettings options holding the vectorization worker settings. queuesConfigurationSection IConfigurationSection The IConfigurationSection containing settings for the queues. stepsConfigurationSection IConfigurationSection The IConfigurationSection containing settings for the vectorization steps. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers in child objects. Remarks Creates a new instance of the worker. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Worker Namespaces FoundationaLLM.Vectorization.Worker.Controllers Classes Worker The background service used to run the worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.html",
    "title": "Namespace FoundationaLLM.Vectorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization Namespaces FoundationaLLM.Vectorization.API.Controllers FoundationaLLM.Vectorization.Constants FoundationaLLM.Vectorization.DataFormats FoundationaLLM.Vectorization.Exceptions FoundationaLLM.Vectorization.Handlers FoundationaLLM.Vectorization.Interfaces FoundationaLLM.Vectorization.Models FoundationaLLM.Vectorization.ResourceProviders FoundationaLLM.Vectorization.Services FoundationaLLM.Vectorization.Validation.Resources FoundationaLLM.Vectorization.Worker Classes VectorizationWorker Provides the core execution context for the vectorization worker. VectorizationWorkerBuilder Implements a builder for a vectorization worker."
  },
  "api/dotnet/FoundationaLLM.html": {
    "href": "api/dotnet/FoundationaLLM.html",
    "title": "Namespace FoundationaLLM | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM Namespaces FoundationaLLM.Agent FoundationaLLM.AgentFactory FoundationaLLM.Authorization FoundationaLLM.Common FoundationaLLM.Configuration FoundationaLLM.Core FoundationaLLM.DataSource FoundationaLLM.Gatekeeper FoundationaLLM.Management FoundationaLLM.Prompt FoundationaLLM.SemanticKernel FoundationaLLM.Vectorization Classes DependencyInjection Data Source resource provider service implementation of resource provider dependency injection extensions."
  },
  "api/dotnet/index.html": {
    "href": "api/dotnet/index.html",
    "title": ".NET API | FoundationaLLM",
    "keywords": ".NET API Use the navigation on the left to browse the .NET API documentation."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API documentation | FoundationaLLM",
    "keywords": "API documentation FoundationaLLM has both .NET and Python and Python APIs: .NET API Python API"
  },
  "api/python/index.html": {
    "href": "api/python/index.html",
    "title": "Python API | FoundationaLLM",
    "keywords": "Python API Use the navigation on the left to browse the Python API documentation."
  },
  "deployment/app-configuration-values.html": {
    "href": "deployment/app-configuration-values.html",
    "title": "Azure App Configuration values | FoundationaLLM",
    "keywords": "Azure App Configuration values FoundationaLLM uses Azure App Configuration to store configuration values, Key Vault secret references, and feature flags. Doing so helps reduce duplication and provides a convenient way to manage these settings in one place. It also allows you to change the settings without having to redeploy the solution. Since several settings can be shared by multiple projects, we do not specify the project name in the configuration key names. Configuration values Key Default Value Description FoundationaLLM:Instance:Id Generated GUID The value should be a GUID represents a unique instance of the FoundationaLLM instance. FoundationaLLM:Configuration:KeyVaultURI Enter the URL to the service. The URL of the Key Vault used to store secrets. FoundationaLLM:AgentHub:AgentMetadata:StorageContainer agents FoundationaLLM:AgentHub:StorageManager:BlobStorage:ConnectionString Key Vault secret name: foundationallm-agenthub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:Agent:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Agent:ResourceProviderService:Storage:ConnectionString Key Vault secret name: foundationallm-agent-resourceprovider-storage-connectionstring The connection string to the Azure Storage account used for the agent resource provider. FoundationaLLM:APIs:AgentFactoryAPI:APIKey Key Vault secret name: foundationallm-apis-agentfactoryapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:AgentFactoryAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:AgentFactoryAPI:ForceHttpsRedirection false FoundationaLLM:APIs:AgentHubAPI:APIKey Key Vault secret name: foundationallm-apis-agenthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:AgentHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:BypassGatekeeper false By default, the Core API does not bypass the Gatekeeper API. To override this behavior and allow it to bypass the Gatekeeper API, set this value to true. Beware that bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. Make sure you understand the risks before setting this value to true. FoundationaLLM:APIs:DataSourceHubAPI:APIKey Key Vault secret name: foundationallm-apis-datasourcehubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:DataSourceHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety true By default, the Gatekeeper API has Azure Content Safety integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio true By default, the Gatekeeper API has Microsoft Presidio integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:ForceHttpsRedirection false FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperintegrationapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperIntegrationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIKey Key Vault secret name: foundationallm-apis-langchainapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:ManagementAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:ManagementAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:Prompt:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Prompt:ResourceProviderService:Storage:ConnectionString Key Vault secret name: foundationallm-prompt-resourceprovider-storage-connectionstring The connection string to the Azure Storage account used for the prompt resource provider. FoundationaLLM:APIs:PromptHubAPI:APIKey Key Vault secret name: foundationallm-apis-prompthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:PromptHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIKey Key Vault secret name: foundationallm-apis-semantickernelapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:ForceHttpsRedirection false FoundationaLLM:AzureContentSafety:APIKey Key Vault secret name: foundationallm-azurecontentsafety-apikey This is a Key Vault reference. FoundationaLLM:AzureContentSafety:APIUrl Enter the URL to the service. FoundationaLLM:AzureContentSafety:HateSeverity 2 FoundationaLLM:AzureContentSafety:SelfHarmSeverity 2 FoundationaLLM:AzureContentSafety:SexualSeverity 2 FoundationaLLM:AzureContentSafety:ViolenceSeverity 2 FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName completions FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens 8096 FoundationaLLM:AzureOpenAI:API:Completions:ModelName gpt-35-turbo FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion 0301 FoundationaLLM:AzureOpenAI:API:Completions:Temperature 0 FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName embeddings FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens 8191 FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName text-embedding-ada-002 FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature 0 FoundationaLLM:AzureOpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:AzureOpenAI:API:Key Key Vault secret name: foundationallm-azureopenai-api-key This is a Key Vault reference. FoundationaLLM:AzureOpenAI:API:Version 2023-05-15 FoundationaLLM:BlobStorageMemorySource:BlobStorageConnection Key Vault secret name: foundationallm-blobstoragememorysource-blobstorageconnection This is a Key Vault reference. FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer memory-source FoundationaLLM:BlobStorageMemorySource:ConfigFilePath BlobMemorySourceConfig.json FoundationaLLM:Branding:AccentColor #fff FoundationaLLM:Branding:AccentTextColor #131833 FoundationaLLM:Branding:BackgroundColor #fff FoundationaLLM:Branding:CompanyName FoundationaLLM FoundationaLLM:Branding:FavIconUrl favicon.ico FoundationaLLM:Branding:KioskMode false FoundationaLLM:Branding:LogoText FoundationaLLM:Branding:LogoUrl foundationallm-logo-white.svg FoundationaLLM:Branding:PageTitle FoundationaLLM Chat Copilot FoundationaLLM:Branding:PrimaryColor #131833 FoundationaLLM:Branding:PrimaryTextColor #fff FoundationaLLM:Branding:SecondaryColor #334581 FoundationaLLM:Branding:SecondaryTextColor #fff FoundationaLLM:Branding:PrimaryButtonBackgroundColor #5472d4 FoundationaLLM:Branding:PrimaryButtonTextColor #fff FoundationaLLM:Branding:SecondaryButtonBackgroundColor #70829a FoundationaLLM:Branding:SecondaryButtonTextColor #fff FoundationaLLM:Chat:Entra:CallbackPath /signin-oidc FoundationaLLM:Chat:Entra:ClientId FoundationaLLM:Chat:Entra:ClientSecret Key Vault secret name: foundationallm-chat-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Chat:Entra:Instance Enter the URL to the service. FoundationaLLM:Chat:Entra:Scopes api://FoundationaLLM-Auth/Data.Read FoundationaLLM:Chat:Entra:TenantId FoundationaLLM:CoreAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:CoreAPI:Entra:ClientId FoundationaLLM:CoreAPI:Entra:ClientSecret Key Vault secret name: foundationallm-coreapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:CoreAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:CoreAPI:Entra:Scopes Data.Read FoundationaLLM:CoreAPI:Entra:TenantId FoundationaLLM:CoreWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer leases FoundationaLLM:CosmosDB:Containers Sessions, UserSessions FoundationaLLM:CosmosDB:Database database FoundationaLLM:CosmosDB:Endpoint Enter the URL to the service. FoundationaLLM:CosmosDB:Key Key Vault secret name: foundationallm-cosmosdb-key This is a Key Vault reference. FoundationaLLM:CosmosDB:MonitoredContainers Sessions FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer data-sources FoundationaLLM:DataSourceHub:StorageManager:BlobStorage:ConnectionString Key Vault secret name: foundationallm-datasourcehub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:DataSources:AboutFoundationaLLM:BlobStorage:ConnectionString Key Vault secret name: foundationallm-datasourcehub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:LangChain:CSVFile:URL Key Vault secret name: foundationallm-langchain-csvfile-url This is a Key Vault reference. FoundationaLLM:LangChain:SQLDatabase:TestDB:Password Key Vault secret name: foundationallm-langchain-sqldatabase-testdb-password This is a Key Vault reference. FoundationaLLM:LangChain:Summary:MaxTokens 4097 FoundationaLLM:LangChain:Summary:ModelName gpt-35-turbo FoundationaLLM:LangChainAPI:Key Key Vault secret name: foundationallm-langchainapi-key This is a Key Vault reference. FoundationaLLM:Management:Entra:CallbackPath /signin-oidc FoundationaLLM:Management:Entra:ClientId FoundationaLLM:Management:Entra:ClientSecret Key Vault secret name: foundationallm-management-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Management:Entra:Instance Enter the URL to the service. FoundationaLLM:Management:Entra:Scopes api://FoundationaLLM-Management-Auth/Data.Manage FoundationaLLM:Management:Entra:TenantId FoundationaLLM:ManagementAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:ManagementAPI:Entra:ClientId FoundationaLLM:ManagementAPI:Entra:ClientSecret Key Vault secret name: foundationallm-managementapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:ManagementAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:ManagementAPI:Entra:Scopes Data.Manage FoundationaLLM:ManagementAPI:Entra:TenantId FoundationaLLM:OpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:OpenAI:API:Key Key Vault secret name: foundationallm-openai-api-key This is a Key Vault reference. FoundationaLLM:OpenAI:API:Temperature 0 FoundationaLLM:PromptHub:PromptMetadata:StorageContainer system-prompt FoundationaLLM:PromptHub:StorageManager:BlobStorage:ConnectionString Key Vault secret name: foundationallm-prompthub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:Refinement FoundationaLLM:SemanticKernelAPI:OpenAI:Key Key Vault secret name: foundationallm-semantickernelapi-openai-key This is a Key Vault reference. FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName RetailAssistant.Default FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment completions FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens 8096 FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment embeddings FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens 8191 FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint Enter the URL to the service. FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens 300 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens 50 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens 100 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName Summarizer.TwoWords FoundationaLLM:APIs:VectorizationAPI:APIUrl The URL of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:APIKey Key Vault secret name: foundationallm-apis-vectorizationapi-apikey The API key of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization API. FoundationaLLM:APIs:VectorizationAPI:ForceHttpsRedirection false FoundationaLLM:APIs:VectorizationWorker:APIUrl The URL of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:APIKey Key Vault secret name: foundationallm-apis-vectorizationworker-apikey The API key of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization worker API. FoundationaLLM:Vectorization:VectorizationWorker The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings FoundationaLLM:Vectorization:Queues:Embed:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the embed vectorization queue. FoundationaLLM:Vectorization:Queues:Extract:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the extract vectorization queue. FoundationaLLM:Vectorization:Queues:Index:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the index vectorization queue. FoundationaLLM:Vectorization:Queues:Partition:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the partition vectorization queue. FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:StateService:Storage:ConnectionString Key Vault secret name: storage-connection The connection string to the Azure Storage account used for the vectorization state service. FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:ResourceProviderService:Storage:ConnectionString Key Vault secret name: foundationallm-vectorization-resourceprovider-storage-connectionstring The connection string to the Azure Storage account used for the vectorization state service. FoundationaLLM:Events:AzureEventGridEventService:APIKey Key Vault secret name: foundationallm-events-azureeventgrid-apikey The API key used to access FLLM's Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:AuthenticationType The authentication type used to connect to the underlying Event Grid namespace. Currently supports APIKey. FoundationaLLM:Events:AzureEventGridEventService:Endpoint The endpoint for the Azure Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:NamespaceId The Azure resource ID of the Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI FLLM eventing infrastructure configuration for the Agent Factory API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI FLLM eventing infrastructure configuration for the Core API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI FLLM eventing infrastructure configuration for the Management API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI FLLM eventing infrastructure configuration for the Vectorization API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker FLLM eventing infrastructure configuration for the Vectorization Worker. FoundationaLLM:Configuration:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Configuration:ResourceProviderService:Storage:ConnectionString Key Vault secret name: foundationallm-configuration-resourceprovider-storage-connectionstring This is a Key Vault reference. FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType APIKey FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey Key Vault secret name: search-key This is a Key Vault reference. FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint Azure AI Search service endpoint. FoundationaLLM:Vectorization:AzureAISearchIndexingService:QueryAPIKey Key Vault secret name: search-key This is a Key Vault reference. FoundationaLLM:Vectorization:ContentSources:DefaultAzureDataLake:AuthenticationType ConnectionString This is a Key Vault reference. FoundationaLLM:Vectorization:ContentSources:DefaultAzureDataLake:ConnectionString Key Vault secret name: search-key This is a Key Vault reference. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion 2023-05-15 FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName embeddings FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint Enter the URL to the service. FoundationaLLM:VectorizationAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:VectorizationAPI:Entra:ClientId FoundationaLLM:VectorizationAPI:Entra:ClientSecret Key Vault secret name: foundationallm-apis-management-api-entra-clientsecret This is a Key Vault reference. FoundationaLLM:VectorizationAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:VectorizationAPI:Entra:Scopes api://FoundationaLLM-Vectorization/Data.Manage FoundationaLLM:VectorizationAPI:Entra:TenantId"
  },
  "deployment/authentication/core-authentication-setup-entra.html": {
    "href": "deployment/authentication/core-authentication-setup-entra.html",
    "title": "Core API and User Portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Core API and User Portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the chat interface. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Core API and user portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the user portal chat interface to authenticate users. An API application that will be used by the Core API to authenticate users. Pre-requisites Note Make sure that you have deployed the solution before proceeding with the steps below. Setup App Configuration access Sign in to the Azure portal as at least a Contributor. Navigate to the Resource Group that was created as part of the deployment. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the App Configuration resource and select Configuration explorer to view the values. If you cannot access the configurations, add your user account as an App Configuration Data Owner through Access Control (IAM). You need this role in order to update the configurations as a required part of the authentication setup. To add your user account to the appropriate role, follow the instructions in the Configure access control for services document. Obtain the URL for the chat UI application You need this URL to assign the redirect URI for the client application. If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter a name for your application, such as FoundationaLLM-Client. You should indicate that this is for the chat client (User Portal) application by appending -Client to the name. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js chat application. Add a Redirect URI under Single-page application for your deployed Vue.js application. Enter <YOUR_CHAT_APP_URL>/signin-oidc, replacing <YOUR_CHAT_APP_URL> with the chat UI application URL obtained in the Pre-requisites section above. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002chatuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the Vue.js application: http://localhost:3000/signin-oidc. If you wish to configure authentication in Postman for executing calls against the Core API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Read Who can consent?: Admins and users Admin consent display name: Read data on behalf of users Admin consent description: Allows the app to read data on behalf of the signed-in user. User consent display name: Read data on behalf of the user User consent description: Allows the app to read data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://d85a09ce067141d5807a/Data.Read. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Read authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-Client application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM API application. Select the Data.Read scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following: Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Chat:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Chat:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. For example, it should look something like api://d85a09ce067141d5807a/Data.Read. FoundationaLLM:Chat:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:CoreAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:CoreAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Chat:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Chat:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:CoreAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:Scopes: Should be Data.Read. Select Apply to save the changes. Next steps Now that Entra authentication is fully configured, restart the Core API and chat applications to apply the changes. Navigate to your chat application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account. Restart Core API and Chat UI applications in an ACA Deployment To restart the Core API and Chat applications in an Azure Container Apps (ACA) deployment, you will need to navigate to the Core API and Chat applications and restart their container revisions, as indicated in the following Azure Portal screenshot: From the Revisions blade in the left navigation panel of the Core API or Chat UI container app detail page in Azure Portal, select the name of the running revision. A dialog panel titled Revision details should appear on the right side of the browser with a Restart button at the top. Select the Restart button to restart the running container. Restarting in this manner will need to be performed for both the Core API container app and the Chat UI container app. Restart Core API and Chat UI applications in an AKS Deployment To restart the Core API and Chat applications in an Azure Kubernetes Service (AKS) deployment, you will need to navigate to the AKS detail page in Azure Portal and perform the following: Select the Workloads blade from the left navigation panel. Select the Pods tab from the Workloads detail page. Select the Core API and Chat UI pods from the list (it helps if you select default in the Filter by namespace dropdown first). Select the Delete button to terminate the currently running pods. New pods will be instantiated to take their place."
  },
  "deployment/authentication/index.html": {
    "href": "deployment/authentication/index.html",
    "title": "Authentication | FoundationaLLM",
    "keywords": "Authentication FoundationaLLM uses the Microsoft Entra ID service to authenticate users and applications. Check back for additional authentication providers in the future. Microsoft Entra ID Core API and user portal authentication setup - Microsoft Entra ID Management API and portal authentication setup - Microsoft Entra ID"
  },
  "deployment/authentication/management-authentication-setup-entra.html": {
    "href": "deployment/authentication/management-authentication-setup-entra.html",
    "title": "Management API and portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Management API and portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the management portal. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Management API and portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the management portal to authenticate users. An API application that will be used by the Management API to authenticate users. Pre-requisites Note Make sure that you have deployed the solution before proceeding with the steps below. Setup App Configuration access Sign in to the Azure portal as at least a Contributor. Navigate to the Resource Group that was created as part of the deployment. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the App Configuration resource and select Configuration explorer to view the values. If you cannot access the configurations, add your user account as an App Configuration Data Owner through Access Control (IAM). You need this role in order to update the configurations as a required part of the authentication setup. To add your user account to the appropriate role, follow the instructions in the Configure access control for services document. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter a name for your application, such as FoundationaLLM-ManagementClient. You should indicate that this is for the management client application by appending -ManagementClient to the name. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js management application. Add a Redirect URI under Single-page application for your deployed Vue.js management application. Enter <YOUR_MANAGEMENT_APP_URL>/signin-oidc, replacing <YOUR_MANAGEMENT_APP_URL> with the management UI application URL. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002managementuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the management portal Vue.js application: http://localhost:3001/signin-oidc. If you wish to configure authentication in Postman for executing calls against the Core API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM-Management. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Manage Who can consent?: Admins and users Admin consent display name: Manage data on behalf of users Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://c79a09ce067141d5832b/Data.Manage. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Manage authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-ManagementClient application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM-Management API application. Select the Data.Manage scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following: Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Management:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Management:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. For example, it should look something like api://d85a09ce067141d5807a/Data.Manage. FoundationaLLM:Management:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:ManagementAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:ManagementAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Management:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Management:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Scopes: Should be Data.Manage. Select Apply to save the changes. Next steps Now that Entra authentication is fully configured, restart the Management API and management portal applications to apply the changes. Navigate to your management portal application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account."
  },
  "deployment/authentication/vectorization-authentication-setup-entra.html": {
    "href": "deployment/authentication/vectorization-authentication-setup-entra.html",
    "title": "Vectorization API and client authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Vectorization API and client authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication, meaning that you can use Entra to protect access to the Vectorization API. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Vectorization API, you need to create two applications in the Microsoft Azure portal: A client application that will be used by Vectorization API clients An API application that will be used by the Vectorization API to authenticate clients Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter a name for your application, such as FoundationaLLM-VectorizationClient. You should indicate that this is for the vectorization client application by appending -VectorizationClient to the name. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application If you wish to configure authentication in Postman for executing calls against the Vectorization API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM-Vectorization. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Manage Who can consent?: Admins and users Admin consent display name: Manage data on behalf of users Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://c79a09ce067141d5832b/Data.Manage. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Manage authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-VectorizationClient application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM-Vectorization API application. Select the Data.Manage scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following: Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Create the following App Configuration key-value pairs: FoundationaLLM:VectorizationAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:VectorizationAPI:Entra:Instance: https://login.microsoftonline.com/ FoundationaLLM:VectorizationAPI:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:VectorizationAPI:Entra:Scopes: Data.Manage"
  },
  "deployment/configure-access-control-for-services.html": {
    "href": "deployment/configure-access-control-for-services.html",
    "title": "Configure access control for services | FoundationaLLM",
    "keywords": "Configure access control for services FoundationaLLM takes a least privilege approach to access control. This means that by default, users have no access to any resources. You must explicitly grant access to users for each resource they need to access. This guide walks you through the process of granting access to users as needed. Prerequisites You have a FoundationaLLM solution deployed and running. You have a user account with the Contributor role on the Azure resource group or subscription where the solution is deployed. Azure App Configuration service The Azure App Configuration service provides FoundationaLLM solution components with a centralized location to store and manage application settings and feature flags. Role-based access controls (RBAC) are used to control access to the App Configuration service for managing settings and feature flags, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read application settings and feature flags. You can use the same approach to grant access to users as needed. App Configuration roles The following table summarizes the roles FoundationaLLM uses for the App Configuration service: Role Description Target Users App Configuration Data Reader Allows users to read settings and feature flags. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. App Configuration Data Owner Allows users to read and write settings and feature flags. Administrators that need to manage settings and feature flags. Grant access to the App Configuration service Use the steps below to grant access to the App Configuration service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the App Configuration resource. The name should end with -appconfig. Select Access Control (IAM) in the left-hand menu. Select + Add and then Add role assignment. Select the App Configuration Data Reader or the App Configuration Data Owner role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment. Azure Key Vault service The Azure Key Vault service provides FoundationaLLM solution components with a centralized location to store and manage secrets. Role-based access controls (RBAC) are used to control access to the Key Vault service for managing secrets, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read secrets. You can use the same approach to grant access to users as needed. Key Vault roles The following table summarizes the roles FoundationaLLM uses for the Key Vault service: Role Description Target Users Key Vault Secrets User Allows users to read secrets. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. Key Vault Secrets Officer Allows users to read and write secrets. Administrators that need to manage secrets. Grant access to the Key Vault service Use the steps below to grant access to the Key Vault service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the Key Vault resource. The name should end with -kv. Select Access Control (IAM) in the left-hand menu. Select + Add and then Add role assignment. Select the Key Vault Secrets User or the Key Vault Secrets Officer role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment."
  },
  "deployment/deployment-configuration.html": {
    "href": "deployment/deployment-configuration.html",
    "title": "Configuration for deployment | FoundationaLLM",
    "keywords": "Configuration for deployment Configuration settings used by the FoundationaLLM platform Name Default Type Area Used by Description foundationallm-core-api-url Environment variable User Portal ChatThread.vue, index.vue The URL of the FoundationaLLM Core API. foundationallm-core-api-keyvault-name Environment variable Core API The name of the Azure Key Vault used by the Core API. foundationallm-core-api-entra-instance https://login.microsoftonline.com/ Environment variable Core API The Entra instance used by the Core API. foundationallm-core-api-entra-tenant-id View the Entra setup document for instructions Environment variable Core API The Entra tenant ID used by the Core API. foundationallm-core-api-entra-client-id Environment variable Core API The Entra client ID used by the Core API. foundationallm-core-api-entra-client-secret-name Key Vault secret Core API Name of the Entra client secret used by the Core API. foundationallm-core-api-entra-callback-path /signin-oidc Environment variable Core API The Entra callback path used by the Core API. foundationallm-core-api-entra-scopes Environment variable Core API The Entra scopes used by the Core API. foundationallm-core-api-gatekeeper-api-url Environment variable Core API The URL of the Gatekeeper API used by the Core API. foundationallm-gatekeeper-api-keyvault-name Environment variable Gatekeeper API The name of the Azure Key Vault used by the Gatekeeper API. foundationallm-gatekeeper-api-key Key Vault secret Gatekeeper API The first Gatekeeper API key. foundationallm-gatekeeper-api-agentfactory-api-url Environment variable Gatekeeper API The URL of the Agent Factory API used by the Gatekeeper API. foundationallm-agentfactory-api-keyvault-name Environment variable Agent Factory API The name of the Azure Key Vault used by the Agent Factory API. foundationallm-agentfactory-api-key Key Vault secret Agent Factory API The first Agent Factory API key. foundationallm-agentfactory-api-agenthub-api-url Environment variable Agent Factory API The URL of the Agent Hub API used by the Agent Factory API. foundationallm-agentfactory-api-prompthub-api-url Environment variable Agent Factory API The URL of the Prompt Hub API used by the Agent Factory API. foundationallm-agentfactory-api-datasourcehub-api-url Environment variable Agent Factory API The URL of the Data Source Hub API used by the Agent Factory API. foundationallm-agentfactory-api-langchain-api-url Environment variable Agent Factory API The URL of the LangChain API used by the Agent Factory API. foundationallm-agentfactory-api-semantickernel-api-url Environment variable Agent Factory API The URL of the Semantic Kernel API used by the Agent Factory API. foundationallm-agenthub-api-key Key Vault secret Agent Hub API APIKeyValidator (SDK) The Agent Hub API key. foundationallm-prompthub-api-key Key Vault secret Prompt Hub API APIKeyValidator (SDK) The Prompt Hub API key. foundationallm-datasourcehub-api-key Key Vault secret Data Source Hub API APIKeyValidator (SDK) The Data Source Hub API key. foundationallm-langchain-api-key Key Vault secret LangChain API APIKeyValidator (SDK) The first LangChain API key. foundationallm-langchain-sqldb-testdb-server-name Environment variable LangChain API SqlDbConfig (SDK) The name of the Azure SQL Server used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-name Environment variable LangChain API SqlDbConfig (SDK) The name of the database used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-username Environment variable LangChain API SqlDbConfig (SDK) The user name used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-password Key Vault Secret LangChain API SqlDbConfig (SDK) The user password used by the LangChain testdb SQL agent. foundationallm-azure-openai-api-url Environment variable LangChain API AzureChatLLM (SDK) The URL of the Azure OpenAI API. foundationallm-azure-openai-api-completions-deployment Environment variable LangChain API AzureChatLLM (SDK) The name of the completions Azure Open AI deployment used by LangChain API. foundationallm-azure-openai-api-completions-model-version Environment variable LangChain API AzureChatLLM (SDK) The version of the completions model used by LangChain API. foundationallm-azure-openai-api-version Environment variable LangChain API AzureChatLLM (SDK) The version of the Azure Open AI API used by LangChain API. foundationallm-azure-openai-api-key Key Vault secret LangChain API AzureChatLLM (SDK) The key of the Azure Open AI API used by LangChain API. foundationallm-langchain-summary-model-name gpt-35-turbo Environment variable LangChain API SummaryAgent (SDK) The name of the summary model used by the LangChain summary agent. foundationallm-langchain-summary-max-tokens 4097 Environment variable LangChain API SummaryAgent (SDK) The maximum number of input tokens used by the LangChain summary agent. foundationallm-keyvault-name Environment variable LangChain API, PythonSDK AgentHub(SDK), DataSourceHub(SDK),PromptHub(SDK) The name of the Azure Key Vault used by the FoundationaLLM platform. foundationallm-configuration-allow-environment-variables Environment variable PythonSDK Configuration(SDK) When True checks environment first then key vault, otherwise checks App config (not yet implemented) then key vault foundationallm-storage-connection-string Key Vault secret PythonSDK PromptHubStorageManager(SDK), DataSourceHubStorageManager(SDK), AgentHubStorageManager(SDK) The connection string of the Azure Blob Storage account used by the FoundationaLLM platform. foundationallm-prompt-metadata-storage-container Environment variable PythonSDK PromptHubStorageManager(SDK) The name of the Azure Blob Storage container where prompt metadata is stored. foundationallm-datasource-metadata-storage-container Environment variable PythonSDK DataSourceHubStorageManager(SDK) The name of the Azure Blob Storage container where data source metadata is stored. foundationallm-agent-metadata-storage-container Environment variable PythonSDK AgentHubStorageManager(SDK) The name of the Azure Blob Storage container where agent metadata is stored. Temporary configuration settings used by the FoundationaLLM platform NOTE: These configuration settings are temporary and will be removed in the future. Name Type Area Used by Description foundationallm-langchain-csv-file-url Environment variable LangChain API CSVAgent (SDK) The URL (including the SAS token) of the CSV file used by the LangChain CSV agent."
  },
  "deployment/deployment-starter.html": {
    "href": "deployment/deployment-starter.html",
    "title": "Deployment - Quick Start | FoundationaLLM",
    "keywords": "Deployment - Quick Start FoundationaLLM is designed for seamless deployment within your Azure Subscription. It initially utilizes Azure Container Apps (ACA) for rapid deployment and streamlined development. For scaling up to production environments, FoundationaLLM also supports deployment on Azure Kubernetes Service (AKS), offering robust scalability and management features. Be mindful of the Azure OpenaAI regional quota limits on the number of Azure OpenAI Service instances. To optimize resource usage, FoundationaLLM offers the flexibility to connect to an existing Azure OpenAI Service resource, thereby avoiding the creation of additional instances during deployment. This feature is particularly useful for managing resource allocation and ensuring efficient Azure OpenAI Service quota utilization. Prerequisites You will need the following resources and access to deploy the solution: Azure Subscription: An Azure Subscription is a logical container in Microsoft Azure that links to an Azure account and is the basis for billing, resource management, and allocation. It allows users to create and manage Azure resources like virtual machines, databases, and more, providing a way to organize access and costs associated with these resources. Subscription access to Azure OpenAI service: Access to Azure OpenAI Service provides users with the ability to integrate OpenAI's advanced AI models and capabilities within Azure. This service combines OpenAI's powerful models with Azure's robust cloud infrastructure and security, offering scalable AI solutions for a variety of applications like natural language processing and generative tasks. Start here to Request Access to Azure OpenAI Service Minimum quota of 65 CPUs across all VM family types: Azure CPU quotas refer to the limits set on the number and type of virtual CPUs that can be used in an Azure Subscription. These quotas are in place to manage resource allocation and ensure fair usage across different users and services. Users can request quota increases if their application or workload requires more CPU resources. Start here to Manage VM Quotas App Registrations created in the Entra ID tenant (formerly Azure Active Directory): Azure App Registrations is a feature in Entra ID that allows developers to register their applications for identity and access management. This registration process enables applications to authenticate users, request and receive tokens, and access Azure resources that are secured by Entra ID. Follow the instructions in the Authentication setup document to configure authentication for the solution. User with the proper role assignments: Azure Role-Based Access Control (RBAC) roles are a set of permissions in Azure that control access to Azure resource management. These roles can be assigned to users, groups, and services in Azure, allowing granular control over who can perform what actions within a specific scope, such as a subscription, resource group, or individual resource. Owner on the target subscription Owner on the app registrations described in the Authentication setup document You will use the following tools during deployment: Azure Developer CLI (v1.6.1 or greater): The Azure Developer CLI (azd) is a command-line tool designed to streamline the development and deployment of applications on Microsoft's Azure cloud platform. It simplifies various tasks such as setting up development environments, managing resources, and deploying applications by providing a more developer-friendly interface. The Azure Dev CLI aims to enhance productivity by abstracting complex cloud management tasks into simpler, more intuitive commands, making it easier for developers to integrate Azure services into their workflows. Azure CLI (v2.51.0 or greater): The Azure Command Line Interface (CLI) is a set of commands used to manage Azure resources directly from the command line. It provides a simple and efficient way to automate tasks and manage Azure services, supporting both Windows, macOS, and Linux platforms. Azure CLI is particularly useful for scripting and executing batch operations, offering a comprehensive set of commands that cover almost all aspects of Azure resource management. git: Git is a distributed version control system designed to handle everything from small to very large projects with speed and efficiency. It allows multiple developers to work on the same codebase simultaneously, tracking and merging changes, and maintaining a complete history of all file revisions. Git is essential for modern software development, supporting branching and merging strategies, and is widely used for its robustness, flexibility, and remote collaboration capabilities. PowerShell 7 (7.4.1 or greater): PowerShell 7 is a cross-platform (Windows, macOS, and Linux) automation tool and scripting language, an evolution of PowerShell that works with the .NET Core framework. It offers enhanced features and performance improvements over its predecessors and is designed for heterogeneous environments and the hybrid cloud. In PowerShell 7, the command-line executable is referred to as pwsh, an alias that is essential for integration with Azure Developer CLI (AZD) hooks and other modern automation scenarios. Optional To run or debug the solution locally, you will need to install the following dependencies: .NET 8 SDK: The .NET 8 SDK is the latest iteration of Microsoft's .NET software development kit, offering enhanced features and improvements for building applications across various platforms, including web, mobile, desktop, cloud, and IoT. It provides a comprehensive set of libraries, runtime features, and APIs, supporting multiple programming languages like C#, F#, and Visual Basic. This SDK is designed for high performance and efficiency, catering to modern development needs with support for cloud-native applications, microservices, and machine learning. Visual Studio 2022: Visual Studio 2022 is an advanced integrated development environment (IDE) from Microsoft, offering robust tools for developing applications on the .NET platform and other technologies. It brings improved performance, better usability, and enhanced collaboration features, supporting a wide range of programming languages and frameworks. Visual Studio 2022 is tailored for both individual developers and teams, integrating seamlessly with modern workflows and cloud services, and providing powerful debugging, code navigation, and refactoring capabilities. Optional To build or test container images, you will need to install the following dependencies: Docker Desktop: Docker Desktop is an application for MacOS and Windows machines for the building and sharing of containerized applications and microservices. It provides an integrated environment to use Docker containers, simplifying the process of building, testing, and deploying applications in a consistent and isolated environment. Docker Desktop includes Docker Engine, Docker CLI client, Docker Compose, and other Docker tools, making it a key tool for developers working with container-based applications. Deployment steps Follow the steps below to deploy the solution to your Azure subscription. Ensure all the prerequisites are met. From a PowerShell prompt, execute the following to clone the repository: git clone https://github.com/solliancenet/foundationallm.git git checkout release/0.4.0 Run the following commands to set the appropriate application registration settings for OIDC authentication. cd foundationallm/deploy/starter az login # Log into Azure CLI azd auth login # Log into Azure Developer CLI # Set your target Subscription and Location azd env new --location <Supported Azure Region> --subscription <Azure Subscription ID> azd env set ENTRA_AUTH_API_INSTANCE <Auth API Instance> azd env set ENTRA_AUTH_API_CLIENT_ID <Auth API Client Id> azd env set ENTRA_AUTH_API_CLIENT_SECRET <Auth API Client Secret> azd env set ENTRA_AUTH_API_SCOPES <Auth API Scope> azd env set ENTRA_AUTH_API_TENANT_ID <Auth API Tenant ID> azd env set ENTRA_CHAT_UI_CLIENT_ID <Chat UI Client Id> azd env set ENTRA_CHAT_UI_SCOPES <Chat UI Scope> azd env set ENTRA_CHAT_UI_TENANT_ID <Chat UI Tenant ID> azd env set ENTRA_CORE_API_CLIENT_ID <Core API Client Id> azd env set ENTRA_CORE_API_SCOPES <Core API Scope> azd env set ENTRA_CORE_API_TENANT_ID <Core API Tenant ID> azd env set ENTRA_MANAGEMENT_API_CLIENT_ID <Management API Client Id> azd env set ENTRA_MANAGEMENT_API_SCOPES <Management API Scope> azd env set ENTRA_MANAGEMENT_API_TENANT_ID <Management API Tenant ID> azd env set ENTRA_MANAGEMENT_UI_CLIENT_ID <Management UI Client Id> azd env set ENTRA_MANAGEMENT_UI_SCOPES <Management UI Scope> azd env set ENTRA_MANAGEMENT_UI_TENANT_ID <Management UI Tenant ID> azd env set ENTRA_VECTORIZATION_API_CLIENT_ID <Vectorization API Client Id> azd env set ENTRA_VECTORIZATION_API_SCOPES <Vectorization API Scope> azd env set ENTRA_VECTORIZATION_API_TENANT_ID <Vectorization API Tenant ID> azd env set FOUNDATIONALLM_INSTANCE_ID <guid> Note You need to manually generate a GUID for FOUNDATIONALLM_INSTANCE_ID. Bash: uuidgen PowerShell: [guid]::NewGuid().ToString() Optional: Bring Your Own Azure OpenAI Instance If you have an existing Azure OpenAI instance, you can use it by setting the following environment variables: azd env set OPENAI_NAME <OpenAI Name> azd env set OPENAI_RESOURCE_GROUP <OpenAI Resource Group> azd env set OPENAI_SUBSCRIPTION_ID <OpenAI Subscription ID> Deploy the solution After setting the OIDC-specific settings in the AZD environment above, run azd up in the same folder location to provision the infrastructure, update the App Configuration entries, deploy the API and web app services, and import files into the storage account. azd up Authentication setup Follow the instructions in the Authentication setup document to finalizie authentication for the solution. Teardown To tear down the environment, execute azd down in the same folder location. azd down --purge Note the --purge argument in the command above. This ensures that resources that would otherwise be soft-deleted are instead completely purged from your Azure subscription."
  },
  "deployment/index.html": {
    "href": "deployment/index.html",
    "title": "Deployment | FoundationaLLM",
    "keywords": "Deployment Deployment choices The following table summarizes the deployment choices available for the solution: Deployment type Description When to use Starter Use your local development environment to deploy the solution to your Azure subscription. Best suited for situations where you need the flexibility of a full development environment (e.g. to customize the solution) and you have a local development environment available. CloudShell Coming Soon - Use Azure CloudShell to deploy the solution using only a browser. Best suited for situations where you want to deploy without needing to install anything in your local development environment. Select the links in the table above to learn more about each deployment choice. Post-deployment configuration Authentication setup Follow the instructions in the Authentication setup document to configure authentication for the solution."
  },
  "development/calling-apis/directly-calling-core-api.html": {
    "href": "development/calling-apis/directly-calling-core-api.html",
    "title": "Directly calling the Core API | FoundationaLLM",
    "keywords": "Directly calling the Core API Typically, the only interaction with the FoundationaLLM (FLLM) APIs is indirectly through the User Portal and Management Portal. However, you can also call the APIs directly to perform certain tasks, such as using your configured FLLM agents to perform completions (via the Core API), or updating your branding configurations (via the Management API). API architecture The FLLM architecture contains layers of APIs that are used to perform different tasks along a call chain, starting with the Core API. The following diagram shows a very high-level flow of the API architecture: sequenceDiagram actor U as Caller participant C as CoreAPI participant A as AgentFactoryAPI participant O as OrchestrationWrapperAPI U->>C: Calls Orchestration endpoint C->>A: Calls Orchestration endpoint Note over A,O: Agent resolution from cache or hubs A->>+O: Invokes orchestrator Note over O: Calls LangChain or Semantic Kernel O->>-A: Returns result A->>C: Returns result C->>U: Returns result Note The AgentFactoryAPI contains a caching layer for the full agent metadata, including the agent, its datasource(s), and prompts. This caching layer is used to improve performance by reducing the number of calls to the underlying hubs. The AgentFactoryAPI also includes endpoints to clear the cache across different categories. In the more detailed diagram below, you can see that the AgentFactoryAPI calls the AgentHubAPI, PromptHubAPI, and DataSourceHubAPI to retrieve the agent metadata. When we look a level deeper, we see that there are several interactions between the APIs that occur during the call chain. The following diagram shows a more detailed flow of the API architecture: graph TD; A[CoreAPI] -->|1. User Request| B[GatekeeperAPI] -->|Gatekeeper Extensions| BB[GatekeeperIntegrationAPI] A -...->|\"1a. User Request (Bypass Gatekeeper)\"| C[AgentFactoryAPI] B ---->|2. Processed Request| C[AgentFactoryAPI] C -->|3. Request| E[(AgentHubAPI)] C --->|4. Instantiate Agent| D[[Agent]] D -->|Request| F[(PromptHubAPI)] D -->|Request| G[(DataSourceHubAPI)] E -->|Metadata| C F -->|Metadata| D G -->|Metadata| D D -->|Hydrated Agent| C D -->|5. Composed Information| H[OrchestrationWrapperAPI] H -->|6. Response| D C -->|7. Response| B C -...->|\"7a. Response (Bypass Gatekeeper)\"| A B -->|8. Final Response| A Note Notice that there is an alternate path that bypasses the Gatekeeper API. This path is used when the FoundationaLLM:APIs:CoreAPI:BypassGatekeeper configuration value is set to true. By default, the Core API does not bypass the Gatekeeper API. Beware that bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. Make sure you understand the risks before setting this value to true. Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Core API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:CoreAPI:APIUrl configuration value. Alternatively, follow the instructions in the Quickstart guide to find the Core API URL. To see the API endpoints available in FoundationaLLM, you can get your Core API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Core API endpoint is https://fllmaca002coreca.graybush-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca002coreca.graybush-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a starter deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Core API endpoint by navigating to https://{{AKS URL}}/core/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Core API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Core.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Core API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Core API URL, agent hint value, and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Core.API collection in the left-hand menu. Select the Variables tab. Tip The https://localhost:63279 value is the default value for the Core API URL (baseUrl variable) when debugging it locally. You can leave this value as-is if you are testing locally, or you can replace it with the Core API URL for your deployment. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Core API URL for your deployment. Fill out the tenantId, appClientId, and appScope Current value settings for your Core Client Entra ID app registration (setup instructions). Use the list below the screenshot to find the values. tenantId: The tenant ID of your Core Client (Chat UI) Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appClientId: The client ID of your Core Client Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appScope: The scope of your Core Client Entra ID app. You can find this value in the Api Permissions section of your Entra ID app in the portal. Select the Save button in the top right corner of the Variables pane to save your changes. Set up the Postman authentication token There are two ways to obtain the authentication token that you will use to authenticate your API calls: Configure the Postman collection authorization token (recommended) Though this method takes a few more steps, it is the recommended method because it allows you to use the same token for all of the API calls in the collection. Important If you previously configured the Microsoft Entra ID app registration for the Chat UI application (Core Client), you will need to update the Redirect URI to https://oauth.pstmn.io/v1/callback in order to use the Postman mobile app to get the token. You can do this by following the steps in the Add a redirect URI to the client application section of the authentication setup guide. Select the Authorization tab within the FoundationaLLM.Core.API collection. You will see the Authorization tab at the collection level. This means that you can configure the token at the collection level and use it for all of the requests in the collection. Notice that the Token Name is FLLM CoreAPI Token. This will automatically be used by the requests in the collection. Note All of the values are pre-filled and use the variables that you set up in the previous section. You do not need to change any values at this time. Scroll down to the bottom of the page and click on Get New Access Token. This will open a new window in your browser and will ask you to login with your credentials. Once you login, you will be asked to consent to the permissions that you specified in the Scope field. Click on Accept to consent to the permissions. You will then be redirected to the callback url that you specified in the Callback Url field. This will close the browser window and will take you back to Postman. You should now see the token in the Authorization tab. Click on Use Token to use the token in the collection. Important Be sure to click the Save button in the top right corner of the Postman app to save your changes. Now you are ready to make your first CoreAPI request. Within the FoundationaLLM.Core.API collection, select the Sessions GET request under the sessions folder. When you select the Authorization tab, notice that the selected type is Inherit auth from parent. This means that the request will use the token that you configured at the collection level. Also notice that the {{baseUrl}} variable is used in the Request Url field. This means that the request will use the Core API URL that you configured at the collection level. Select the Send button to send the request. Even if you do not have any chat sessions in your system, you should receive a successful response (200) from the Core API. Now you can use the same token to test any other request in the collection with ease. Obtain the authentication token from the User Portal (not recommended) As an alternative to saving the authentication token at the collection level, you can obtain the token from the User Portal and save it at the request level. This method is not recommended because it requires you to obtain a new token for each request that you want to make, and the token expires after a certain amount of time. Navigate to the User Portal and log in. Open the browser's developer tools (F12), select the Network tab, refresh the page, and copy the value of the token under the XHR tab from any of the API calls that are made to the Core API. Within the FoundationaLLM.Core.API collection, select the Sessions GET request under the sessions folder. Select the Authorization tab, select Bearer Token as the type, and paste the token value into the Token field. Select Send to send the request. Even if you do not have any chat sessions in your system, you should receive a successful response (200) from the Core API."
  },
  "development/calling-apis/directly-calling-management-api.html": {
    "href": "development/calling-apis/directly-calling-management-api.html",
    "title": "Directly calling the Management API | FoundationaLLM",
    "keywords": "Directly calling the Management API This guide provides steps for importing and configuring the Postman collection for the FoundationaLLM Management API. The Management API is used to manage the FoundationaLLM system, including creating and managing agents, vectorization profiles, and more. Once you configure the Postman collection, including authentication, follow the instructions in the links below to perform various operations using the Management API: Managing agents Vectorization management Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Management API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:ManagementAPI:APIUrl configuration value. To see the API endpoints available in FoundationaLLM, you can get your Management API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Management API endpoint is https://fllmaca729managementca.icelake-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca729managementca.icelake-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a starter deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Management API endpoint by navigating to https://{{AKS URL}}/management/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Management API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Management.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Management API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Management API URL and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Management.API collection in the left-hand menu. Select the Variables tab. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Management API URL for your deployment. Update the instanceId variable Current value with the instance ID of your FoundationaLLM deployment. You can find the instance ID in the FoundationaLLM:Instance:Id Azure App Configuration property. Fill out the tenantId, appClientId, and appScope Current value settings for your Management Client Entra ID app registration (setup instructions). Use the list below the screenshot to find the values. tenantId: The tenant ID of your Management Client (Management Portal) Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appClientId: The client ID of your Management Client Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appScope: The scope of your Management Client Entra ID app. You can find this value in the Api Permissions section of your Entra ID app in the portal. Select the Save button in the top right corner of the Variables pane to save your changes. Set up the Postman authentication token Configure the Postman collection authorization token Complete these steps to configure Postman to use the same token for all of the API calls in the collection. Important If you previously configured the Microsoft Entra ID app registration for the Management Client (UI) application, you will need to update the Redirect URI to https://oauth.pstmn.io/v1/callback in order to use the Postman mobile app to get the token. You can do this by following the steps in the Add a redirect URI to the client application section of the authentication setup guide. Select the Authorization tab within the FoundationaLLM.Management.API collection. You will see the Authorization tab at the collection level. This means that you can configure the token at the collection level and use it for all of the requests in the collection. Notice that the Token Name is FLLM Management Token. This will automatically be used by the requests in the collection. Note All of the values are pre-filled and use the variables that you set up in the previous section. You do not need to change any values at this time. Scroll down to the bottom of the page and click on Get New Access Token. This will open a new window in your browser and will ask you to login with your credentials. Once you login, you will be asked to consent to the permissions that you specified in the Scope field. Click on Accept to consent to the permissions. You will then be redirected to the callback url that you specified in the Callback Url field. This will close the browser window and will take you back to Postman. You should now see the token in the Authorization tab. Click on Use Token to use the token in the collection. Important Be sure to click the Save button in the top right corner of the Postman app to save your changes. Now you are ready to make your first ManagementAPI request. Within the FoundationaLLM.Management.API collection, select the Get Agents GET request. When you select the Authorization tab, notice that the selected type is Inherit auth from parent. This means that the request will use the token that you configured at the collection level. Also notice that the {{baseUrl}} and {{instanceId}} variables is used in the Request Url field. This means that the request will use the Management API URL and Instance Id that you configured at the collection level. Select the Send button to send the request. Even if you do not have any agents sessions in your system, you should receive a successful response (200) from the Management API. Now you can use the same token to test any other request in the collection with ease."
  },
  "development/calling-apis/directly-calling-vectorization-api.html": {
    "href": "development/calling-apis/directly-calling-vectorization-api.html",
    "title": "Directly calling the Vectorization API | FoundationaLLM",
    "keywords": "Directly calling the Vectorization API This guide provides steps for importing and configuring the Postman collection for the FoundationaLLM Vectorization API. The Vectorization API is used to execute vectorization pipelines by submitting requests with payloads that describe the vectorization process and desired steps to run. Once you configure the Postman collection, follow the instructions in the links below to perform various operations using the Vectorization API: Vectorization concepts, configuration, and execution Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Vectorization API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:VectorizationAPI:APIUrl configuration value. To see the API endpoints available in FoundationaLLM, you can get your Vectorization API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Vectorization API endpoint is https://fllmaca729vectorizationca.mountainrock-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca729vectorizationca.mountainrock-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a starter deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Vectorization API endpoint by navigating to https://{{AKS URL}}/vectorization/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Vectorization API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Vectorization.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Vectorization API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Vectorization API URL, API key, and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Vectorization.API collection in the left-hand menu. Select the Variables tab. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Vectorization API URL for your deployment. Update the api_key variable Current value with the API Key of your Vectorization API deployment. You can find the API Key in the foundationallm-apis-vectorizationapi-apikey Key Vault secret. Select the Save button in the top right corner of the Variables pane to save your changes. You have now set up the Postman environment for the Vectorization API."
  },
  "development/calling-apis/index.html": {
    "href": "development/calling-apis/index.html",
    "title": "Directly calling APIs | FoundationaLLM",
    "keywords": "Directly calling APIs Although FoundationaLLM provides user interfaces for most of the operations, you can also call the APIs directly. This is useful when you want to automate some operations or when you want to integrate FoundationaLLM with other systems. The links below provide the documentation for calling the Core and Management APIs, respectively: Core API Management API Vectorization API"
  },
  "development/calling-apis/standard-deployment-local-api-access.html": {
    "href": "development/calling-apis/standard-deployment-local-api-access.html",
    "title": "Standard Deployment Local API Access | FoundationaLLM",
    "keywords": "Standard Deployment Local API Access Standard deployments expose backend services internally, preventing API access over the public internet. Using the kubectl CLI, however, it is possible to forward FoundationaLLM APIs deployed within Kubernetes for local consumption. kubectl Forwarding Script Prerequisites kubectl with the kubelogin extension Both of these utilities can be installed by the Azure CLI: az aks install-cli. If you use this command, you will need to restart your terminal to reflect the changes to $PATH. Kubernetes credentials stored in $HOME/.kube/config Obtain these credentials using the Azure CLI. az login az aks get-credentials --name MyManagedCluster --resource-group MyResourceGroup Script Navigate to /deploy/standard/scripts/Kubectl-Proxy.ps1 or copy the following PowerShell script to your local environment. Before running it, ensure that no applications are running on ports 5000-5010. To stop the tunnels, press any key in the terminal context where you started the script. #!/bin/pwsh Set-PSDebug -Trace 0 # Echo every command (0 to disable, 1 to enable, 2 to enable verbose) Set-StrictMode -Version 3.0 $ErrorActionPreference = \"Stop\" $services = @{ \"foundationallm-agent-factory-api\" = 5000 \"foundationallm-gatekeeper-api\" = 5001 \"foundationallm-agent-hub-api\" = 5002 \"foundationallm-core-api\" = 5003 \"foundationallm-data-source-hub-api\" = 5004 \"foundationallm-gatekeeper-integration-api\" = 5005 \"foundationallm-langchain-api\" = 5006 \"foundationallm-management-api\" = 5007 \"foundationallm-prompt-hub-api\" = 5008 \"foundationallm-semantic-kernel-api\" = 5009 \"foundationallm-vectorization-api\" = 5010 } $jobIds = @() try { foreach ($servicePortPairing in $services.GetEnumerator()) { Write-Host \"Starting Kubectl Tunnel for $($servicePortPairing.key)\" $job = Start-Job -ScriptBlock ([scriptblock]::Create(\"kubectl port-forward service/$($servicePortPairing.key) $($servicePortPairing.value):80\")) Write-Host \"Job: $($job.Command)\" $jobIds += $job.Id } Write-Host \"Press any key to kill the Kubernetes tunnels...\" $Host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\") } catch {} finally { foreach ($jobId in $jobIds) { Write-Host \"Killing $jobId\" Stop-Job -Id $jobId } } Note You will need to rerun the script if you restart any nodes while the script is running. Verification Run the following script to ensure that all APIs are accessible through kubectl forwarding. #!/bin/pwsh Set-PSDebug -Trace 0 # Echo every command (0 to disable, 1 to enable, 2 to enable verbose) Set-StrictMode -Version 3.0 $ErrorActionPreference = \"Stop\" foreach ($servicePort in 5000..5010) { Write-Host \"Testing Port #$servicePort...\" curl \"http://localhost:$servicePort/status\" }"
  },
  "development/contributing/git-workflow.html": {
    "href": "development/contributing/git-workflow.html",
    "title": "Git workflow | FoundationaLLM",
    "keywords": "Git workflow The general process for working with FoundationaLLM is: Fork on GitHub Clone your fork locally Configure the upstream repo (git remote add upstream git://github.com/solliancenet/foundationallm) Switch to the default branch (e.g. main, using git checkout main) Create a local branch from that (git checkout -b myBranch) Work on your feature Rebase if required (see below) Push the branch up to GitHub (git push origin myBranch) Send a Pull Request on GitHub - the PR should target (have as base branch) the default branch (e.g. main). You should never work on a clone of the default branch, and you should never send a pull request from it - always from a branch. The reasons for this are detailed below. Learning Git Workflow For an introduction to Git, check out GitHub Guides. For more information about GitHub Flow, please head over to the Understanding the GitHub Flow illustrated guide, both by the awesome people at GitHub. Handling Updates from the default branch While you're working away in your branch, it's quite possible that the upstream target branch may be updated. If this happens you should: Stash any uncommitted changes you need to git checkout vX_Y_Z git pull upstream main git rebase main myBranch git push origin main - (optional) this this makes sure your remote main branch is up to date This ensures that your history is \"clean\" i.e. you have one branch off from main followed by your changes in a straight line. Failing to do this ends up with several \"messy\" merges in your history, which we don't want. This is the reason why you should always work in a branch and you should never be working in, or sending pull requests from, main. Rebasing public commits is very problematic, which is why we require you to rebase any updates from upstream/main. If you're working on a long running feature then you may want to do this quite often, rather than run the risk of potential merge issues further down the line. Sending a Pull Request While working on your feature you may well create several branches, which is fine, but before you send a pull request you should ensure that you have rebased back to a single \"Feature branch\" - we care about your commits, and we care about your feature branch; but we don't care about how many or which branches you created while you were working on it :) When you're ready to go you should confirm that you are up to date and rebased with upstream (see \"Handling Updates from the default branch\" above), and then: git push origin myBranch Send a descriptive Pull Request on GitHub - making sure you have selected the correct branch in the GitHub UI!"
  },
  "development/contributing/index.html": {
    "href": "development/contributing/index.html",
    "title": "Contributing to FoundationaLLM | FoundationaLLM",
    "keywords": "Contributing to FoundationaLLM We are happy to accept contributions to the FoundationaLLM project in the form of feedback, bug reports, and pull requests. If you want to make code contributions, please be sure to branch from the head of the default branch. For GitHub workflow guidance, please review the Git workflow document. Style guide Please abide by the style guide when contributing to the project."
  },
  "development/contributing/repro.html": {
    "href": "development/contributing/repro.html",
    "title": "Bug report reproduction guide | FoundationaLLM",
    "keywords": "Bug report reproduction guide When customers plan to report an issue with FoundationaLLM, we will most likely ask them to provide a so called minimal reproduction project (repro). This serves two purposes: It helps issue reporters validate their assumptions by trying to recreate the behavior in a new project. It helps eliminate ambiguity and speeds up investigations. We may also be able to provide workarounds in certain scenarios. This document describes what a minimal repro project is, and why it's important to us. What is a minimal repro project? A repro (or a reproduction) is a project, which can be used to reproduce the reported behavior with minimal effort from a product team, which has the minimum code required to demonstrate the concerning behavior. Please provide a project hosted in a public GitHub repository as described below: Create a new project with the simplest structure you can get by with to reproduce your issue. Add the minimum amount of code necessary to reproduce the behavior you are reporting on this newly created project. Make sure you do not add any dependencies that are irrelevant to the behavior. Include sample data, if relevant. Host the project as a public repository on GitHub. Make sure you haven't included any binaries in your project (this is usually about the bin and obj folders in your project) Note: that this step is important and we won't be able to open zip attachments in your issues. Zip files are potential attack vectors that we try to avoid at all cost. Important considerations Never include any sensitive information in your reproduction project. Never include any code that is not intended to be public in a repro. Do not reference any external services or data sources."
  },
  "development/contributing/style-guide.html": {
    "href": "development/contributing/style-guide.html",
    "title": "Style guide | FoundationaLLM",
    "keywords": "Style guide FoundationaLLM is a growing project with many contributors. To ensure that the code is consistent and easy to read, we have created this style guide. Please follow these guidelines when contributing to the project. General The solution contains different languages and frameworks. The following guidelines apply to all of them: Simple, clean, and readable is always better Dependency Injection is the name of the game Avoid passing data structures around, always use strongly-typed classes Use the latest language features Use well-established design patterns Always think about the bigger picture (how will my choice potentially impact everyone else?) When introducing a new pattern/approach in your code, share with the rest of the team Measure 10 times, cut once (i.e. design before you code) Primarily, we strive to use a uniform approach across all the modules of the platform. Commenting Use comments to explain why you are doing something, not what you are doing. Apply comments to all public classes, methods, and properties. Comments should be written in complete sentences with proper casing and punctuation. Add a space after the comment delimiter (//, #, etc.). Do: // If the Azure Cognitive Search index does not exists, create the index. Don't: //Create index C# Follow the C# identifier naming rules and conventions. Follow the standard C# coding conventions. Python Abide by the Python naming and coding rules (PEP (Python Enhancement Proposal) 8)."
  },
  "development/development-approach.html": {
    "href": "development/development-approach.html",
    "title": "FoundationaLLM DevOps rules and guidelines | FoundationaLLM",
    "keywords": "FoundationaLLM DevOps rules and guidelines FoundationaLLM adheres to the trunk-based development philosophy. If you are a member of the FoundationaLLM core development team or you want to contribute to the code, we strongly encourage you to go through the following materials: Microsoft's Azure DevOps team branching strategy How Microsoft develops modern software with DevOps DORA's research program (Google) The state of DevOps - 2021 edition (DORA, Google) Trunk-based development (Google Cloud Architecture Center) Trunk-based development e-book by Paul Hammant Our move to trunk-based development is driven by the vision to build and deliver the FoundationaLLM solution using a solid DevOps process centered on a Git-centric release flow. How? The core rules of development: When a developer starts working on a feature or a bug fix, a new branch gets created from main. When the work ends, a PR is created to bring the work back into main. We encourage a granular approach, where each individual feature or bug fix has it's own branch. Work should be moved back into the trunk via a PR as soon as possible. NOTE: Committing directly into main is not allowed. All changes are merged via PRs which allows for consistent review, validation, and testing processes. When a sprint ends, a release branch is created. The release branch will be used to deploy the changes to production. Work on main ca resume right after the release branch was created. The release branch will live until the next release branch is created. In the case of critical bug fixes, the process will follow the same approach as described above at step 1. Once the PR is approved and the code merged to main, it will also be cherry-picked into the current release branch. From there, it will be deployed into production. NOTE: This approach ensures that no matter how critical a bug fix is and no matter how much pressure there is to fix an issue in production, the code for the fix always ends up in main. Why? Analysis of DevOps Research and Assessment (DORA) data from 2016, 2017 shows that teams achieve higher levels of software delivery and operational performance (delivery speed, stability, and availability) if they follow these practices: Have three or fewer active branches in the application's code repository. Merge branches to trunk at least once a day. Don't have code freezes and don't have integration phases. Common pitfalls Some common obstacles to full adoption of trunk-based development include the following: An overly heavy code-review process. Many organizations have a heavyweight code review process that requires multiple approvals before changes can be merged into trunk. When code review is laborious and takes hours or days, developers avoid working in small batches and instead batch up many changes. This in turn leads to a downward spiral where reviewers procrastinate with large code reviews due to their complexity. Consequently, merge requests often languish because developers avoid them. Because it is hard to reason about the impact of large changes on a system through inspection, defects are likely to escape the attention of reviewers, and the benefits of trunk-based development are diminished. Performing code reviews asynchronously. If your team practices pair programming, then the code has already been reviewed by a second person. If further reviews are required, they should be performed synchronously: when the developer is ready to commit the code, they should ask somebody else on the team to review the code right then. They should not ask for asynchronous review—for example, by submitting a request into a tool and then starting on a new task while waiting for the review. The longer a merge is delayed, the more likely it is to create merge conflicts and associated issues. Implementing synchronous reviews requires the agreement of the team to prioritize reviewing each others' code over other work. Not running automated tests before committing code. In order to ensure trunk is kept in a working state, it's essential that tests are run against code changes before commit. This can be done on developer workstations, and many tools also provide a facility to run tests remotely against local changes and then commit automatically when they pass. When developers know that they can get their code into trunk without a great deal of ceremony, the result is small code changes that are easy to understand, review, test, and which can be moved into production faster. Actions to take Develop in small batches (even smaller than we are used to) Speed up code review so that commits do not need to wait long times to get into main. Have comprehensive, automated testing Have a fast build Metrics Metric Goal Number of active branches (not including the ones developers create for their tasks) Three or less Code freeze periods (merge, stabilization, etc.) No code freeze Frequency of merging branches/forks to trunk At least once per day Time spent in code review (includes time waiting for code review) Average code review time per PR less than 30 min We strongly encourage you to go through the following: A synthetic description of the journey of our goals - sourced from https://devops.paulhammant.com/trunk-correlated-practices-chart/ A tool to calculate the DevOps performance our our team - sourced from https://paulhammant.com/2021/10/08/software-project-guidelines/ Feature flags To be used extensively to control the stability of the releases in production."
  },
  "development/development-local.html": {
    "href": "development/development-local.html",
    "title": "Configure local development environment | FoundationaLLM",
    "keywords": "Configure local development environment Prerequisites Environment variables: Create an environment variable for the Application Configuration Service connection string named FoundationaLLM:AppConfig:ConnectionString. This is used by the .NET projects. Create an environment variable for the Application Configuration Service URI named foundationallm-app-configuration-uri. This is used by the Python projects. Create an environment variable named FOUNDATIONALLM_VERSION and set it to the version of the FoundationaLLM deployment you are working with. This is used by the .NET projects to validate your environment configuration based on the version. Tip You can view the FoundationaLLM release versions by viewing the branches in the FoundationaLLM repository. The format is release/n.n.n, where n.n.n is the version number. The FOUNDATIONALLM_VERSION environment variable should be set to the version number without the release/ prefix (example: 0.4.0). Follow the instructions in Configure access control for services to grant your user account access to the Azure App Configuration and Key Vault services. You may need an Azure admin to perform these steps on your behalf. Backend (APIs and worker services): Visual Studio 2022 17.8 or later (required for passthrough Visual Studio authentication for the Docker container and .NET 8 support) with the Python workload installed .NET 8 SDK or greater Python 3.11 (learn more about Python environments in Visual Studio) Docker Desktop (with WSL for Windows machines) (Mac install or Windows install) Azure CLI (v2.51.0 or greater) Microsoft Azure PowerShell Helm 3.11.1 or greater Frontend (Vue.js (Nuxt) web app) Visual Studio Code (recommended for development) Node.js v18.0.0 or newer NPM v10.2.3 or newer Recommended way to install the latest version of NPM and node.js on Windows: Install NVM from https://github.com/coreybutler/nvm-windows Run nvm install latest Run nvm list (to see the versions of NPM/node.js available) Run nvm use latest (to use the latest available version) UI User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/ui/UserPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM:AppConfig:ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Management Portal The ManagementPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/ui/ManagementPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM:AppConfig:ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Management API service (https://localhost:63267). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the MANAGEMENT API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. .NET projects Core API Core API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"GatekeeperAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7180/ }, , \"AgentFactoryAPI\": { \"APIUrl\": \"<...>\" // Default local value: \"https://localhost:7324/\" } } } } CoreWorker The CoreWorker project is a .NET worker service that acts as the Cosmos DB change feed processor. When you debug it locally, it runs within a Docker container. Because of this, it is important to make sure the App Configuration service connection string is set in the appsettings.Development.json file. This is because the Docker container will not have access to the environment variable. CoreWorker app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"<...>\" } } } Gatekeeper API Gatekeeper API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"AgentFactoryAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7324/ }, \"GatekeeperIntegrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8042/ } } } } Agent Factory API Agent Factory API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"LangChainAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8765/ }, \"SemanticKernelAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7062/ }, \"AgentHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8742/ }, \"PromptHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8642/ }, \"DataSourceHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8842/ } } } } Semantic Kernel API Semantic Kernel API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"CognitiveSearch\": { \"IndexName\": \"vector-index\", \"MaxVectorSearchResults\": 10 }, \"OpenAI\": { \"CompletionsDeployment\": \"completions\", \"CompletionsDeploymentMaxTokens\": 8096, \"EmbeddingsDeployment\": \"embeddings\", \"EmbeddingsDeploymentMaxTokens\": 8191, \"ChatCompletionPromptName\": \"RetailAssistant.Default\", \"ShortSummaryPromptName\": \"Summarizer.TwoWords\", \"PromptOptimization\": { \"CompletionsMinTokens\": 50, \"CompletionsMaxTokens\": 300, \"SystemMaxTokens\": 1500, \"MemoryMinTokens\": 1500, \"MemoryMaxTokens\": 3000, \"MessagesMinTokens\": 100, \"MessagesMaxTokens\": 3000 } }, \"DurableSystemPrompt\": { \"BlobStorageContainer\": \"prompts\" }, \"CognitiveSearchMemorySource\": { \"IndexName\": \"vector-index\", \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"ACSMemorySourceConfig.json\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"BlobMemorySourceConfig.json\" }, \"SemanticKernelOrchestration\": { \"APIKeySecretName\": \"foundationallm-semantickernel-api-key\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"CognitiveSearch\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\" }, \"OpenAI\": { \"Endpoint\": \"https://<...>-openai.openai.azure.com/\", \"Key\": \"<...>\" }, \"DurableSystemPrompt\": { \"BlobStorageConnection\": \"<...>\" }, \"CognitiveSearchMemorySource\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\", \"ConfigBlobStorageConnection\": \"<...>\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageConnection\": \"<...>\" } } } Python projects Python Environment Variables Create a local environment variable named foundationallm-app-configuration-uri. The value should be the URI of the Azure App Configuration service and not the connection string. We use role-based access controls (RBAC) to access the Azure App Configuration service, so the connection string is not required. Name Value Description foundationallm-app-configuration-uri REDACTED Azure App Configuration URI Running the solution locally Configure and run the backend components The backend components consist of the .NET projects and the Python projects. The .NET projects are all ASP.NET Core Web API projects. The Python projects are all FastAPI projects. Open the solution in Visual Studio 2022 17.6 or later. The solution file is located at /src/FoundationaLLM.sln. Reference the API sections above to configure the app settings for each project. This primarily involves just creating the appsettings.development.json file for each of the .NET (located under the dotnet solution folder) API projects and adding the documented values within. For local development, use the localhost URLs for each of the API projects. Note The appsettings.development.json files are excluded from source control. This is to prevent sensitive information from being committed to source control. You will need to create these files locally. Expand the python solution folder. Expand the AgentHubAPI project, then expand the Python Environments folder underneath it. You will likely see a warning icon next to an environment named env. This is because the Python environment has not been created yet. Right-click the Python Environments folder and select Add Environment.... Ensure the Name field is set to env and the Version field is set to Python 3.11 (or your latest version). Also make sure the Install packages from file field is set to the requirements.txt file for the project. This will install the required Python packages after creating the environment. Click Create. You should now see the env environment listed under the Python Environments folder. The warning icon should be gone. Complete steps 4-7 for the DataSourceHubAPI, LangChainAPI, PromptHubAPI, and PythonSDK projects. You may optionally complete these steps for the Python test projects as well. Right-click the Solution in Visual Studio, then select Configure Startup Projects.... Select the Multiple startup projects option, then set the Action for the following projects to Start. Click OK. AgentFactoryAPI AgentHubAPI CoreAPI DataSourceHubAPI GatekeeperAPI GatekeeperIntegrationAPI LangChainAPI PromptHubAPI SemanticKernelAPI ManagementAPI VectorizationAPI Press F5 to start debugging the solution. This will start all of the .NET projects and the Python projects. The Vue.js (Nuxt) web app will not be started by default. To start it, follow the steps below. Configure and run the frontend components The frontend components consist of the Vue.js (Nuxt) web apps. Run the User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps Open the /src/ui/UserPortal folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3000. Run the Management Portal The ManagementPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps Open the /src/ui/Management folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63267). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the MANAGEMENT API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3001."
  },
  "development/index.html": {
    "href": "development/index.html",
    "title": "Development | FoundationaLLM",
    "keywords": "Development Development approach Are you interested in contributing to the code? We would love your help! However, we do have some guidelines that we need contributors to follow so that we can keep things running smoothly. Please review the FoundationaLLM DevOps rules and guidelines document. Set up your development environment To successfully build and run the solution, you need to set up your development environment. Follow the instructions in the Configure local development environment document."
  },
  "documentation-generation.html": {
    "href": "documentation-generation.html",
    "title": "Documentation generation | FoundationaLLM",
    "keywords": "Documentation generation There are various layers of documentation for this project. This document describes the different layers and how they are generated. Documentation layers The following layers of documentation are available for this project: Markdown files - These are the source files for FoundationaLLM documentation. They are located in the docs folder in the main branch of the repository. API documentation - This is the documentation for the FoundationaLLM API. Language-specific API documentation is generated using tools (more on tools below). GitHub Pages - This is the primary documentation for the project. It is generated from the markdown files in the docs folder. It also includes the API documentation. Documentation tools We use a number of tools to generate the documentation for this project. The following table lists the tools and their purpose: Tool Purpose DocFX Generates the .NET API documentation for the FoundationaLLM API. It also generates the docs website, which includes custom documentation (markdown files) and the combined .NET and Python API documentation. Sphinx Generates the Python API documentation for the FoundationaLLM API. Sphinx DocFX YAML Generates the DocFX YAML files for the Python API documentation. This allows the DocFx build process to incorporate the Python documentation as well. GitHub Pages Hosts the documentation website. It is configured to use the gh-pages branch of the repository as the source for the website. DocFX Execute the following command from the repository root to generate the .NET API documentation: docfx docs/docfx.json"
  },
  "index.html": {
    "href": "index.html",
    "title": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots | FoundationaLLM",
    "keywords": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots FoundationaLLM simplifies and streamlines building knowledge management (e.g., question/answer agents) and analytic (e.g., self-service business intelligence) copilots over the data sources present across your enterprise. FoundationaLLM deploys a secure, comprehensive and highly configurable copilot platform to your Azure cloud environment: Simplifies integration with enterprise data sources used by agent for in-context learning (e.g., enabling RAG, CoT, ReAct and inner monologue patterns). Provides defense in depth with fine-grain security controls over data used by agent and pre/post completion filters that guard against attack. Hardened solution attacked by an LLM red team from inception. Scalable solution load balances across multiple LLM endpoints. Extensible to new data sources, new LLM orchestrators and LLMs. What do WE mean by \"copilot\" It's a rapidly evolving AI world out there, so let's level set on what we mean when we say copilot as this is concept core to FoundationaLLM. At its most basic, a copilot uses enterprise supplied knowledge and generative AI models to author text, write code or render images, often by reasoning over human supplied prompts. Across these modalities, the AI is used to assist a human directly with a specific task. That's what makes it a copilot. This basic capability emerges in copilots which power these scenarios: Knowledge Management: Help users quickly find the information they seek and deliver at the right level and in the right format. Examples include summarization, rephrasing or retargeting to address a persona (e.g., explain it like I'm five), sentiment analysis and recommendations. Analytics: Help users quickly get to the data driven insights they seek. Examples include recommendations, predictions, anomaly detection, statistical analysis and data querying and reporting. Why is FoundationaLLM Needed? Simply put we saw lot of folks reinventing the wheel just to get a customized copilot that was grounded and bases its responses in their own data as opposed to the trained parametric knowledge of the model. Many of the solutions we saw made for great demos, but were effectively toys wrapping calls to OpenAI endpoints- they were not something intended or ready to take into production. We built FoundationaLLM to provide a continous journey, one that was quick to get started with so folks could experiment quickly with LLM's but not fall off a cliff after that with a solution that would be insecure, unlicensed, inflexible and not fully featured enough to grow from the prototype into a production solution without having to start all over. The core problems to deliver enterprise copilots are: Enterprise grade copilots are complex and have lots of moving parts (not to mention infrastructure). The industry has a skills gap when it comes to filling the roles needed to deliver these complex copilot solutions. The top AI risks (inaccuracy, cybersecurity, compliance, explainability, privacy) are not being mitigated. Delivery of a copilot solution is time consuming, expensive and frustrating. Getting Started FoundationalLLM provides a simple command line driven approach to getting your first deployment up and running. Basically, it's two commands. After that, you can customize the solution, run it locally on your machine and update the deployment with your customizations. Follow the Starter Deployment instructions to get FoundationaLLM deployed in your Azure subscription. If you want to run the solution locally, follow the Local Development instructions. You can browse the documentation using the sidebar or visit the API section for the reference documentation."
  },
  "operations/backups.html": {
    "href": "operations/backups.html",
    "title": "FoundationaLLM Backups & data resiliency | FoundationaLLM",
    "keywords": "FoundationaLLM Backups & data resiliency Before implementing any backup strategy, it's important to carefully plan and consider factors such as recovery time objectives (RTO), recovery point objectives (RPO), and compliance requirements. Choose the method or combination of methods that best align with your specific backup and recovery needs. CosmosDB Ensuring regular backups for Azure Cosmos DB is crucial to protect data such as private agents, user profiles, and chat history. Backups play a vital role in safeguarding your data against accidental deletions, data corruption, or other unforeseen issues. Here are some key points to consider when planning your Cosmos DB backup strategy: Backup and Restore: Automated Backups: Azure Cosmos DB includes automated backups that are taken at regular intervals. These backups are used to provide point-in-time restore capabilities. Retention Period: Backups are retained for a specific retention period, allowing you to restore your data to a previous state within that time frame. The options for retention period are 7 or 30 days. The Standard deployment configures 30 days retention. How to Configure Backup Policy: Backup policies can be configured at the Cosmos DB account level, specifying the frequency and duration of backups. Restore from Backup: You can initiate a point-in-time restore using the Azure Portal, Azure PowerShell, or Azure SDKs. Data Resiliency: Global Distribution: Distributing your Cosmos DB data globally across multiple regions ensures that your data is available even in the face of regional outages. This enhances data resiliency and availability. The Standard Deployment does not currently enable global data distribution. Data is replicated within a single region by the Cosmos DB service. Consistency Levels: Azure Cosmos DB offers various consistency levels, allowing you to balance between consistency and availability based on your application's requirements. The Standard Deployment uses Session consistency by default. Manual Backups and Data Migration: Export and Import: You can manually export your Cosmos DB data to Azure Storage or another Cosmos DB account, providing an additional layer of backup and migration capability. The Standard Deployment does not configure this capability by default. Storage Accounts Backing up the storage account where your prompts, agents, and data sources are defined is crucial to ensure the integrity and availability of your conversational data. Here are steps you can take to back up an Azure Storage account: Azure Storage Account Replication: Azure Storage offers built-in redundancy options like Locally Redundant Storage (LRS), Zone-Redundant Storage (ZRS), Geo-Redundant Storage (GRS), and Read-Access Geo-Redundant Storage (RA-GRS). These options replicate your data across different locations for high availability and durability. By default, LRS is enabled for all new storage accounts in the Standard Deployment. You can change the replication option for an existing storage account by navigating to the Replication tab in the Azure portal. Azure Backup: Azure Backup service allows you to create backups of your virtual machines, files, and databases, including Azure Storage accounts. You can configure backup policies and retention rules to meet your data protection requirements. Configuring Azure Backup is not currently enabled in the Standard Deployment, but you can use the Azure portal to manually configure back up for your storage account. Azure Blob Storage Versioning: Azure Blob Storage versioning is a feature that allows you to enable versioning on your storage account. When versioning is enabled, any update or deletion of a blob results in the creation of a new version of that blob. This helps you maintain a historical record of changes made to your data. This feature is enabled in the Standard Deployment. Azure Blob Storage Soft Delete: Soft delete is a feature in Azure Blob Storage that provides an extra layer of protection against accidental data deletion. When soft delete is enabled, deleted blobs are retained for a specified retention period before being permanently deleted. In the Standard Deployment, soft delete is enabled for 30 days for blobs and containers. Key Vault Azure Key Vault provides several features to help you protect and manage your keys and secrets effectively. Purge Protection: Purge protection is a feature in Azure Key Vault that helps prevent the permanent deletion of a key vault. When purge protection is enabled, the key vault cannot be permanently deleted immediately after deletion. Instead, there is a retention period during which the key vault is retained, and it can be recovered. Key Vaults in the Standard Deployment have purge protection enabled by default and deleted Key Vaults are retained for 7 days. Soft Delete: Soft delete is a feature that protects keys, secrets, and certificates in Azure Key Vault from immediate and irreversible deletion. When soft delete is enabled, deleted items are retained for a specified retention period before they are permanently deleted. Soft delete is enabled by default for all new key vaults in the Standard Deployment. Deleted keys, secrets, and certificates are retained for 7 days. Secret Versioning: Secret versioning is a feature that allows you to store multiple versions of a secret within a key vault. Each time you create or update a secret, a new version is generated. Secret versions help you maintain a history of changes and facilitate rollbacks if needed. This feature is enabled on all Key Vaults in Azure. Backups: Azure Key Vault provides a backup and restore capability, allowing you to create backups of your key vault's keys, secrets, and certificates. These backups can be used for data recovery and protection against accidental data loss. There is no way to backup the entire Key Vault or to schedule regular backups. App Config Azure App Configuration provides features related to backup, versioning, and data resiliency to help you effectively manage and deploy application configuration settings. Backup in Azure App Configuration: Azure App Configuration allows you to back up your configuration settings, including feature flags, connection strings, and other key-value pairs using the Import/Export feature. Backups can be sent to another App Configuration instance, an App Service, or a local file. Versioning in Azure App Configuration: Azure App Configuration automatically version-controls your configuration settings. Each change to a key-value pair creates a new version. Versioning helps track changes to configuration settings over time. You can access and roll back to previous versions of a key-value pair. Data Resiliency in Azure App Configuration: Azure App Configuration is designed with built-in redundancy across multiple regions to ensure high availability and data resiliency. App Configuration supports multi-region replication, allowing you to replicate your configuration settings to different regions for additional resilience. This feature is not currently enabled in the Standard Deployment."
  },
  "operations/index.html": {
    "href": "operations/index.html",
    "title": "Standard platform administration documentation | FoundationaLLM",
    "keywords": "Standard platform administration documentation Environment Setup: Initial environment setup (Starter Deployment) Initial environment setup (Standard Deployment) Configuration settings for different components: App Configuration Settings Configuration for deployment Configure Core API Settings Configure Management API Settings User Management: Creating, modifying, and deleting user accounts: Authentication setup Assigning roles and permissions: Access control for azure services FoundationaLLM Role-Based Access Control System Maintenance: FoundationaLLM Backups & Data Resiliency Security Measures: Platform Security Features & Best Practices Logging and Auditing: Accessing System Logs & Audit Trails Troubleshooting: Troubleshooting & Issue Reporting Guide Platform Features: Use cases and best practices for utilizing specific features Update Process: Release Notes: Guidance for creating release notes Update Procedure: Updating container versions in the Standard Deployment Vulnerabilities: Vulnerabilities: Identification, Communication, and Remediation"
  },
  "operations/logs.html": {
    "href": "operations/logs.html",
    "title": "Accessing system logs & audit trails | FoundationaLLM",
    "keywords": "Accessing system logs & audit trails Maintaining visibility into system activities is paramount for ensuring security, troubleshooting issues, and monitoring overall system health. Our system generates various logs that provide valuable insights into events, errors, and user activities, and these logs are centrally stored in an Azure Log Analytics Workspace. Accessing these logs is crucial for effective system management. Below, we outline the procedures for accessing logs within our system. 1. Log location Our system logs are stored in the Azure Log Analytics Workspace. This centralized location within Azure ensures ease of access and management. After deployment, customers can redirect these logs to an existing Log Analytics Workspace within their Azure environment, if desired. 2. Log types Different types of logs are generated, including: Security Logs: Capturing security-related events and potential threats. System Logs: Detailing system-level activities and performance metrics. Application Logs: Recording application-specific events and errors. 3. Access permissions Access to logs is restricted to authorized personnel with the appropriate permissions using Azure RBAC. Ensure that only individuals with a legitimate need for log access have the required Azure Roles. 4. Access methods Azure Portal: Navigate to the Azure Portal and access the Log Analytics Workspace for log retrieval. Azure Command-Line Interface (CLI): Use Azure CLI commands for programmatic access to logs. 5. Log retention For long term retention, export logs to a storage account or archive them to a data lake. This is not configured by default but can be added by customers after the initial deployment. The default retention period for logs is 30 days. This can be changed by customers after the initial deployment. 6. Monitoring Tools Utilize Azure Monitor and Log Analytics tools to receive real-time alerts for critical events. Integration with Azure monitoring solutions enhances proactive incident response and system stability. Additional tools like Azure Sentinel can be used for advanced security monitoring and threat detection but are not configured by default. 8. Audit Trails All diagnostics are enabled by default in the standard deployment, including audit trails for Key Vault and similar resources. Audit trails are stored in the Azure Log Analytics Workspace. Regularly review audit trails to ensure the integrity and security of log data."
  },
  "operations/network-security-groups.html": {
    "href": "operations/network-security-groups.html",
    "title": "Network Security Group Configurations | FoundationaLLM",
    "keywords": "Network Security Group Configurations FoundationaLLM uses Azure Virtual Networks for network segmentation. The Standard Deployment uses Network Security Groups (NSGs) to control inbound and outbound traffic. The following table lists the NSGs used in the Standard Deployment and the ports that are open by default. NSG Rules Application Gateway Rule Name Access DestinationAddressPrefix DestinationPortRange Direction Priority Protocol ProvisioningState SourceAddressPrefix SourcePortRange Notes allow-internet-http-inbound Allow VirtualNetwork 80 Inbound 128 Tcp Succeeded Internet * Customers may restrict inbound connectivity as desired. allow-internet-https-inbound Allow VirtualNetwork 443 Inbound 132 Tcp Succeeded Internet * Customers may restrict inbound connectivity as desired. allow-gatewaymanager-inbound Allow * 65200-65535 Inbound 148 Tcp Succeeded GatewayManager * This rule is required by Azure and cannot be changed.1 allow-loadbalancer-inbound Allow * * Inbound 164 * Succeeded AzureLoadBalancer * This rule is required by Azure and cannot be changed.1 deny-all-inbound Deny * * Inbound 4096 * Succeeded * * Customers may modify this rule if needed (not reccomended) 1: For further information regarding required NSG rules for Application Gateway, please see this article."
  },
  "operations/release-notes.html": {
    "href": "operations/release-notes.html",
    "title": "Guidance for creating release notes | FoundationaLLM",
    "keywords": "Guidance for creating release notes Creating release notes is an essential part of the software development and release process. Release notes provide valuable information to end-users, stakeholders, and other team members about the changes, enhancements, and fixes introduced in a software release. Here's a structured process for creating release notes: 1. Define the release scope and content Understand the changes included in the release. Identify new features, enhancements, bug fixes, and any other significant changes. 2. Use a version control system Review the commit history and pull requests associated with the release. Identify the issues or features implemented during the release period. 3. Categorize changes Group changes into categories for clarity. Common categories include: New Features Enhancements Bug Fixes Deprecations Security Updates 4. Collect information Gather details for each change, including: Brief description of the change. Associated issue or feature request numbers. Names of contributors or teams involved. 5. Prioritize information Arrange the changes in order of importance or relevance to users. Highlight major features or critical bug fixes at the top. 6. Write Release Notes Craft concise and clear release notes. Use a consistent format and style. Include a header with the release version, date, and any important announcements. 7. Provide context Offer context for each change. Explain why a feature was added or why a bug fix was necessary. Include information that helps users understand the impact of the changes. 8. Include links Add links to relevant documentation, issue trackers, or pull requests for more details. This helps users and developers find additional information if needed. 9. Test Release Notes Review the release notes to ensure accuracy and completeness. Verify that all changes are appropriately documented. 10. Review with stakeholders Share the draft release notes with relevant stakeholders, such as product managers, developers, and quality assurance teams. Incorporate feedback and make necessary adjustments. 11. Publish release notes We will publish release notes as part of creating a new release in github. If applicable, notify users through email, social media, or other communication channels. 12. Archive previous release notes Maintain a historical record by archiving previous release notes. Relase notes for previous releases will remain visible with those releases in github. This helps users track changes over time and understand the evolution of the software. 13. Update documentation Ensure that other documentation, such as user guides or API documentation, is updated to reflect the changes introduced in the release. 14. Automate if possible Consider automating parts of the release notes generation process, especially if your project follows a structured development workflow with clear commit messages and pull request descriptions. 15. Seek user feedback Encourage users to provide feedback on the release notes. This can help you improve the clarity and usefulness of future release notes. By following this process, you can create comprehensive and user-friendly release notes that effectively communicate the changes made in each software release."
  },
  "operations/security.html": {
    "href": "operations/security.html",
    "title": "Platform security features & best practices | FoundationaLLM",
    "keywords": "Platform security features & best practices Maintaining the security of the Azure platform is crucial for protecting sensitive data and ensuring the integrity of your infrastructure. Identity and Access Management (IAM) Ensure that only authorized users have access to your Azure resources. FoundationaLLM uses Azure Entra ID for centralized identity management. Enable multi-factor authentication (MFA) for all user accounts. Network Security The standard deployment: Uses Azure Virtual Networks for network segmentation. Implements Network Security Groups (NSGs) to control inbound and outbound traffic. Network Security Rule Details Data Encryption Wherever possible the Standard Deployment uses encryption at rest with system-managed keys. Customer managed keys can be enabled at your discretion. Threat Detection and Monitoring Wherever supported the Standard Deployment enables Azure Diagnostics on the resources it deploys. These logs are sent to a Log Analytics workspace. as part of the standard resources. Customers are encouraged to enable Azure Defender for additional threat detection and monitoring. Customers may use Azure Sentinel for advanced security information and event management (SIEM). Customers already using Azure Sentinel may redirect the logs from the Standard Deployment to their existing Azure Sentinel instance. Patch Management Regularly check the FoundationaLLM github repository for new image releases and update your deployment accordingly."
  },
  "operations/troubleshooting.html": {
    "href": "operations/troubleshooting.html",
    "title": "Troubleshooting & issue reporting guide | FoundationaLLM",
    "keywords": "Troubleshooting & issue reporting guide There are three common issues that may arise when using the FoundationaLLM platform. This guide provides a structured approach to troubleshooting these issues. Troubleshooting Azure App Registration misconfiguration 1. Symptoms: Users unable to authenticate or access Azure services using the app. Error messages related to authentication failures. 2. Troubleshooting Steps: a. Verify App Registration Configuration: Check the Azure Portal for the App Registration settings. Ensure the correct redirect URIs, client secrets, and authentication settings are configured by reviewing (the setup guide)[../deployment/authentication/core-authentication-setup-entra.md#update-app-configuration-settings]. b. Error Logs Examination: Review logs for any authentication-related errors. Check for error details and correlate them with misconfigured settings. Troubleshooting missing Azure App Registration details in Azure App Configuration 1. Symptoms: Application unable to retrieve configuration settings. Errors related to missing or invalid configuration values. Login problems similar to those described in the previous section. 2. Troubleshooting Steps: a. Check Azure App Configuration: Verify that the App Registration details are correctly stored in Azure App Configuration using the setup guide. Ensure that keys, secrets, and connection strings are accurate. c. Azure App Configuration Logs: Inspect Azure App Configuration logs for any errors related to configuration retrieval. Look for issues such as key not found or invalid values. d. Azure Key Vault Integration: FoundationaLLM Azure Key Vault for sensitive configuration, verify the correct values are in Key Vault using [the setup guide][1]. Ensure the Azure App Configuration managed identity has the necessary permissions to access Key Vault secrets. Troubleshooting container crashing 1. Symptoms: Containers restarting frequently or failing to start. Application unavailability due to container issues. 2. Troubleshooting Steps: a. Container Logs Examination: Access container logs in Log Analytics to identify error messages or issues during startup. Look for any crashes, exceptions, or resource constraints. b. Resource Utilization: Check resource utilization metrics (CPU, memory) for the container. Ensure that the container has adequate resources allocated. c. Dependency Check: Examine dependencies within the containerized application. Verify that required services or components are accessible. d. Container Health Checks: Identify and address health check failures impacting container stability. e. Container Image Update: Review the container image version, update to the latest version to recieve bug fixes and new features. Additional support and issue reporting If you encounter an issue that is not addressed by the troubleshooting steps outlined in this document, we encourage you to open a GitHub issue. This ensures that our team can provide tailored assistance and continuously improve our troubleshooting resources. Steps to open a GitHub issue Navigate to our GitHub Repository: Visit our GitHub repository at https://github.com/solliancenet/foundationallm. Check Existing Issues: Before creating a new issue, check the existing issues to see if the problem has already been reported or discussed. Create a New Issue: Click on the \"Issues\" tab in the repository. Select \"New Issue\" to open a new issue template. Provide Detailed Information: Clearly describe the issue, including symptoms, error messages, and steps to reproduce. Attach relevant logs or screenshots that can assist in understanding the problem. Tag the Issue Appropriately: Tag the issue with relevant labels, such as \"bug,\" \"enhancement,\" or \"question,\" to categorize it correctly. Monitor for Updates: After creating the issue, monitor it for updates and respond promptly to any requests for additional information. By opening a GitHub issue at https://github.com/solliancenet/foundationallm, you contribute to our collaborative effort in maintaining a robust and well-supported system. Our team values your feedback, and addressing issues through GitHub allows for a transparent and efficient resolution process. Thank you for your collaboration, and we look forward to assisting you with any challenges you may encounter. Your input is instrumental in enhancing the overall reliability and functionality of our system."
  },
  "operations/update.html": {
    "href": "operations/update.html",
    "title": "Updating container versions in the Standard Deployment | FoundationaLLM",
    "keywords": "Updating container versions in the Standard Deployment The Standard Deployment uses the foundationallm/deploy/scripts/Deploy-Images-Aks.ps1 script to deploy latest version of the FoundationaLLM images during initial setup. However, you may want to update the images to a specific version. This can be done by updating the values file and redeploying the images. PREREQUISITES Azure CLI set to the correct tenant/subscription context AKS credentials located in the .kube/config directory To obtain AKS credentials, use the following Azure CLI command: az aks get-credentials --name \"[PREFIX]-aks\" --resource-group \"[DEPLOYMENT RESOURCE GROUP]\" Helm CLI DESCRIPTION This script deploys multiple images on an AKS (Azure Kubernetes Service) cluster using Helm charts. It takes various parameters such as the release name, AKS name, resource group, tag, charts to deploy, values file, namespace, TLS/SSL environment, TLS host, TLS secret name, and autoscale option. PARAMETER name The release name for the deployment. Default is \"foundationallm\". PARAMETER aksName The name of the AKS cluster. PARAMETER resourceGroup The resource group of the AKS cluster. PARAMETER tag The tag of the images to deploy. Default is \"latest\". PARAMETER charts The charts to deploy. Use \"\" to deploy all charts. Default is \"\". PARAMETER valuesFile The path to the values file for Helm charts. Default is \"gvalues.yaml\". PARAMETER namespace The namespace to deploy the charts. If empty, it uses the namespace specified in .kube/config. PARAMETER tlsEnv The TLS/SSL environment to enable. Valid values are \"prod\", \"staging\", \"none\", and \"custom\". Default is \"prod\". PARAMETER tlsHost The hostname of the AKS cluster. Required if tlsEnv is set to \"custom\". PARAMETER tlsSecretName The name of the TLS secret. Required if tlsEnv is set to \"custom\". PARAMETER autoscale Specifies whether to enable autoscaling for the core-job chart. Default is $false. EXAMPLE Deploy-Images-Aks.ps1 ` -aksName \"myAKS\" ` -resourceGroup \"myResourceGroup\" ` -tag \"v1.0\" ` -charts \"core-api,core-job\" ` -valuesFile \"myvalues.yaml\" ` -namespace \"myNamespace\" ` -tlsEnv \"prod\" ` -tlsHost \"myaks.example.com\" ` -tlsSecretName \"myTLSSecret\" ` -autoscale $true Note: The script will NOT generate a gvalues.yaml file for you. If you do not have a gvalues.yaml file locally, use the Helm CLI to obtain it. # Get all releases (e.g., foundationallm-web) helm list # Write gvalues.yaml for release helm get values \"foundationallm-web\" --all > gvalues.yaml"
  },
  "operations/vulnerabilities.html": {
    "href": "operations/vulnerabilities.html",
    "title": "Vulnerabilities: Identification, communication, and remediation | FoundationaLLM",
    "keywords": "Vulnerabilities: Identification, communication, and remediation FoundationaLLM is committed to maintaining the security of our platform and protecting the integrity of your data. We conduct regular security testing to identify and address potential vulnerabilities in our platform. Vulnerability Identification: Regular Red-Team Exercises: Our security protocols include routine red-team exercises aimed at identifying potential vulnerabilities and misconfigurations within the Azure platform. Through these exercises, we simulate real-world attack scenarios to proactively identify and address any weaknesses in our security posture. Regular Builds and Container Image Scans: To stay ahead of emerging threats, we conduct regular builds and scans of our container images. This proactive approach involves identifying and addressing newly reported Common Vulnerabilities and Exposures (CVEs) promptly. By integrating security scans into our regular build processes, we ensure that our container images adhere to the latest security standards and mitigate potential risks effectively. Vulnerability Severity Categorization: Severity levels for vulnerabilities and other security findings are defined as follows: Minor: Vulnerabilities categorized as minor pose low or negligible risk to our system's security. These issues typically have minimal impact on operations and can be addressed during routine maintenance. Major: Major vulnerabilities signify a moderate level of risk and may have a noticeable impact on security if left unaddressed. Immediate attention is given to major vulnerabilities to mitigate potential security gaps and maintain a secure environment. High: Vulnerabilities classified as high represent a significant risk to the security and stability of our Azure platform. Urgent action is taken to address high-severity issues, often involving immediate patches or remediation steps to minimize potential threats. Critical: Critical vulnerabilities pose a severe and imminent threat to the integrity and confidentiality of our system. Immediate and comprehensive measures are implemented to address critical vulnerabilities, including rapid deployment of patches, configuration changes, or other necessary security controls. This severity categorization allows us to prioritize our response efforts based on the potential impact and urgency associated with each vulnerability. Regular assessments and adjustments are made to ensure the accuracy and relevance of the severity levels assigned to vulnerabilities. Communication of Patched Versions: We are committed to maintaining transparent and effective communication regarding security updates and patched versions. Our primary channel for disseminating information about patched versions is our official GitHub release page. This ensures that our users and stakeholders have immediate access to crucial details about the updates, including security enhancements and fixes. Key points related to the communication of patched versions on our GitHub release page: Release Notifications: Timely notifications about new releases, including security patches, will be posted on our GitHub release page. Users are encouraged to subscribe to release notifications to stay informed about the latest updates and security improvements. Detailed Release Notes: Each release on our GitHub page will include comprehensive release notes outlining the changes, enhancements, and specific security vulnerabilities addressed. This transparent approach provides our community with detailed insights into the updates and the importance of applying the latest patches. Vulnerability Disclosure: We adhere to responsible disclosure practices by openly acknowledging and crediting the individuals or organizations that report security vulnerabilities to us. Detailed information about the vulnerabilities, their potential impact, and the corresponding patches will be shared on our GitHub release page. Encouraging Regular Updates: Users are strongly encouraged to regularly check our GitHub release page for the latest updates and security patches. Proactive adoption of the latest releases ensures that users benefit from the most recent security enhancements and protection against potential threats. By leveraging our GitHub release page as a central hub for communication, we aim to streamline the process of disseminating critical information and empowering our user community to maintain a secure environment."
  },
  "role-based-access-control/index.html": {
    "href": "role-based-access-control/index.html",
    "title": "FoundationaLLM RBAC documentation | FoundationaLLM",
    "keywords": "FoundationaLLM RBAC documentation FoundationaLLM role-based access control (FoundationaLLM RBAC) is a system that provides fine-grained access control to FoundationaLLM resources. It is a system that allows you to control who can access what in your FoundationaLLM instance. Concepts Understand FoundationaLLM role definitions Understand FoundationaLLM role assignments Understand scope for FoundationaLLM RBAC Manage role assignments"
  },
  "role-based-access-control/role-assignments.html": {
    "href": "role-based-access-control/role-assignments.html",
    "title": "Understand FoundationaLLM role assignments | FoundationaLLM",
    "keywords": "Understand FoundationaLLM role assignments Role assignments enable you to grant a principal (such as a user, a group, a managed identity, or a service principal) access to a specific FoundationaLLM resource. Role assignment Acess to FoundationaLLM resources is granted through role assignments, and is reoked by removing a role assignment. A role assignment has several components: The principal, or who is being given access. The role definition (role), or what access is being granted. The scope at which the role is assigned, or where the access applies. The name of the role assignment. The description of the role assignment that helps explain why it exists. The following is an example of a FoundationaLLM role assignment: { \"RoleAssignmentName\": \"00000000-0000-0000-0000-000000000000\", \"RoleAssignmentId\": \"/instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000\", \"Scope\": \"/instances/11111111-1111-1111-1111-111111111111\", \"RoleDefinitionName\": \"Contributor\", \"RoleDefinitionId\": \"e459c3a6-6b93-4062-85b3-fffc9fb253df\", \"ObjectId\": \"22222222-2222-2222-2222-222222222222\", \"ObjectType\": \"User\", \"DisplayName\": \"Jack The Cat\", \"SignInName\": \"jackthecat@foundationallm.ai\", \"Description\": \"Jack The Cat has contributor access to the FoundationaLLM instance.\" } The following table describes the properties of a role assignment. Property Description RoleAssignmentName The name of the role assignment (is always a GUID). RoleAssignmentId The unique identifier of the role assignment which includes the name. Scope The FoundationaLLM resource identifier that the role assignment applies to. RoleDefinitionName The name of the role definition. RoleDefinitionId The unique identifier of the role definition. DisplayName The display name of the principal. ObjectId The unique identifier of the principal (can be a user, a group, a managed identity, or a service principal). ObjectType The type of the principal. Valid values include User, Group, and ServicePrincipal. DisplayName The display name of the principal. SignInName The unique principal name (UPN) of the principal. Description The description of the role assignment."
  },
  "role-based-access-control/role-definitions.html": {
    "href": "role-based-access-control/role-definitions.html",
    "title": "Understand FoundationaLLM role definitions | FoundationaLLM",
    "keywords": "Understand FoundationaLLM role definitions Role definition A role defininition (or just role) is a collection of permissions. A role definition lists the actions that can be performed, such as read, write, and delete. The following table describes the propoerties of a role definition. Property Description Name The display name of the role definition. Id The unique identifier of the role definition. Description The description of the role definition. Actions An array of strings that lists the control plane actions that a role definition can perform. For example, FoundationaLLM.Agent/agents/create. NotActions An array of strings that lists the actions that are excluded from the actions listed in the Actions property. DataActions An array of strings that lists the data plane actions that a role definition can perform. For example, FoundationaLLM.Agent/agents/read. NotDataActions An array of strings that lists the data plane actions that are excluded from the actions listed in the DataActions property. AssignableScopes An array of strings that lists the scopes that the role definition can be assigned to. Actions format The string that represents an action has the following format: FoundationaLLM.{ProviderName}/{resourceType}/{action} Examples of actions include read, write, and delete. The wildcard character (*) can be used to match any resource type or action. For example, FoundationaLLM.Agent/*/read matches all read actions for all resource types in the FoundationaLLM.Agent provider. Role definition example The following example shows the Contributor role definition. The wildcard (*) character under Actions indicates that the principal assigned to the role can perform all actions (i.e., it can manage everything). This includes also actions defined in the future, as FoundationaLLM adds new resource types. The actions under NotActions are subtracted from Actions. In this specific case, NotActions removes the role's ability to manage access to resources. { \"Name\": \"Contributor\", \"Id\": \"e459c3a6-6b93-4062-85b3-fffc9fb253df\", \"Description\": \"Allows you to manage everything except access to resources.\", \"Actions\": [ \"*\" ], \"NotActions\": [ \"FoundationaLLM.Authorization/*/delete\", \"FoundationaLLM.Authorization/*/write\" ], \"DataActions\": [], \"NotDataActions\": [], \"AssignableScopes\": [ \"/\" ] } Control and data actions Control plane actions are specified in the Actions and NotActions properties. Examples of control plane actions in FoundationaLLM include: Manage access to an agent Create a new data source Delete a prompt Data plane actions are specified in the DataActions and NotDataActions properties. NOTE: FoundationaLLM maintains a strict separation between the control and data planes. Control plane access is not inherited to the data plane. For example, if a user has the FoundationaLLM.Agent/agents/create permission, it does not mean that the user has the FoundationaLLM.Agent/agents/read permission."
  },
  "role-based-access-control/role-management.html": {
    "href": "role-based-access-control/role-management.html",
    "title": "Manage role assignments | FoundationaLLM",
    "keywords": "Manage role assignments FoundationaLLM roles are assigned to users, groups, service principals, and managed identities through the Management API. As described in the role definitions article, administrators can apply fine-grained access control to features and resources to ensure the deployment adheres to least-privilege best practices when properly assigned. Role management endpoints The Management API provides the following role management endpoints: Method Endpoint Description GET /security/roles Returns a list of all roles. GET /security/roles/{RoleDefinitionId} Returns the role settings for the specified role. GET /security/roles/{RoleDefinitionId}/assignments Returns a list of all role assignments for the specified role. GET /security/roles/{RoleDefinitionId}/assignments/{RoleAssignmentId} Returns the role assignment settings for the specified role assignment. GET /security/roles/{Scope} Returns a list of all roles at the specified scope. GET /security/roles/{Scope}/assignments Returns a list of all role assignments at the specified scope. POST /security/roles/assign Assigns a role to an Entra ID user or group. POST /security/roles/revoke Revokes a role from an Entra ID user or group. Note The Management Portal provides a graphical user interface over the Management API for managing roles and role assignments, among other FLLM configuration settings. All role assignment changes are audited and can be viewed in the Management Portal. Auditing ensures that all changes to role assignments are tracked and can be reviewed at a later time, which is often required for compliance purposes. Role assignment data store The role-based access control (RBAC) engine uses a dedicated data store to manage role assignments. Doing so ensures isolation from the rest of the FoundationaLLM data platform, which is used to store data sources, prompts, and other resources accessible to users possessing varying levels of access. The isolation also supports the ability to scale the RBAC engine independently from the rest of the FoundationaLLM data platform. The data store is implemented as a dedicated Azure Cosmos DB account or Azure Data Lake Storage Gen2 account."
  },
  "role-based-access-control/scope.html": {
    "href": "role-based-access-control/scope.html",
    "title": "Understand scope for FoundationaLLM RBAC | FoundationaLLM",
    "keywords": "Understand scope for FoundationaLLM RBAC Scope is the set of resources that a role assignment can access. When assigning roles, it is importan to understand how scope works so that you grant security principals only the level of access they need. Limiting scope also limits the potential damage that can be done if a security principal is compromised. Scope levels In FoundationaLLM, you can specify a scope at the following levels: Instance: The FoundationaLLM deployment itself. Resource: A specific resource in FoundationaLLM, such as an agent. The following rules apply to scope levels: Scopes are structured as a hierarchy. For example, a resource scope is always a child of an instance scope. Each level make the scope more specific. For example, a resource scope is more specific than an instance scope. Roles can be assigned at any of these levels of scope. Lower levels inherit the permissions of higher levels. For example, a role assignment at the instance level applies to all resources in the instance. Scope format Scope is a string that identifies the exact scope of the role assignment. The scope is usually referred to as the resource identifier or resource ID. The scope consists of a series of identifiers separated by the slash (/) character. You can think of this string as expressing the following hierarchy, where text without placeholders ({}) are fixed identifiers: /instances /{instanceId} /providers /{providerName} /{resourceType} /{resourceSubType1} /{resourceSubType2} /{resourceName} {instanceId} is unique identifier of the FoundationaLLM deployment (a GUID). {providerName} is the name of the FoundationaLLM resource provider (for example, FoundationaLLM.Agent). {resourceType} and {resourceSubType*} identify levels within the resource provider. {resourceName} is the name of a specific resource. Scope examples Scope Example Instance /instances/11111111-1111-1111-1111-111111111111 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Agent/agents/agent1 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.DataSource/dataSources/datasource1 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Agent/agents/agent1/models/gpt4."
  },
  "schema.html": {
    "href": "schema.html",
    "title": "Agent Schemas | FoundationaLLM",
    "keywords": "Agent Schemas This document provides a general overview of agent, data source, and vectorization configuration."
  },
  "setup-guides/agents/index.html": {
    "href": "setup-guides/agents/index.html",
    "title": "Agents | FoundationaLLM",
    "keywords": "Agents FoundationaLLM (FLLM) agents are the core of the solution. They are responsible for providing users with a customized experience based on its configuration. Knowledge management agent Internal context agent Prompts Prompts are an important aspect for agents. A prompt defines the persona, instructions and guardrails provided to the large language model (LLM) so that it formulates accurate responses in desired formats. Prompt resources"
  },
  "setup-guides/agents/internal-context-agent.html": {
    "href": "setup-guides/agents/internal-context-agent.html",
    "title": "Internal context agent | FoundationaLLM",
    "keywords": "Internal context agent The internal context provides a pass-through mechanism that sends the user prompt directly to the large language model (LLM) without any additional processing or context. This is useful when the user prompt is already prepared and does not require any additional context. Internal context agent configuration The structure of an internal context agent is the following: { \"type\": \"internal-context\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Agent/agents/<name>\", \"description\": \"<description>\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestrator\": \"LangChain\" } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the agent. Ensure that this description details the purpose of the agent. Parameter Description type The type of the agent - will always be internal-context. type must be the first parameter in the request body. name The name of the agent. object_id The object ID of the agent. Remove this element when creating an agent as this is generated by the Management API. description The description of the agent, ensure this description details the purpose of the agent. language_model The language model configuration. This sample demonstrates the usage of the Azure OpenAI language model. language_model.type The type of the language model. Currently supporting OpenAI based langauge models. language_model.provider The provider of the language model. Currently supporting microsoft or openai. language_model.temperature The temperature value for the language model. A value between 0 and 1. Values closer to 0 return more factual information whereas values closer to 1 yield more creative responses. language_model.use_chat Determines the type of language model to use, as an example, when using Microsoft's Azure OpenAI, specifying use_chat equal to true will use the AzureChatOpenAI model vs. the AzureOpenAI model in LangChain. language_model.api_endpoint The configuration setting key that houses the API endpoint of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.api_key The configuration setting key that houses a reference to a key vault value containing the API key for the language model service. Ensure these values are populated in key vault and app configuration. language_model.api_version The configuration setting key that houses the API version of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.version The configuration setting key that houses the version of the language model deployment. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.deployment The configuration setting key that houses the name given to the deployed language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. sessions_enabled A boolean value that indicates whether the agent is session-less (false) or supports sessions(true). conversation_history The conversation history configuration. conversation_history.enabled Indicates if conversation history is retained for subsequent agent interactions(true). conversation_history.max_history indicates the number of messages to be retained. gatekeeper The gatekeeper configuration. gatekeeper.use_system_setting Indicates if the system settings are used for the gatekeeper. gatekeeper.options Contains the list of gatekeeper options. The sample provided overrides the system setting for gatekeeper and enables Azure Content Safety and MS Presidio in the messaging pipeline. orchestrator The orchestrator to be used for the agent. This can be set to SemanticKernel or LangChain Managing internal context agents This section describes how to manage internal context agents using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Content-Type: application/json BODY <agent_configuration> where <agent_configuration> is the JSON agent configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Note FLLM currently implements logical deletes for Internal Context agents. This means that users cannot create an Internal Context agent with the same name as a deleted Internal Context agent. Support for purging Internal Context agents will be added in a future release. Validating an internal context agent Once configured, the internal context agent can be validated using an API call to the Core API or via the User Portal."
  },
  "setup-guides/agents/knowledge-management-agent.html": {
    "href": "setup-guides/agents/knowledge-management-agent.html",
    "title": "Knowledge management agent | FoundationaLLM",
    "keywords": "Knowledge management agent The FoundationaLLM (FLLM) knowledge management agent supports retrieval augmented generation (RAG). Retrieval Augmented Generation (RAG) The RAG flow augments the user prompt with additional context to generate a more accurate response. The RAG flow uses a retrieval model to retrieve relevant documents from a knowledge base, such as a vector store, and then uses the retrieved documents to augment the user prompt before sending it to the LLM. The creation of a RAG knowledge management agent requires an existing knowledge base, such as a vector store. If it does not exist, use the vectorization API can be used to create a vector store prior to the creation of the agent. Knowledge management agent configuration The knowledge management agent configuration may reference the following resources: Vectorization text embedding profile: The text embedding profile contains the configuration of the text embedding model used to embed the user prompt and perform a vector search in the knowledge base. This must match the text embedding profile used to index the knowledge base. Vectorization indexing profile: The indexing profile contains the configuration of the service hosting the index that is to be searched. Prompt: The system prompt of the agent, describing the persona of the agent. Note: The knowledge management agent implementation currently supports the AzureAISearchIndexer indexing profile. The structure of a knowledge management agent is the following: { \"type\": \"knowledge-management\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Agent/agents/<name>\", \"description\": \"<description>\", \"indexing_profile_object_id\": \"<indexing_profile_resource_objectid>\", \"text_embedding_profile_object_id\": \"<text_embedding_profile_resource_objectid>\", \"prompt_object_id\": \"<prompt_resource_objectid>\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestrator\": \"LangChain\" } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the agent. Ensure that this description details the purpose of the agent. <indexing_profile_resource_objectid> is the object ID of the indexing profile resource. <text_embedding_profile_resource_objectid> is the object ID of the text embedding profile resource. <prompt_resource_objectid> is the object ID of the prompt resource. Parameter Description type The type of the agent - will always be knowledge-management. type must be the first key in the request body. name The name of the agent. object_id The object ID of the agent. Remove this element when creating an agent as this is generated by the Management API. description The description of the agent, ensure this description details the purpose of the agent. indexing_profile_object_id The object ID of the indexing profile resource. text_embedding_profile_object_id The object ID of the text embedding profile resource. prompt_object_id The object ID of the prompt resource. language_model The language model configuration. This sample demonstrates the usage of the Azure OpenAI language model. language_model.type The type of the language model. Currently supporting OpenAI based langauge models. language_model.provider The provider of the language model. Currently supporting microsoft or openai. language_model.temperature The temperature value for the language model. A value between 0 and 1. Values closer to 0 return more factual information whereas values closer to 1 yield more creative responses. language_model.use_chat Determines the type of language model to use, as an example, when using Microsoft's Azure OpenAI, specifying use_chat equal to true will use the AzureChatOpenAI model vs. the AzureOpenAI model in LangChain. language_model.api_endpoint The configuration setting key that houses the API endpoint of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.api_key The configuration setting key that houses a reference to a key vault value containing the API key for the language model service. Ensure these values are populated in key vault and app configuration. language_model.api_version The configuration setting key that houses the API version of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.version The configuration setting key that houses the version of the language model deployment. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.deployment The configuration setting key that houses the name given to the deployed language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. sessions_enabled A boolean value that indicates whether the agent is session-less (false) or supports sessions(true). conversation_history The conversation history configuration. conversation_history.enabled Indicates if conversation history is retained for subsequent agent interactions(true). conversation_history.max_history indicates the number of messages to be retained. gatekeeper The gatekeeper configuration. gatekeeper.use_system_setting Indicates if the system settings are used for the gatekeeper. gatekeeper.options Contains the list of gatekeeper options. The sample provided overrides the system setting for gatekeeper and enables Azure Content Safety and MS Presidio in the messaging pipeline. orchestrator The orchestrator to be used for the agent. This can be set to SemanticKernel or LangChain Managing knowledge management agents This section describes how to manage knowledge management agents using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Content-Type: application/json BODY <agent_configuration> where <agent_configuration> is the JSON agent configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Note FLLM currently implements logical deletes for Knowledge Management agents. This means that users cannot create a Knowledge Management agent with the same name as a deleted Knowledge Management agent. Support for purging Knowledge Management agents will be added in a future release. Validating a knowledge management agent Once configured, the knowledge management agent can be validated using an API call to the Core API or via the User Portal. Overriding agent parameters The agent parameters can be overridden at the time of the API call. Refer to the Core API documentation for more information."
  },
  "setup-guides/agents/prompt-resource.html": {
    "href": "setup-guides/agents/prompt-resource.html",
    "title": "Prompt | FoundationaLLM",
    "keywords": "Prompt The FoundationaLLM(FLLM) prompt resource encapsulates the system prompt of an agent. The system prompt describes the persona of the agent and any instructional guardrails used to generate the desired responses to user prompts. The prompt resource is used in the knowledge management agent configuration. Prompt configuration The structure of a prompt is the following: { \"type\": \"multipart\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Prompt/prompts/<name>\", \"description\": \"<description>\", \"prefix\": \"<prompt_prefix>\", \"suffix\": \"<prompt_suffix>\" } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the prompt, describing the persona of the agent. <prompt_prefix> is the beginning of the prompt. <prompt_suffix> (optional) appended to the end of the prompt (after any prefix and context). Parameter Description type The type - will be multipart. multipart prompts have a prefix and suffix. Support for basic prompts, which have no suffix, will be added in a future release. type must be the first parameter in the request body. name The name of the prompt. object_id The object ID of the prompt. Remove this element when creating an prompt as this is generated by the Management API. description The description of the prompt, ensure this description details the purpose or role of the prompt. prompt_prefix The beginning of the prompt. prompt_suffix Text appended to the ending of the prompt. Managing prompts This section describes how to manage knowledge management prompts using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name> Content-Type: application/json BODY <prompt_configuration> where <prompt_configuration> is the prompt configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name> Note FLLM currently implements logical deletes for Prompts. This means that users cannot create a Prompt with the same name as a deleted Prompt. Support for purging Prompts will be added in a future release."
  },
  "setup-guides/exposed-apis/core-api.html": {
    "href": "setup-guides/exposed-apis/core-api.html",
    "title": "Core API | FoundationaLLM",
    "keywords": "Core API The Core API serves as the entry point for user requests to FoundationaLLM's underlying engine. While clients primarily interact with the Core API through the Chat UI, the Core API exposes some convenient interfaces for developers. Sessionless Completion The sessionless completion endpoint enables users to query agents without first creating a chat session. Endpoint: [DEPLOYMENT URL]/core/orchestration/completion?api-version=1.0 Note: For AKS deployments, [DEPLOYMENT URL] is the same as the cluster FQDN, while for ACA deployments, the Core API endpoint can be found by navigating to the [DEPLOYMENT PREFIX]coreca Container App in the Azure Portal. Sample Request: { \"user_prompt\": \"What are your capabilities?\", \"settings\": { \"agent_name\": \"internal-context\", \"model_parameters\": { \"temperature\": 0.4, \"deployment_name\": \"completions\", \"top_k\": 5, \"top_p\": 0.9, \"do_sample\": true, \"max_new_tokens\": 100, \"return_full_text\": true, \"ignore_eos\": true }, \"agent_parameters\": { \"index_filter_expression\": \"search.ismatch('FoundationaLLM', 'Text')\", \"index_top_n\": 5 } } } Note The settings object provides to override various parameters at runtime, and is optional. Within settings both model_parameters and settings.agent_parameters (along with their members) are optional. If not provided, the Core API will use the default model and agent settings. model_parameters: | Name | Type | Description | | ---- | ---- | ----------- | | temperature | float | Controls randomness. Lowering the temperature means that the model will produce more repetitive and deterministic responses. Increasing the temperature will result in more unexpected or creative responses. Try adjusting temperature or Top P but not both. This value should be a float between 0.0 and 1.0. | | deployment_name | string | The deployment name for the language model. | | top_k | int | The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. | | top_p | float | The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling. Top P (or Top Probabilities) is imilar to temperature, this controls randomness but uses a different method. Lowering Top P will narrow the model’s token selection to likelier tokens. Increasing Top P will let the model choose from tokens with both high and low likelihood. Try adjusting temperature or Top P but not both. | | do_sample | bool | Whether or not to use sampling; use greedy decoding otherwise. | | max_new_tokens | int | Sets a limit on the number of tokens per model response. The API supports a maximum of number of tokens (depending on the deployment) shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text. | | return_full_text | bool | Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. | | ignore_eos | bool | Whether to ignore the End of Sequence(EOS) token and continue generating tokens after the EOS token is generated. Defaults to False. | agent_parameters: | Name | Type | Description | | ---- | ---- | ----------- | | index_filter_expression | string | This value should be a string representing the search filter expression to limit documents to be searched by the index retriever | | index_top_n | int | Controls the number of search results to return from an index for prompt augmentation. | Payload Headers: Header Value Details Authorization Bearer [ENTRA ID BEARER TOKEN] Valid token from Entra ID Content-Type application/json Sample Response: { \"text\": \"FoundationaLLM is a copilot platform that simplifies and streamlines building knowledge management and analytic agents over the data sources present across your enterprise. It provides integration with enterprise data sources used by agents for in-context learning, fine-grain security controls over data used by agents, and pre/post completion filters that guard against attack. The solution is scalable and load balances across multiple endpoints. It is also extensible to new data sources, new LLM orchestrators, and LLMs. You can learn more about FoundationaLLM at https://foundationallm.ai.\" } Sample Postman Request: /orchestration/completion/Requests a completion from the downstream APIs."
  },
  "setup-guides/exposed-apis/index.html": {
    "href": "setup-guides/exposed-apis/index.html",
    "title": "Exposed API Documentation | FoundationaLLM",
    "keywords": "Exposed API Documentation FoundationaLLM (FLLM) exposes two convenient API interfaces that enable developers and architects to directly interact with the FLLM platform for automation and integration tasks. This approach provides an alternative to using the provided user interfaces. Core API: The Core API supports direct completion requests against FLLM's agents. Management API: The Management API abstracts FLLM's configuration, enabling programmatic setup of agents, datasources, and prompts. The Management UI implements a frontend interface on top of the Management API, simplifying common agent configuration tasks"
  },
  "setup-guides/exposed-apis/management-api.html": {
    "href": "setup-guides/exposed-apis/management-api.html",
    "title": "| FoundationaLLM",
    "keywords": "Management API Think of the FoundationaLLM Core API as a read-only API. It provides a way to query the system for information about agents, users, and other resources. The Management API, on the other hand, is a read-write API. It allows you to create, update, and delete resources in the system. Management API Endpoints The Management API provides configuration and resource management endpoints that can be consumed in the following three ways: Direct REST-based calls programmatically or through some tool like Postman. Through the Management Portal user interface. Through the FoundationaLLM CLI (Coming Soon). These options eliminate the need to directly manipulate files to define agents and their related resources, enable certain users to update categories of app configurations without needing to have access to the Azure App Configuration service, and perform additional platform-related steps as needed when changing configurations without the user needing to know about them (restart services, refresh caches, etc.). Management API Features In addition to modifying/creating content and platform components, the Management API centralizes health and service monitoring. Using the Management API from Postman, you can replace the {{baseUrl}} variable with the actual URL of the Management API resource, and the {{InstanceId}} variable with the actual instance ID from your app configuration resource that was generated for you. You can \"GET\" the configuration of an agent, and \"POST\" to create a new agent or \"PUT\" to update an existing agent."
  },
  "setup-guides/exposed-apis/resource-management/resource-management.html": {
    "href": "setup-guides/exposed-apis/resource-management/resource-management.html",
    "title": "Resource Management in FoundationaLLM | FoundationaLLM",
    "keywords": "Resource Management in FoundationaLLM With the introduction of the Management API, you can now manage resources in FoundationaLLM programmatically or through the Management API User Interface Portal. This includes creating, updating, and deleting resources in the system. Resource Providers The main concept of the Management API is the resource provider. A resource provider is a service that provides resources to the FoundationaLLM system. For example, the agents, prompts and datasources are provided by a resource provider. The Management API provides a way to manage these resources without the need to manually work with JSON files in storage containers and mimics the same concept and functionality of resources in the Azure Portal. Resource Provider Structure The resource-provider container in the main storage account that was deployed on your behalf in your subscription contains the following structure: Agent References This first folder FoundationaLLM.Agent contains the Agent References. The content of the _agent-references references all the locations of the JSON files that contain the agent information. The _agent-references folder contains the following structure: { \"AgentReferences\": [ { \"Name\": \"sotu-2023\", \"Filename\": \"/FoundationaLLM.Agent/sotu-2023.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu2\", \"Filename\": \"/FoundationaLLM.Agent/sotu2.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu3\", \"Filename\": \"/FoundationaLLM.Agent/sotu3.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu\", \"Filename\": \"/FoundationaLLM.Agent/sotu.json\", \"Type\": \"knowledge-management\" } ] } From that starting point for the agent references, we get to point to JSON file that describes each agent available to the system. Let's start by taking a look at one odf the agents from above called sotu-2023.json { \"name\": \"sotu-2023\", \"type\": \"knowledge-management\", \"object_id\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Agent/agents/sotu-2023\", \"description\": \"Knowledge Management Agent that queries the State of the Union speech transcript\", \"indexing_profile\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/indexingprofiles/sotu-index\", \"embedding_profile\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestrator\": \"LangChain\", \"prompt\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Prompt/prompts/sotu\" } Notice all the different keys and values that are present to identify the agent. This JSON file is usually created or modifed through the Management API UI Portal or via POST or PUT requests to the Management API using a product like POSTMAN. The type could be \"knowledge-management\" or \"analytical\" The language-model section is to identify the provider, its accuracy and endpoints to retrieve from the app configuration resource. sessions_enabled is a boolean to enable or disable the ability to start a session Vs just a one time query using an API tool like Postman. conversation_history is to enable or disable the ability to store the conversation history and the maximum number of conversations to store in case the previous session_enabled is set to true. The gatekeeper section is to enable or disable the use of the system settings for content safety and presidio. If set to false, then the options array will be used to identify the specific gatekeepers to use. The orchestrator is the name of the orchestrator to use for the agent. The orchestrator is the component that is responsible for managing the flow of the conversation and the execution of the agent's logic. It could be LangChain or Semantic Kernel and more options could be used in the future with the growth of the platform and the industry for orchestrators. The prompt is the reference to the prompt that the agent will use to start the conversation. The prompt is a resource that is used to start the conversation with the agent. It is a JSON file that contains the prompt text and the prompt settings. Prompt References The second folder FoundationaLLM.Prompt contains the Prompt References. Within that folder, we have the _prompt-references JSON file that contains the following structure: { \"PromptReferences\": [ { \"Name\": \"sotu5\", \"Filename\": \"/FoundationaLLM.Prompt/sotu5.json\" }, { \"Name\": \"sotu-test\", \"Filename\": \"/FoundationaLLM.Prompt/sotu-test.json\" }, { \"Name\": \"sotu\", \"Filename\": \"/FoundationaLLM.Prompt/sotu.json\" } ] } These references point to the JSON files that contain the prompt information. Let's take a look at one of the prompts from above called sotu5.json for an example: { \"name\": \"sotu5\", \"type\": \"prompt\", \"object_id\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Prompt/prompts/sotu5\", \"description\": \"Prompt for the Knowledge Management Agent that queries the State of the Union speech transcript\", \"prefix\": \"You are a political science professional named Baldwin. You are responsible for answering questions regarding the February 2023 State of the Union Address.\\nAnswer only questions about the February 2023 State of the Union address. Do not make anything up. Check your answers before replying.\\nProvide concise answers that are polite and professional.\", \"suffix\": \"\" } It contains the name, type of prompt, the object_id reference, description and of course most importantly the prefix and suffix of the prompt. The prefix and suffix are the text that will be used to start and end the conversation with the agent. Vectorization References Finally the third folder FoundationaLLM.Vectorization contains the Vectorization References. Where you will find four important JSON files: vectorization-content-source-profiles.json This is where all the different types of vectorization profiles are stored. For example: { \"Profiles\": [ { \"Type\": \"AzureDataLake\", \"Name\": \"SDZWAJournals\", \"ObjectId\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/contentsourceprofiles/SDZWAJournals\", \"Settings\": {}, \"ConfigurationReferences\": { \"AuthenticationType\": \"FoundationaLLM:Vectorization:ContentSources:SDZWAJournals:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:Vectorization:ContentSources:SDZWAJournals:ConnectionString\" } }, { \"Type\": \"SharePointOnline\", \"Name\": \"GSGSharePointOnline\", \"ObjectId\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/contentsourceprofiles/GSGSharePointOnline\", \"Settings\": {}, \"ConfigurationReferences\": { \"CertificateName\": \"FoundationaLLM:Vectorization:ContentSources:GSGSharePointOnline:CertificateName\", \"ClientId\": \"FoundationaLLM:Vectorization:ContentSources:GSGSharePointOnline:ClientId\", \"KeyVaultURL\": \"FoundationaLLM:Vectorization:ContentSources:GSGSharePointOnline:KeyVaultURL\", \"TenantId\": \"FoundationaLLM:Vectorization:ContentSources:GSGSharePointOnline:TenantId\" } }, { \"Type\": \"AzureSQLDatabase\", \"Name\": \"MSDFAzureSQLDB\", \"ObjectId\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/contentsourceprofiles/MSDFAzureSQLDB\", \"Settings\": {}, \"ConfigurationReferences\": { \"ConnectionString\": \"FoundationaLLM:Vectorization:ContentSources:MSDFAzureSQLDB:ConnectionString\" } } ] } This is where we identify the name and the type of the content source profiles to use for the vectorization of the content. And within the configurationReferences section, we identify the specific settings to use for the content source where it could be indexing PDF files, Sharepoint online content or straight from an Azure SQL Database, etc... vectorization-indexing-profiles.json { \"Profiles\": [ { \"Indexer\": \"AzureAISearchIndexer\", \"Name\": \"AzureAISearch_Test_001\", \"ObjectId\": null, \"Settings\": { \"IndexName\": \"fllm-test-001\" }, \"ConfigurationReferences\": { \"APIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey\", \"QueryAPIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:QueryAPIKey\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } }, { \"Indexer\": \"AzureAISearchIndexer\", \"Name\": \"sotu-index\", \"ObjectId\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/indexingprofiles/sotu-index\", \"Settings\": { \"IndexName\": \"sotu-index\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"ConfigurationReferences\": { \"APIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey\", \"QueryAPIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:QueryAPIKey\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } }, { \"Indexer\": \"AzureAISearchIndexer\", \"Name\": \"AzureAISearch_MSDF_001\", \"ObjectId\": null, \"Settings\": { \"IndexName\": \"fllm-msdf-001\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"ConfigurationReferences\": { \"APIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } } ] } This is where we identify the name and the Indexer to use for the indexing of the content. And within the configurationReferences section, we identify the APIKey, QueryAPIKey, AuthenticationType and Endpoint to use for the indexing. It could be indexing against the Azure AI Search or any other indexer that is available in the system and more will be supported in the future. vectorization-text-embedding-profiles.json { \"Profiles\": [ { \"TextEmbedding\": \"SemanticKernelTextEmbedding\", \"Name\": \"AzureOpenAI_Embedding\", \"ObjectId\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding\", \"Settings\": {}, \"ConfigurationReferences\": { \"APIKey\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey\", \"APIVersion\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType\", \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" } } ] } This is where we identify the name and the Text Embedding to use for the vectorization of the text. And within the configurationReferences section, we identify the APIKey, APIVersion, AuthenticationType, DeploymentName and Endpoint to use for the text embedding. vectorization-text-partitioning-profiles.json { \"Profiles\": [ { \"Name\": \"DefaultTokenTextPartition\", \"TextSplitter\": \"TokenTextSplitter\", \"Settings\": { \"Tokenizer\": \"MicrosoftBPETokenizer\", \"TokenizerEncoder\": \"cl100k_base\", \"ChunkSizeTokens\": \"2000\", \"OverlapSizeTokens\": \"200\" } } ] } This is where we identify the name and the Text Splitter to use for the chunking and overlapping of the text. In the settings section, we identify the tokenizer and the encoder to use for the text partitioning and the chunk size and overlap size in tokens. Synchronous Versus Asynchronous Vectorization The vectorization process can be done in a synchronized or asynchronized manner. The synchronized manner is when the vectorization process is done in real time in memory and the results are returned immediately. The asynchronized manner is when the vectorization process is done in the background and the results are returned at a later time. The asynchronized manner is useful when the vectorization process is expected to take a long time to complete and the user does not want to wait for the results. The asynchronized manner is also useful when the vectorization process is expected to be done in batches and the user does not want to wait for the results of each batch. For example, you would use syncronized vactorization when you have one or few files that you want to vectorize and you want the results immediately. You would use asynchronized vectorization when you have hundred or thousands of files that you want to vectorize and you want the results at a later time."
  },
  "setup-guides/index.html": {
    "href": "setup-guides/index.html",
    "title": "Setup guides | FoundationaLLM",
    "keywords": "Setup guides After deploying FoundationaLLM, you can customize the solution components to adapt it for your needs. Follow the Quickstart guide to get started with FoundationaLLM. Set up FLLM agents to define a persona and connect to your data sources to generate responses. Configure vectorization to enable vector search."
  },
  "setup-guides/management-ui/management-ui.html": {
    "href": "setup-guides/management-ui/management-ui.html",
    "title": "Management UI | FoundationaLLM",
    "keywords": "Management UI The Management UI enables FLLM administrators to configure agents without directly calling the Management API. Creating New Agent Navigate to the Create New Agent page using the side navigation bar. Set the agent type: Knowledge Management or Analytics. FoundationaLLM currently only supports Knowledge Management agents. Set the agent Knowledge Source: Expand the dropdown arrow next to the upper left box. Select the correct Content Source Profile. Expand the dropdown arrow next to the upper right box to open the Indexing Profile dropdown. Select the correct Indexing Profile. Expand the dropdown arrow next to the lower left box. Set the Chunk size and Overlap size settings for text partitioning. Select Done. Expand the dropdown arrow next to the lower right box. Set the trigger Frequency; FoundationaLLM currently only supports Manual triggers. Configure user-agent interactions. Enable conversation history using the Yes/No Radio Button. Select Done. Configure the Gatekeeper. Then, select Done. Enable/Disable the Gatekeeper using the Radio Button Set the Content Safety platform to either None or Azure Content Safety using the dropdown menu Set the Data Protection platform to either None or Microsoft Presidio using the dropdown menu Lastly, set the System Prompt. The prompt prefixes users' requests to the agent, influencing the tone and functionality of the agent. After setting the desired agent configuration, select Create Agent at the bottom right-hand corner of the page. You will be able to edit the agent configuration after creation from the Public Agents page."
  },
  "setup-guides/quickstart.html": {
    "href": "setup-guides/quickstart.html",
    "title": "Quickstart guide | FoundationaLLM",
    "keywords": "Quickstart guide After deploying FoundationaLLM, complete the following steps to get started: Configure your deployment's authentication settings. Setup your agents to define a persona and connect to your data sources to generate responses. Find your User Portal URL and log in to start using FoundationaLLM. Find your User Portal (chat UI) URL If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. When you navigate to the chat UI application, you will be prompted to log in. Find your Core API URL If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the Core API: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with coreca. Within the Overview pane, copy the Application Url value. This is the URL for the Core API. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. Your Core API URL (for your AKS deployment) is the URL you just copied with /core appended to the end of it. For example, if your Core API URL is https://1cf699fd0d89446eabf2.eastus.aksapp.io/, then your Core API URL is https://1cf699fd0d89446eabf2.eastus.aksapp.io/core."
  },
  "setup-guides/vectorization/index.html": {
    "href": "setup-guides/vectorization/index.html",
    "title": "Vectorization | FoundationaLLM",
    "keywords": "Vectorization This section describes the content vectorization concepts and how to configure vectorization in FoundationaLLM. Use the links below to learn more about configuring vectorization in FoundationaLLM: Vectorization concepts Configuring vectorization Managing vectorization profiles Triggering vectorization Monitoring and troubleshooting vectorization If you are already familiar with these details, you can start working with the Vectorization API by importing the FoundationaLLM Vectorization Postman collection. Ensure to set the Vectorization API key (X-API-KEY header) on the Authorization tab of the collection and the Base URL (baseUrl collection variable) on the Variables tab."
  },
  "setup-guides/vectorization/vectorization-concepts.html": {
    "href": "setup-guides/vectorization/vectorization-concepts.html",
    "title": "Vectorization Concepts | FoundationaLLM",
    "keywords": "Vectorization Concepts FoundationaLLM (FLLM) provides utilities and services to support vectorizing your data in batch and on-demand modalities. Vectorization is a multi-step process, starting with loading your data, splitting (or chunking) the data as required, performing vector embeddings, and storing the vectors into a vector index so an agent can later retrieve relevant information through a vector search. In FLLM, vectorization is an idempotent operation, meaning that vectorizing the same document multiple times will result in the same vector being stored in the vector index. This is useful for re-vectorizing documents that have been updated, or for cases where only parts of the vectorization process need to be run (e.g., only the vector embeddings need to be updated). For each individual document, vectorization is performed by executing a vectorization pipeline instance. The execution is started by the Vectorization API upon receiving a valid vectorization request. Based on the details of the vectorizaiton request, a vectorization pipeline can be executed in one of the following modes: Synchonously - the pipeline steps start executing immediately and execute sequentially until the pipeline is completed or an error occurs. This type of execution is used for on-demand vectorization and is well suited for small to medium sized documents and relatively small numbers of documents at a time. Asynchronously - the pipeline steps are submitted to queues and executed by workers. This type of execution is used for batch vectorization and is well suited for large numbers of documents at a time. It is also well suited for vectorizing documents of any size. The FLLM platform components involved in vectorization are: Vectorization API (processes vectorization requests and executes synchonous vectorization pipelines). Vectorization Worker(s) (execute asynchronous vectorization pipelines). A FLLM instance deploys one instance of the Vectorization API and one or more instances of the Vectorization Worker. See Configuring vectorization for more details on configuring these components. Note The initialization of both the Vectorization API and the Vectorization Worker is a time consuming process, as it involves dowloading and initializing various elements (e.g., Byte-Pair encoding dictionaries). As a result, after restarting the API, it might take up to a minute until it becomes ready to accept vectorization requests. It is recommended to either use the status endpoint of the Vectorization API to determine when it is ready to accept requests, or to wait for a minute after restarting the API before sending vectorization requests. Vectorization pipelines are started when the Vectorization API receives a vectorization request. The following types of triggers are supported: None (no triggering of vectorization pipelines). Manual (vectorization pipelines are triggered manually by calling the Vectorization API). The typical use cases for on-demand vectorization (either synchronous or asynchronous) are testing, manual vectorization (or re-vectorization), and application integration (where another platform component triggers vectorization). Content-based (vectorization pipelines are triggered automatically when either new content is added to a content source or existing content is updated). Schedule-based (vectorization pipelines are triggered automatically based on a schedule). Note Content-based and schedule-based triggering are currently in pre-release and are not yet available in public releases of FLLM. When working with vectorization in FLLM, the typical steps you have to perform are: Ensure that the Vectorization API and Vectorization Worker are configured and running. This is a one-time operation. For more details, see Configuring vectorization. Create vectorization profiles. You can either reuse existing profiles or create new ones. For more details, see Managing vectorization profiles. Submit vectorization requests to the Vectorization API. For more details, see Triggering vectorization."
  },
  "setup-guides/vectorization/vectorization-configuration.html": {
    "href": "setup-guides/vectorization/vectorization-configuration.html",
    "title": "Configuring vectorization | FoundationaLLM",
    "keywords": "Configuring vectorization This section provides details on how to configure the vectorization API and workers in FoundationaLLM. Note These configurations should already be in place if you deployed FoundationaLLM (FLLM) using the recommended deployment scripts. The details presented here are provided for cases in which you need to troubleshoot or customize the configuration. Configuration for Vectorization API The following table describes the Azure artifacts required for the vectorization pipelines. Artifact name Description vectorization-input Azure storage container used by default to store documents to be picked up by the vectorization pipeline. Must be created on a Data Lake storage account (with the hierarchical namespace enabled). The following table describes the environment variables required for the vectorization pipelines. Environment variable Description FoundationaLLM:AppConfig:ConnectionString Connection string to the Azure App Configuration instance. The following table describes the required configuration parameters for the vectorization pipelines. App Configuration Key Default Value Description FoundationaLLM:APIs:VectorizationAPI:APIUrl The URL of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:APIKey Key Vault secret name: foundationallm-apis-vectorizationapi-apikey The API key of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization API. Note Refer to the App Configuration values page for more information on how to set these and other configuration values. Configuration for Vectorization workers The following table describes the Azure artifacts required for the vectorization pipelines. Artifact Name Description embed Azure storage queue used for the embed vectorization pipeline. Can be created on the storage account used for the other queues. extract Azure storage queue used for the extract vectorization pipeline. Can be created on the storage account used for the other queues. index Azure storage queue used for the index vectorization pipeline. Can be created on the storage account used for the other queues. partition Azure storage queue used for the partition vectorization pipeline. Can be created on the storage account used for the other queues. vectorization-state Azure storage container used for the vectorization state service. Can be created on the storage account used for the other queues. resource-provider Azure storage container used for the internal states of the FoundationaLLM resource providers. resource-provider/FoundationaLLM.Vectorization/vectorization-content-source-profiles.json Azure storage blob used for the content sources managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization content source profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-text-partitioning-profiles.json Azure storage blob used for the text partitioning profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization text partitioning profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-text-embedding-profiles.json Azure storage blob used for the text embedding profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization text embedding profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-indexing-profiles.json Azure storage blob used for the indexing profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization indexing profiles. The following table describes the environment variables required for the vectorization pipelines. Environment variable Description FoundationaLLM:AppConfig:ConnectionString Connection string to the Azure App Configuration instance. The following table describes the required App Configuration parameters for the vectorization pipelines. App Configuration Key Default Value Description FoundationaLLM:APIs:VectorizationWorker:APIUrl The URL of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:APIKey Key Vault secret name: foundationallm-apis-vectorizationworker-apikey The API key of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization worker API. FoundationaLLM:Vectorization:VectorizationWorker The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings. FoundationaLLM:Vectorization:Queues:Embed:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the embed vectorization queue. FoundationaLLM:Vectorization:Queues:Extract:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the extract vectorization queue. FoundationaLLM:Vectorization:Queues:Index:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the index vectorization queue. FoundationaLLM:Vectorization:Queues:Partition:ConnectionString Key Vault secret name: foundationallm-vectorization-queues-connectionstring The connection string to the Azure Storage account used for the partition vectorization queue. FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:StateService:Storage:ConnectionString Key Vault secret name: foundationallm-vectorization-state-connectionstring The connection string to the Azure Storage account used for the vectorization state service. FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:ResourceProviderService:Storage:ConnectionString Key Vault secret name: foundationallm-vectorization-resourceprovider-storage-connectionstring The connection string to the Azure Storage account used for the vectorization state service. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey Key Vault secret name: foundationallm-vectorization-semantickerneltextembedding-openai-apikey The API key used to connect to the Azure OpenAI service. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName The name of the Azure OpenAI model deployment. The default value is embeddings. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint The endpoint of the Azure OpenAI service. FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey Key Vault secret name: foundationallm-vectorization-azureaisearch-apikey The API key used to connect to the Azure OpenAI service. FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint The endpoint of the Azure OpenAI service. Note Refer to the App Configuration values page for more information on how to set these and other configuration values. The following table describes the external content used by the vectorization worker to initialize: Uri Description https://openaipublic.blob.core.windows.net/encodings/cl100k_base.tiktoken The public Azure Blob Storage account used to download the OpenAI BPE ranking files. Note The vectorization worker must be able to open HTTPS connections to the external content listed above. Default vectorization worker settings The default settings for the vectorization worker are stored in the FoundationaLLM:Vectorization:VectorizationWorker App Configuration key. The default structure for this key is: { \"RequestManagers\": [ { \"RequestSourceName\": \"extract\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"partition\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"embed\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"index\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 } ], \"RequestSources\": [ { \"Name\": \"extract\", \"ConnectionConfigurationName\": \"Extract:ConnectionString\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"partition\", \"ConnectionConfigurationName\": \"Partition:ConnectionString\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"embed\", \"ConnectionConfigurationName\": \"Embed:ConnectionString\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"index\", \"ConnectionConfigurationName\": \"Index:ConnectionString\", \"VisibilityTimeoutSeconds\": 600 } ], \"QueuingEngine\": \"AzureStorageQueue\" } The following table provides details about the configuration parameters: Parameter Description RequestManagers The list of request managers used by the vectorization worker. Each request manager is responsible for managing the execution of vectorization pipelines for a specific vectorization step. The configuration must include all request managers. RequestManagers.MaxHandlerInstances The maximum number of request handlers that process requests for the specified request source. By default, the value is 1. You can change the value to increase the processing capacity of each vectorization worker instance. The value applies to all istances of the vectorization worker. NOTE: It is important to align the value of this setting with the level of compute and memory resources allocated to the individual vectorization worker instances. RequestManagers.QueueProcessingPace Optional The delay in seconds to wait between requests after a request has been processed. The default value is 5. RequestManagers.QueuePollingInterval Optional The polling interval in seconds, this is the amount of time to wait if the previous check on the queue had no items. The default value is 60. RequestManagers.QueueMaxNumberOfRetries Optional The maximum number of retries to attempt to process a request before being removed from the queue. The default value is 5. RequestSources The list of request sources used by the vectorization worker. Each request source is responsible for managing the requests for a specific vectorization step. The configuration must include all request sources. RequestSources.VisibilityTimeoutSeconds In the case of queue-based request sources (the default for the vectorization worker), specifies the time in seconds until a dequeued vectorization step request must be executed. During this timeout, the message will not be visible to other handler instances within the same worker or from other worker instances. If the handler fails to process the vectorization step request successfully and remove it from the queue within the specified timeout, the message will become visibile again. The default value is 600 seconds and should not be changed."
  },
  "setup-guides/vectorization/vectorization-monitoring-troubleshooting.html": {
    "href": "setup-guides/vectorization/vectorization-monitoring-troubleshooting.html",
    "title": "Monitoring and troubleshooting vectorization | FoundationaLLM",
    "keywords": "Monitoring and troubleshooting vectorization The typical steps you have to perform when monitoring and troubleshooting vectorization in FoundationaLLM (FLLM) are: Check the configuration of the Vectorization API and Vectorization Worker. For more details, see Configuring vectorization. Check the working condition of the Vectorization API and Vectorization Worker(s). Ensure the services have started and initialized successfully. Check the status endpoints for the Core API, Vectoriation API and the Management API. You can do this by submitting a HTTP GET request to the /status endpoint of these APIs and validate that you get a HTTP 200 OK response with body like <api_name> - ready. Check the logs of the Vectorization API and Vectorization Worker(s) for errors. By default, the logs are written to the Azure App Insights Log Analytics Workspace deployed by FLLM. Check the definitions of the vectorization profiles used in the vectorization requests. For more details, see Managing vectorization profiles. Ensure all the required app configuration elements are present and have the correct values. Check the state of the vectorization requests. By default, the vectorization requests are stored in the vectorization-state container of the Azure Storage account deployed by FLLM."
  },
  "setup-guides/vectorization/vectorization-profiles.html": {
    "href": "setup-guides/vectorization/vectorization-profiles.html",
    "title": "Managing vectorization profiles | FoundationaLLM",
    "keywords": "Managing vectorization profiles The FoundationaLLM (FLLM) vectorization pipelines required the following types of profiles: Content source profiles Text partitioning profiles Text embedding profiles Indexing profiles Content source profiles The structure of a content source profile is the following: { \"type\": \"content-source-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/contentsourceprofiles/<name>\", \"description\": \"<description>\", \"deleted\": false, \"content_source\": \"<content_source>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>} } where: <name> is the name of the content source profile. <description> is the description of the content source profile. <content_source> is the type of the content source profile. The supported types are AzureDataLake, SharePointOnline, and AzureSQLDatabase. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported content source types. AzureDataLake \"settings\": {}, \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:ConnectionString\" } The configuration parameters for AzureDataLake are the following: Parameter Description configuration_references.AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. configuration_references.ConnectionString The connection string to the Azure Storage account used for the the Azure Data Lake vectorization content source. SharePointOnline \"settings\": {}, \"configuration_references\": { \"CertificateName\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:CertificateName\", \"ClientId\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:ClientId\", \"KeyVaultURL\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:KeyVaultURL\", \"TenantId\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:TenantId\" } The configuration parameters for SharePointOnline are the following: Parameter Description configuration_references.CertificateName The name of the X.509 Certificate. The certificate must be valid and be uploaded into an Azure Key Vault certificate store. configuration_references.KeyVaultURL The URL of the KeyVault where the X.509 Certificate is stored. configuration_references.ClientId The Application (client) Id of the Microsoft Entra ID App Registration. See Entra ID app registration for SharePoint Online content source. configuration_references.TenantId The unique identifier of the SharePoint Online tenant. AzureSQLDatabase \"settings\": {}, \"configuration_references\": { \"ConnectionString\": \"FoundationaLLM:Vectorization:ContentSources:<content_source_name>:ConnectionString\" } The configuration parameters for AzureSQLDatabase are the following: Parameter Description configuration_references.ConnectionString The connection string to the Azure SQL database used for the Azure SQL Database vectorization content source. Managing content source profiles This section describes how to manage content source profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/contentsourceprofiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/contentsourceprofiles/<name> Content-Type: application/json BODY <content source profile> where <content source profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/contentsourceprofiles/<name> Note FLLM implements a logical delete for Content Source profiles. This means that users cannot create a Content Source profile with the same name as a deleted profile. Support for purging Content Source profiles will be added in a future release. Text partitioning profiles The structure of a text partitioning profile is the following: { \"type\": \"text-partitioning-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/textpartitioningprofiles/<name>\", \"description\": \"<description>\", \"deleted\": false, \"text_splitter\": \"<text_splitter>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>} } where: <name> is the name of the text partitioning profile. <description> is the description of the text partitioning profile. <text_splitter> is the type of the text splitter. The supported types are TextTokenSplitter. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported text splitters. TextTokenSplitter \"settings\" : { \"Tokenizer\": \"MicrosoftBPETokenizer\", \"TokenizerEncoder\": \"cl100k_base\", \"ChunkSizeTokens\": \"2000\", \"OverlapSizeTokens\": \"200\" }, \"configuration_references\": {} The configuration parameters for TokenTextSplitter are the following: Parameter Description settings.Tokenizer The tokenizer used to split the text into tokens. Currently, the only supported tokenizer is MicrosoftBPETokenizer. Under the hood, it uses the .NET equivalent of OpenAI's tiktoken. settings.TokenizerEncoder The encoder used by the tokenizer. Currently, the only supported encoder is cl100k_base. This encoder is the one currently used by Azure OpenAI (and OpenAI) in gpt-3.5-turbo and gpt-4. settings.ChunkSizeTokens The maximum number of tokens in each text chunk. settings.OverlapSizeTokens The maximum number of tokens that overlap between two consecutive chunks. Managing text partitioning profiles This section describes how to manage text partitioning profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textpartitioningprofiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textpartitioningprofiles/<name> Content-Type: application/json BODY <text partitioning profile> where <text partitioning profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textpartitioningprofiles/<name> Note FLLM implements a logical delete for Text Partitioning profiles. This means that users cannot create a Text Partitioning profile with the same name as a deleted profile. Support for purging Text Partitioning profiles will be added in a future release. Text embedding profiles The structure of a text embedding profile is the following: { \"type\": \"text-embedding-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/textembeddingprofiles/<name>\", \"description\": \"<description>\", \"deleted\": false, \"text_embedding\": \"<text_embedding>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>} } where: <name> is the name of the text embedding profile. <description> is the description of the text embedding profile. <text_embedding> is the type of the text embedder. The supported types are SemanticKernelTextEmbedding. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported text embedders. SemanticKernelTextEmbedding \"settings\": {}, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey\", \"APIVersion\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType\", \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" } The configuration parameters for SemanticKernelTextEmbedding are the following: Parameter Description configuration_references.APIKey The API key used to connect to the Azure OpenAI service. By default, this maps to the Azure OpenAI service deployed by FLLM. configuration_references.APIVersion The API version used to connect to the Azure OpenAI service. By default, this value is 2023-05-15. configuration_references.AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. By default, it is set to APIKey. configuration_references.DeploymentName The name of the Azure OpenAI model deployment. The default value is embeddings. configuration_references.Endpoint The endpoint of the Azure OpenAI service. By default, this maps to the Azure OpenAI service deployed by FLLM. Managing text embedding profiles This section describes how to manage text embedding profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textembeddingprofiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textembeddingprofiles/<name> Content-Type: application/json BODY <text embedding profile> where <text embedding profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textembeddingprofiles/<name> Note FLLM implements a logical delete for Text Embedding profiles. This means that users cannot create a Text Embedding profile with the same name as a deleted profile. Support for purging Text Embedding profiles will be added in a future release. Indexing profiles The structure of an indexing profile is the following: { \"type\": \"indexing-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/indexingprofiles/<name>\", \"description\": \"<description>\", \"deleted\": false, \"indexer\": \"<indexer>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>} } where: <name> is the name of the indexing profile. <description> is the description of the indexing profile. <indexer> is the type of the indexer. The supported types are AzureAISearchIndexer. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported indexers. AzureAISearchIndexer \"settings\": { \"IndexName\": \"fllm-default-001\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } The configuration parameters for AzureAISearchIndexer are the following: Parameter Description settings.IndexName The name of the Azure AI Search index. If the index does not exist, it will be created. settings.TopN The number of embeddings closest to the index query to return. settings.Filters Optional filters to further refine the index search. settings.EmbeddingFieldName Field name of the embedding vector in the JSON documents returned by Azure AI Search. settings.TextFieldName Field name of the text equivalent of the embedding vector in the JSON documents returned by Azure AI Search. configuration_references.APIKey The API key used to connect to the Azure AI Search service. By default, this maps to the Azure AI Search service deployed by FLLM. ConfigurationReference.AuthenticationType The authentication type used to connect to the Azure AI Search service. Can be one of AzureIdentity or APIKey. By default, it is set to APIKey. configuration_references.Endpoint The endpoint of the Azure AI Search service. By default, this maps to the Azure AI Search service deployed by FLLM. Managing indexing profiles This section describes how to manage indexing profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingprofiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingprofiles/<name> Content-Type: application/json BODY <indexing profile> where <indexing profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingprofiles/<name> Note FLLM implements a logical delete for Text Indexing profiles. This means that users cannot create a Text Indexing profile with the same name as a deleted profile. Support for purging Text Indexing profiles will be added in a future release. Additional configuration steps Entra ID app registration for SharePoint Online content source Apps typically access SharePoint Online through certificates: Anyone having the certificate and its private key can use the app with the permissions granted to it. Create a new App registration in your Microsoft Entra ID tenant. Next, provide a Name for your application and click on Register at the bottom of the blade. Navigate to the API Permissions blade and click on Add a permission button Here you choose the permissions that you will grant to this application. Select SharePoint from the Microsoft APIs tab, then select Application permissions as the type of permissions required, choose the desired permissions (i.e. Sites.Read.All) and click on Add permissions. Here are the required scopes: Group.ReadWrite.All User.ReadWrite.All Sites.Read.All OR Sites.Selected Sites.Read.All will allow the application to read documents and list items in all site collections. Sites.Selected will allow the application to access only a subset of site collections. The specific site collections and the permissions granted will be configured separately, in SharePoint Online. The application permission requires admin consent in a tenant before it can be used. In order to do this, click on API permissions in the left menu again. At the bottom you will see a section Grant consent. Click on the Grant admin consent for {{organization}} button and confirm the action by clicking on the Yes button that appears at the top. To invoke SharePoint Online with an app-only access token, you have to create and configure a self-signed X.509 certificate, which will be used to authenticate your application against Microsoft Entra ID. You can find additional details on how to do this in this document. Next step is to register the certificate you created to this application. Click on Certificates & secrets blade. Next, click on the Upload certificate button, select the .CER file you generated earlier and click on Add to upload it. To confirm that the certificate was successfully registered, click on Manifest blade and search for the keyCredentials property, which contains your certificate details. It should look like this: \"keyCredentials\": [ { \"customKeyIdentifier\": \"<$base64CertHash>\", \"endDate\": \"yyyy-MM-ddThh:mm:ssZ\", \"keyId\": \"<$guid>\", \"startDate\": \"yyyy-MM-ddThh:mm:ssZ\", \"type\": \"AsymmetricX509Cert\", \"usage\": \"Verify\", \"value\": \"<$base64Cert>\", \"displayName\": \"CN=<$name of your cert>\" } ] Upload and store the certificate in the KeyVault where the FoundationaLLM Vectorization API has permissions to read Secrets. You will need the Certificate Name for the App Configuration settings listed in the table above. NOTE Can I use other means besides certificates for realizing app-only access for my Azure AD app? NO, all other options are blocked by SharePoint Online and will result in an Access Denied message. Create a new Content Source profile using the Management API. Ensure that you set the necessary App Configuration settings appropriately."
  },
  "setup-guides/vectorization/vectorization-triggering.html": {
    "href": "setup-guides/vectorization/vectorization-triggering.html",
    "title": "Triggering vectorization | FoundationaLLM",
    "keywords": "Triggering vectorization Vectorization pipelines are started when the Vectorization API receives a vectorization request. The following types of triggers are supported: None (no triggering of vectorization pipelines). Manual (vectorization pipelines are triggered manually by calling the Vectorization API). The typical use cases for on-demand vectorization (either synchronous or asynchronous) are testing, manual vectorization (or re-vectorization), and application integration (where another platform component triggers vectorization). Content-based (vectorization pipelines are triggered automatically when either new content is added to a content source or existing content is updated). Schedule-based (vectorization pipelines are triggered automatically based on a schedule). Note Content-based and schedule-based triggering are currently in pre-release and are not yet available in public releases of FLLM. Vectorization requests The typical structure of a vectorization request is the following { \"content_identifier\": { \"content_source_profile_name\": \"<name>\", \"multipart_id\": [ \"xyz.blob.core.windows.net\", \"vectorization-input\", \"The-fabulous-life-of-Jack-the-Cat.pdf\" ], \"canonical_id\": \"friends/stories/The-fabulous-life-of-Jack-the-Cat\" }, \"processing_type\": \"Asynchronous\", \"steps\": [ { \"id\": \"extract\", \"parameters\": {} }, { \"id\": \"partition\", \"parameters\": { \"text_partition_profile_name\": \"DefaultTokenTextPartition\" } }, { \"id\": \"embed\", \"parameters\": { \"text_embedding_profile_name\": \"AzureOpenAI_Embedding\" } }, { \"id\": \"index\", \"parameters\": { \"indexing_profile_name\": \"AzureAISearch_Default_001\" } } ] } The following table describes the properties of a vectorization request. Property Description content_identifier The content identifier of the content to be vectorized. content_identifier.content_source_profile_name The name of the content source profile to be used for loading the content. content_identifier.multipart_id The multipart ID of the content to be vectorized. The multipart ID is a list of strings that uniquely identifies the content. The multipart ID is specific to the content source profile. content_identifier.canonical_id The canonical ID of the content to be vectorized. The canonical ID is a string that uniquely identifies the content in a logical namespace. The caller is responsible for the generation of this identifier. The identifier should have a path form (using the / separator). The last part of the path should always be equal to the file name (without its extension). processing_type The type of processing to be performed. The following values are supported: Synchronous and Asynchronous. See Vectorization concepts for more details. steps The vectorization steps to be executed. Most vectorization requests will contain the full set of standard steps: extract, partition, embed, and index. Each step (except for the extract one) will contain one parameter specifying the name of the associated vectorization profile name. The meaning of the multipart strings depends on the specific type of the content source in the content source profile. The following table describes the meaning of the multipart strings for the AzureDataLake content source. Position Description 1 The URL of the Azure Data Lake storage account. When providing this value, you can use the known neutral URLs naming conventions. 2 The name of the container. 3 The path of the file relative to the container. The following table describes the meaning of the multipart strings for the SharePointOnline content source. Position Description 1 The URL of the SharePoint Online tenant. When providing this value, you can use the known neutral URLs naming conventions. 2 The path of the site/subsite relative to the tenant URL. 3 The folder path, starting with the document library name. 4 The name of the file. The following table describes the meaning of the multipart strings for the AzureSQLDatabase content source. Position Description 1 The name of the database schema. 2 The name of the table. 3 The name of the column that stores file content. 4 The name of the column that stores file identifiers (file names). 5 The file identifier (file name). Known neutral URLs Depending on the specific configuration of various layers of security, vectorization request might end up being filtered out by infrastructure components like firewalls or proxies. To avoid this, the Vectorization API supports the use of known neutral URLs. Known neutral URLs are URLs that have a neutral form that is not subject to filtering. The platform currently supports two conventions for specifing known neutral URLs: Simple: xyz.blob.core.windows.net - this will be translated into https://xyz.blob.core.windows.net by the platform. Complex: FLLM:xyz#blob#core#windows#net - this will be translated into https://xyz.blob.core.windows.net by the platform. Depending on the specific configuration of the infrastructure, one of the two conventions might be more suitable than the other. Note To avoid bypassing security measures, the use of known neutral URLs is currently restricted to the following domains: onelake.dfs.fabric.microsoft.com, blob.core.windows.net, dfs.core.windows.net, and sharepoint.com. When parsing multipart components that are subject to known neutral URL naming conventions, the platform will apply the following logic: If the component starts with https:// or http:// (case-insensitive), the platform will not apply any transformation since the explicit intent is to use a fully qualified URL. If the component starts with FLLM:, the platform will replace the FLLM: prefix with https:// and replace all # characters with .. Then, it will check if the tail of the resulting URL is in the list of allowed domains. If it is, the platform will use the resulting URL. If it is not, the platform will use the original form of the component. At this point, the platform will assume that the component is a simple known neutral URL and will prepend https:// to it. Then, if the tail of the resulting URL is in the list of allowed domains, the platform will use the resulting URL. If it is not, the platform will use the original form of the component. Submitting vectorization requests This section describes how to submit vectorization requests using the Vectorization API. {{baseUrl}} is the base URL of the Vectorization API. POST {{baseUrl}}/vectorizationrequest Content-Type: application/json X-API-KEY: <vectorization_api_key> BODY <vectorization_request> where <vectorization_api_key> is the API key of the Vectorization API and <vectorization_request> is the vectorization request to be submitted. Upon completion, the API will return a response with the following structure: { \"object_id\":\"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationrequests/6041849a-d4d8-428d-97ff-c6a3443ecdae\", \"is_success\":true, \"error_message\":null }"
  }
}