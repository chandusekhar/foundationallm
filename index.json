{
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.AgentFactory.API.Controllers Assembly FoundationaLLM.AgentFactory.API.dll OrchestrationController class [ApiVersion(1, null)] [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationController(IAgentFactoryService, ILogger<OrchestrationController>) Constructor for the Agent Factory orchestration controller public OrchestrationController(IAgentFactoryService agentFactoryService, ILogger<OrchestrationController> logger) Parameters agentFactoryService IAgentFactoryService logger ILogger<OrchestrationController> Methods GetCompletion(CompletionRequest) Retrieves a completion from an orchestration service [HttpPost(\"completion\")] public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetSummary(SummaryRequest) Gets a summary from the Agent Factory [HttpPost(\"summary\")] public Task<SummaryResponse> GetSummary(SummaryRequest content) Parameters content SummaryRequest Returns Task<SummaryResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.AgentFactory.API.Controllers Assembly FoundationaLLM.AgentFactory.API.dll Provides methods for checking the status of the service. [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Agent Factory API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Agent Factory API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Controllers.html",
    "title": "Namespace FoundationaLLM.AgentFactory.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.API.Controllers Classes OrchestrationController OrchestrationController class StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.AgentFactory.API Assembly FoundationaLLM.AgentFactory.API.dll Program class for the Agent Factory API public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Agent Factory API public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.API.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.API.html",
    "title": "Namespace FoundationaLLM.AgentFactory.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.API Namespaces FoundationaLLM.AgentFactory.API.Controllers Classes Program Program class for the Agent Factory API"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.AgentBase.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.AgentBase.html",
    "title": "Class AgentBase | FoundationaLLM",
    "keywords": "Class AgentBase Namespace FoundationaLLM.AgentFactory.Core.Agents Assembly FoundationaLLM.AgentFactory.Core.dll Base class for an agent. public class AgentBase Inheritance object AgentBase Derived DefaultAgent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentBase(AgentMetadata, ILLMOrchestrationService, IPromptHubAPIService, IDataSourceHubAPIService) Constructor for the AgentBase class. public AgentBase(AgentMetadata agentMetadata, ILLMOrchestrationService orchestrationService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService) Parameters agentMetadata AgentMetadata orchestrationService ILLMOrchestrationService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService Fields _agentMetadata The agent metadata. protected readonly AgentMetadata _agentMetadata Field Value AgentMetadata _dataSourceHubService The data source hub for the agent. protected readonly IDataSourceHubAPIService _dataSourceHubService Field Value IDataSourceHubAPIService _orchestrationService The orchestration service for the agent. protected readonly ILLMOrchestrationService _orchestrationService Field Value ILLMOrchestrationService _promptHubService The prompt hub for the agent. protected readonly IPromptHubAPIService _promptHubService Field Value IPromptHubAPIService Methods Configure(string, string) This will setup the agent based on its metadata. public virtual Task Configure(string userPrompt, string sessionId) Parameters userPrompt string sessionId string Returns Task GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public virtual Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetSummary(SummaryRequest) The call to get a summary after the agent has been configured. public virtual Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest Returns Task<SummaryResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.AgentBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.AgentBuilder.html",
    "title": "Class AgentBuilder | FoundationaLLM",
    "keywords": "Class AgentBuilder Namespace FoundationaLLM.AgentFactory.Core.Agents Assembly FoundationaLLM.AgentFactory.Core.dll Agent Builder class public class AgentBuilder Inheritance object AgentBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Build(string, string, IAgentHubAPIService, IEnumerable<ILLMOrchestrationService>, IPromptHubAPIService, IDataSourceHubAPIService) Used to build an agenet given the inbound parameters. public static Task<AgentBase> Build(string userPrompt, string sessionId, IAgentHubAPIService agentHubAPIService, IEnumerable<ILLMOrchestrationService> orchestrationServices, IPromptHubAPIService promptHubAPIService, IDataSourceHubAPIService dataSourceHubAPIService) Parameters userPrompt string sessionId string agentHubAPIService IAgentHubAPIService orchestrationServices IEnumerable<ILLMOrchestrationService> promptHubAPIService IPromptHubAPIService dataSourceHubAPIService IDataSourceHubAPIService Returns Task<AgentBase> Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.DefaultAgent.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.DefaultAgent.html",
    "title": "Class DefaultAgent | FoundationaLLM",
    "keywords": "Class DefaultAgent Namespace FoundationaLLM.AgentFactory.Core.Agents Assembly FoundationaLLM.AgentFactory.Core.dll DefaultAgent class public class DefaultAgent : AgentBase Inheritance object AgentBase DefaultAgent Inherited Members AgentBase._agentMetadata AgentBase._orchestrationService AgentBase._promptHubService AgentBase._dataSourceHubService object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DefaultAgent(AgentMetadata, ILLMOrchestrationService, IPromptHubAPIService, IDataSourceHubAPIService) Constructor for default agent. public DefaultAgent(AgentMetadata agentMetadata, ILLMOrchestrationService orchestrationService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService) Parameters agentMetadata AgentMetadata orchestrationService ILLMOrchestrationService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService Methods Configure(string, string) Used to configure the DeafultAgent class. public override Task Configure(string userPrompt, string sessionId) Parameters userPrompt string sessionId string Returns Task Exceptions ArgumentException GetCompletion(CompletionRequest) Calls the orchestration service for the agent to get a completion. public override Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetSummary(SummaryRequest) Calls the orchestration service for the agent to get a summary. public override Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest Returns Task<SummaryResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Agents.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Agents | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Agents Classes AgentBase Base class for an agent. AgentBuilder Agent Builder class DefaultAgent DefaultAgent class"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAgentFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAgentFactoryService.html",
    "title": "Interface IAgentFactoryService | FoundationaLLM",
    "keywords": "Interface IAgentFactoryService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for the Agent Factory Service public interface IAgentFactoryService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Status Status value to return when the APIs status endpoint is called. string Status { get; } Property Value string Methods GetCompletion(CompletionRequest) Retrieve a completion from the configured orchestration service. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetSummary(SummaryRequest) Retrieve a summarization for the passed in prompt from the orchestration service. Task<SummaryResponse> GetSummary(SummaryRequest content) Parameters content SummaryRequest Returns Task<SummaryResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAgentHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IAgentHubAPIService.html",
    "title": "Interface IAgentHubAPIService | FoundationaLLM",
    "keywords": "Interface IAgentHubAPIService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for the AgentHub Service. public interface IAgentHubAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ResolveRequest(string, string) Gets a set of agents from the Agent Hub based on the prompt and user context. Task<AgentHubResponse> ResolveRequest(string userPrompt, string sessionId) Parameters userPrompt string The user prompt to resolve. sessionId string The session ID. Returns Task<AgentHubResponse> Status() Gets the status of the Agent Hub Service. Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IDataSourceHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IDataSourceHubAPIService.html",
    "title": "Interface IDataSourceHubAPIService | FoundationaLLM",
    "keywords": "Interface IDataSourceHubAPIService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for the Agent Factory Service. public interface IDataSourceHubAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ResolveRequest(List<string>, string) Gets a list of DataSources from the DataSource Hub. Task<DataSourceHubResponse> ResolveRequest(List<string> sources, string sessionId) Parameters sources List<string> The data sources to resolve. sessionId string The session ID. Returns Task<DataSourceHubResponse> Status() Gets the status of the DataSource Hub Service. Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IPromptHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.IPromptHubAPIService.html",
    "title": "Interface IPromptHubAPIService | FoundationaLLM",
    "keywords": "Interface IPromptHubAPIService Namespace FoundationaLLM.AgentFactory.Core.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for a prompt hub service public interface IPromptHubAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ResolveRequest(string, string, string) Used to get prompts for a target agent and user context. Task<PromptHubResponse> ResolveRequest(string agentName, string sessionId, string promptName = \"default\") Parameters agentName string Name of the agent for which to retrieve prompt values. sessionId string The session ID. promptName string Name of the prompt for which to retrieve prompt values. Returns Task<PromptHubResponse> Returns a PromptHubResponse object containing the list of prompts for the specified agent. Status() Gets the status of the Prompt Hub Service Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Interfaces Interfaces IAgentFactoryService Interface for the Agent Factory Service IAgentHubAPIService Interface for the AgentHub Service. IDataSourceHubAPIService Interface for the Agent Factory Service. IPromptHubAPIService Interface for a prompt hub service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.AgentFactorySettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.AgentFactorySettings.html",
    "title": "Class AgentFactorySettings | FoundationaLLM",
    "keywords": "Class AgentFactorySettings Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll Settings for an Agent Factory. Currenlty only sets the default orchestration (Semantickernal, LangChain) public record AgentFactorySettings : IEquatable<AgentFactorySettings> Inheritance object AgentFactorySettings Implements IEquatable<AgentFactorySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultOrchestrationService The default orchenstration service (SemanticKernal, LangChain) public string? DefaultOrchestrationService { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.SettingsBase.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.SettingsBase.html",
    "title": "Class SettingsBase | FoundationaLLM",
    "keywords": "Class SettingsBase Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll SettingsBase class public class SettingsBase Inheritance object SettingsBase Derived AgentHubSettings DataSourceHubSettings LangChainServiceSettings PromptHubSettings SemanticKernelServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The key that must be sent or validated against when sending requests to the service. public string? APIKey { get; init; } Property Value string APIUrl The uri of the target service. public string? APIUrl { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions Classes AgentFactorySettings Settings for an Agent Factory. Currenlty only sets the default orchestration (Semantickernal, LangChain) SettingsBase SettingsBase class"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.AgentHubRequest.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.AgentHubRequest.html",
    "title": "Class AgentHubRequest | FoundationaLLM",
    "keywords": "Class AgentHubRequest Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll Represents a request that is sent to an AgentHub to get lists of agents. public class AgentHubRequest : OrchestrationRequest Inheritance object OrchestrationRequest AgentHubRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.AgentHubResponse.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.AgentHubResponse.html",
    "title": "Class AgentHubResponse | FoundationaLLM",
    "keywords": "Class AgentHubResponse Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll The response returned from the Agent Hub. public record AgentHubResponse : IEquatable<AgentHubResponse> Inheritance object AgentHubResponse Implements IEquatable<AgentHubResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Agent Information about a requested agent from the Agent Hub. [JsonProperty(\"agent\")] public AgentMetadata? Agent { get; set; } Property Value AgentMetadata"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.AgentMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.AgentMetadata.html",
    "title": "Class AgentMetadata | FoundationaLLM",
    "keywords": "Class AgentMetadata Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll The information about an agent returned from the Agent Hub. public class AgentMetadata : MetadataBase Inheritance object MetadataBase AgentMetadata Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedDataSourceNames Datasources that are used or available to the agent. [JsonProperty(\"allowed_data_source_names\")] public List<string>? AllowedDataSourceNames { get; set; } Property Value List<string> EmbeddingModel The embedding model used by the agent. [JsonProperty(\"embedding_model\")] public EmbeddingModel? EmbeddingModel { get; set; } Property Value EmbeddingModel LanguageModel The lanauge model used by the agent. [JsonProperty(\"language_model\")] public LanguageModel? LanguageModel { get; set; } Property Value LanguageModel Orchestrator The orchestration engine to use. [JsonProperty(\"orchestrator\")] public string? Orchestrator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.BlobStorageDataSourceMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.BlobStorageDataSourceMetadata.html",
    "title": "Class BlobStorageDataSourceMetadata | FoundationaLLM",
    "keywords": "Class BlobStorageDataSourceMetadata Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll Blob Storage DataSource public record BlobStorageDataSourceMetadata : DataSourceMetadata, IEquatable<DataSourceMetadata>, IEquatable<BlobStorageDataSourceMetadata> Inheritance object DataSourceMetadata BlobStorageDataSourceMetadata Implements IEquatable<DataSourceMetadata> IEquatable<BlobStorageDataSourceMetadata> Inherited Members DataSourceMetadata.Name DataSourceMetadata.Description DataSourceMetadata.UnderlyingImplementation DataSourceMetadata.FileType DataSourceMetadata.Authentication DataSourceMetadata.Container DataSourceMetadata.Files DataSourceMetadata.DataDescription DataSourceMetadata.Dialect DataSourceMetadata.IncludeTables DataSourceMetadata.ExcludeTables DataSourceMetadata.FewShotExampleCount DataSourceMetadata.RowLevelSecurityEnabled DataSourceMetadata.IndexName DataSourceMetadata.TopN DataSourceMetadata.EmbeddingFieldName DataSourceMetadata.TextFieldName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.DataSourceHubRequest.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.DataSourceHubRequest.html",
    "title": "Class DataSourceHubRequest | FoundationaLLM",
    "keywords": "Class DataSourceHubRequest Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll The format of a Data Source Hub Request. public record DataSourceHubRequest : IEquatable<DataSourceHubRequest> Inheritance object DataSourceHubRequest Implements IEquatable<DataSourceHubRequest> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSources List of data sources to be returned from the Data Source Hub. [JsonProperty(\"data_sources\")] public List<string>? DataSources { get; set; } Property Value List<string> SessionId The session ID. [JsonProperty(\"session_id\")] public string? SessionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.DataSourceHubResponse.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.DataSourceHubResponse.html",
    "title": "Class DataSourceHubResponse | FoundationaLLM",
    "keywords": "Class DataSourceHubResponse Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll Represents a response from the Data Source Hub. Includes a list of datasources and their configuration information. public record DataSourceHubResponse : IEquatable<DataSourceHubResponse> Inheritance object DataSourceHubResponse Implements IEquatable<DataSourceHubResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSources The list of data sources returned from a DataSource Hub request. [JsonProperty(\"data_sources\")] public List<DataSourceMetadata>? DataSources { get; set; } Property Value List<DataSourceMetadata>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.DataSourceMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.DataSourceMetadata.html",
    "title": "Class DataSourceMetadata | FoundationaLLM",
    "keywords": "Class DataSourceMetadata Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll Default set of properties for a DataSource returned from DataSource Hub. public record DataSourceMetadata : IEquatable<DataSourceMetadata> Inheritance object DataSourceMetadata Implements IEquatable<DataSourceMetadata> Derived BlobStorageDataSourceMetadata SQLDataSourceMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Authentication Authentication details for the data source. [JsonProperty(\"authentication\")] public Dictionary<string, string>? Authentication { get; set; } Property Value Dictionary<string, string> Container For blob storage, the container to search [JsonProperty(\"container\")] public string? Container { get; set; } Property Value string DataDescription Descriptor for the type of data in the data source. [JsonProperty(\"data_description\")] public string? DataDescription { get; set; } Property Value string Examples Survey data for a CSV file that contains survey results. Description Description of data source [JsonProperty(\"description\")] public string? Description { get; set; } Property Value string Dialect The dialect of the data source (SQL, etc) [JsonProperty(\"dialect\")] public string? Dialect { get; set; } Property Value string EmbeddingFieldName (Optional) The name of the field to use for embedding in the Search Service. [JsonProperty(\"embedding_field_name\")] public string? EmbeddingFieldName { get; set; } Property Value string ExcludeTables For a SQL data source, the tables to exclude from processing. [JsonProperty(\"exclude_tables\")] public List<string>? ExcludeTables { get; set; } Property Value List<string> FewShotExampleCount List of few shot examples for the prompt processing. [JsonProperty(\"few_shot_example_count\")] public int? FewShotExampleCount { get; set; } Property Value int? FileType File type of data source [JsonProperty(\"file_type\")] public string? FileType { get; set; } Property Value string Files For blob storage, the files to query. [JsonProperty(\"files\")] public List<string>? Files { get; set; } Property Value List<string> IncludeTables For a SQL data source, the tables to include for processing. [JsonProperty(\"include_tables\")] public List<string>? IncludeTables { get; set; } Property Value List<string> IndexName The name of the index for Search Service configuration. [JsonProperty(\"index_name\")] public string? IndexName { get; set; } Property Value string Name Name of data source [JsonProperty(\"name\")] public string? Name { get; set; } Property Value string RowLevelSecurityEnabled Flag indicating if row level security is enabled. [JsonProperty(\"row_level_security_enabled\")] public bool? RowLevelSecurityEnabled { get; set; } Property Value bool? TextFieldName (Optional) The name of the field to use for raw text in the Search Service. [JsonProperty(\"text_field_name\")] public string? TextFieldName { get; set; } Property Value string TopN (Optional) The number of rows to return from the Search Service. [JsonProperty(\"top_n\")] public int? TopN { get; set; } Property Value int? UnderlyingImplementation Type of data source [JsonProperty(\"underlying_implementation\")] public string? UnderlyingImplementation { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.PromptHubRequest.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.PromptHubRequest.html",
    "title": "Class PromptHubRequest | FoundationaLLM",
    "keywords": "Class PromptHubRequest Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll The format of a Prompt Hub request. public record PromptHubRequest : IEquatable<PromptHubRequest> Inheritance object PromptHubRequest Implements IEquatable<PromptHubRequest> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName Name of the agent for which the prompt values should be retrieved from the Prompt Hub. [JsonProperty(\"agent_name\")] public string? AgentName { get; set; } Property Value string PromptName Name of the prompt for which the prompt values should be retrieved from the Prompt Hub. [JsonProperty(\"prompt_name\")] public string? PromptName { get; set; } Property Value string SessionId The session ID. [JsonProperty(\"session_id\")] public string? SessionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.PromptHubResponse.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.PromptHubResponse.html",
    "title": "Class PromptHubResponse | FoundationaLLM",
    "keywords": "Class PromptHubResponse Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll Response from a Prompt Hub request. public record PromptHubResponse : IEquatable<PromptHubResponse> Inheritance object PromptHubResponse Implements IEquatable<PromptHubResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Prompt The prompt metadata object returned from a Prompt Hub request. [JsonProperty(\"prompt\")] public PromptMetadata? Prompt { get; set; } Property Value PromptMetadata"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.PromptMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.PromptMetadata.html",
    "title": "Class PromptMetadata | FoundationaLLM",
    "keywords": "Class PromptMetadata Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll PromptMetaData record public record PromptMetadata : IEquatable<PromptMetadata> Inheritance object PromptMetadata Implements IEquatable<PromptMetadata> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name Name of the prompt. [JsonProperty(\"name\")] public string? Name { get; set; } Property Value string PromptPrefix Text of the prompt prefix to be assigned to an agent. [JsonProperty(\"prompt_prefix\")] public string? PromptPrefix { get; set; } Property Value string PromptSuffix Text of the prompt suffix to be assigned to an agent. [JsonProperty(\"prompt_suffix\")] public string? PromptSuffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.SQLDataSourceMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.SQLDataSourceMetadata.html",
    "title": "Class SQLDataSourceMetadata | FoundationaLLM",
    "keywords": "Class SQLDataSourceMetadata Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Assembly FoundationaLLM.AgentFactory.Core.dll SQL DataSource public record SQLDataSourceMetadata : DataSourceMetadata, IEquatable<DataSourceMetadata>, IEquatable<SQLDataSourceMetadata> Inheritance object DataSourceMetadata SQLDataSourceMetadata Implements IEquatable<DataSourceMetadata> IEquatable<SQLDataSourceMetadata> Inherited Members DataSourceMetadata.Name DataSourceMetadata.Description DataSourceMetadata.UnderlyingImplementation DataSourceMetadata.FileType DataSourceMetadata.Authentication DataSourceMetadata.Container DataSourceMetadata.Files DataSourceMetadata.DataDescription DataSourceMetadata.Dialect DataSourceMetadata.IncludeTables DataSourceMetadata.ExcludeTables DataSourceMetadata.FewShotExampleCount DataSourceMetadata.RowLevelSecurityEnabled DataSourceMetadata.IndexName DataSourceMetadata.TopN DataSourceMetadata.EmbeddingFieldName DataSourceMetadata.TextFieldName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Messages.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models.Messages | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models.Messages Classes AgentHubRequest Represents a request that is sent to an AgentHub to get lists of agents. AgentHubResponse The response returned from the Agent Hub. AgentMetadata The information about an agent returned from the Agent Hub. BlobStorageDataSourceMetadata Blob Storage DataSource DataSourceHubRequest The format of a Data Source Hub Request. DataSourceHubResponse Represents a response from the Data Source Hub. Includes a list of datasources and their configuration information. DataSourceMetadata Default set of properties for a DataSource returned from DataSource Hub. PromptHubRequest The format of a Prompt Hub request. PromptHubResponse Response from a Prompt Hub request. PromptMetadata PromptMetaData record SQLDataSourceMetadata SQL DataSource"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html",
    "title": "Class BlobStorageConfiguration | FoundationaLLM",
    "keywords": "Class BlobStorageConfiguration Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.AgentFactory.Core.dll Blob storage configuration settings. public class BlobStorageConfiguration Inheritance object BlobStorageConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionStringSecretName The connection string key vault secret name that is retrieved from key vault. [JsonProperty(\"connection_string_secret\")] public string? ConnectionStringSecretName { get; set; } Property Value string ContainerName The name of the container [JsonProperty(\"container\")] public string? ContainerName { get; set; } Property Value string Files The list of files to get [JsonProperty(\"files\")] public List<string>? Files { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.CSVFileConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.CSVFileConfiguration.html",
    "title": "Class CSVFileConfiguration | FoundationaLLM",
    "keywords": "Class CSVFileConfiguration Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.AgentFactory.Core.dll CSV file configuration settings. public class CSVFileConfiguration Inheritance object CSVFileConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PathValueIsSecret Flag indicating whether the source file path is a secret value that must be looked up, or if it is a simple path that can be passed in as is. [JsonProperty(\"path_value_is_secret\")] public bool PathValueIsSecret { get; set; } Property Value bool SourceFilePath The location of the file. [JsonProperty(\"source_file_path\")] public string? SourceFilePath { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html",
    "title": "Class SQLDatabaseConfiguration | FoundationaLLM",
    "keywords": "Class SQLDatabaseConfiguration Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.AgentFactory.Core.dll SQL Database configuration settings. public class SQLDatabaseConfiguration Inheritance object SQLDatabaseConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DatabaseName The name of the database on the server. [JsonProperty(\"database_name\")] public string? DatabaseName { get; set; } Property Value string Dialect The SQL dialect [JsonProperty(\"dialect\")] public string? Dialect { get; set; } Property Value string ExcludeTables List of tables to allow access to in the database. [JsonProperty(\"exclude_tables\")] public List<string> ExcludeTables { get; set; } Property Value List<string> FewShotExampleCount The number of rows from each table to provide as examples to the language model. [JsonProperty(\"few_shot_example_count\")] public int FewShotExampleCount { get; set; } Property Value int Host The database server host name. [JsonProperty(\"host\")] public string? Host { get; set; } Property Value string IncludeTables List of tables to allow access to in the database. [JsonProperty(\"include_tables\")] public List<string> IncludeTables { get; set; } Property Value List<string> PasswordSecretSettingKeyName The name of the secret in Key Vault from where the password can be retrieved. [JsonProperty(\"password_secret_setting_key_name\")] public string? PasswordSecretSettingKeyName { get; set; } Property Value string Port The port number of the database on the host. [JsonProperty(\"port\")] public int Port { get; set; } Property Value int RowLevelSecurityEnabled Flag indicating whether row level security is enabled. [JsonProperty(\"row_level_security_enabled\")] public bool RowLevelSecurityEnabled { get; set; } Property Value bool Username The username for connecting to the database. [JsonProperty(\"username\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html",
    "title": "Class SearchServiceConfiguration | FoundationaLLM",
    "keywords": "Class SearchServiceConfiguration Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.AgentFactory.Core.dll Search Service configuration settings. public class SearchServiceConfiguration Inheritance object SearchServiceConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingFieldName (Optional) The name of the field to use for embedding in the Search Service. [JsonProperty(\"embedding_field_name\")] public string? EmbeddingFieldName { get; set; } Property Value string Endpoint The endpoint of the Search Service [JsonProperty(\"endpoint\")] public string? Endpoint { get; set; } Property Value string IndexName The name of the index in Azure AI Search [JsonProperty(\"index_name\")] public string? IndexName { get; set; } Property Value string KeySecret The name of key vault secret containing the access key [JsonProperty(\"key_secret\")] public string? KeySecret { get; set; } Property Value string TextFieldName (Optional) The name of the field to use for raw text in the Search Service. [JsonProperty(\"text_field_name\")] public string? TextFieldName { get; set; } Property Value string TopN (Optional) The number of rows to return from the index search [JsonProperty(\"top_n\")] public int? TopN { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations Classes BlobStorageConfiguration Blob storage configuration settings. CSVFileConfiguration CSV file configuration settings. SQLDatabaseConfiguration SQL Database configuration settings. SearchServiceConfiguration Search Service configuration settings."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.LLMOrchestrationCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.LLMOrchestrationCompletionRequest.html",
    "title": "Class LLMOrchestrationCompletionRequest | FoundationaLLM",
    "keywords": "Class LLMOrchestrationCompletionRequest Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Orchestration completion request. Contains the metadata needed by the orchestration services to build and execute completions. public class LLMOrchestrationCompletionRequest : LLMOrchestrationRequest Inheritance object LLMOrchestrationRequest LLMOrchestrationCompletionRequest Inherited Members LLMOrchestrationRequest.SessionId LLMOrchestrationRequest.UserPrompt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Agent Agent metadata [JsonProperty(\"agent\")] public Agent? Agent { get; set; } Property Value Agent DataSourceMetadata Data source metadata [JsonProperty(\"data_source\")] public MetadataBase? DataSourceMetadata { get; set; } Property Value MetadataBase EmbeddingModel Embedding model metadata. [JsonProperty(\"embedding_model\")] public EmbeddingModel? EmbeddingModel { get; set; } Property Value EmbeddingModel LanguageModel Language model metadata. [JsonProperty(\"language_model\")] public LanguageModel? LanguageModel { get; set; } Property Value LanguageModel MessageHistory Message history list [JsonProperty(\"message_history\")] public List<MessageHistoryItem>? MessageHistory { get; set; } Property Value List<MessageHistoryItem>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.LLMOrchestrationCompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.LLMOrchestrationCompletionResponse.html",
    "title": "Class LLMOrchestrationCompletionResponse | FoundationaLLM",
    "keywords": "Class LLMOrchestrationCompletionResponse Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll LLMOrchestrationCompletionResponse class public class LLMOrchestrationCompletionResponse Inheritance object LLMOrchestrationCompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the FoundationaLLM agent. [JsonProperty(\"agent_name\")] public string? AgentName { get; set; } Property Value string Completion The completion response from the orchestration engine. [JsonProperty(\"completion\")] public string? Completion { get; set; } Property Value string CompletionTokens The number of tokens in the completion. [JsonProperty(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int PromptTemplate The prompt template used by the LLM. [JsonProperty(\"prompt_template\")] public string? PromptTemplate { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonProperty(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalCost Total cost of the completion execution. [JsonProperty(\"total_cost\")] public float TotalCost { get; set; } Property Value float TotalTokens Total tokens used. [JsonProperty(\"total_tokens\")] public int TotalTokens { get; set; } Property Value int UserPrompt The prompt received from the user. [JsonProperty(\"user_prompt\")] public string? UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.LLMOrchestrationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.LLMOrchestrationRequest.html",
    "title": "Class LLMOrchestrationRequest | FoundationaLLM",
    "keywords": "Class LLMOrchestrationRequest Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Base LLM orchestration request public class LLMOrchestrationRequest Inheritance object LLMOrchestrationRequest Derived LLMOrchestrationCompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SessionId The session ID. [JsonProperty(\"session_id\")] public string? SessionId { get; set; } Property Value string UserPrompt Prompt entered by the user. [JsonProperty(\"user_prompt\")] public string? UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.Agent.html",
    "title": "Class Agent | FoundationaLLM",
    "keywords": "Class Agent Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Agent metadata model. public class Agent : MetadataBase Inheritance object MetadataBase Agent Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptPrefix The prompt prefix to assign the agent. [JsonProperty(\"prompt_prefix\")] public string? PromptPrefix { get; set; } Property Value string PromptSuffix The prompt suffix to assign the agent. [JsonProperty(\"prompt_suffix\")] public string? PromptSuffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.BlobStorageDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.BlobStorageDataSource.html",
    "title": "Class BlobStorageDataSource | FoundationaLLM",
    "keywords": "Class BlobStorageDataSource Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Blob storage data source metadata model. public class BlobStorageDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase BlobStorageDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Blob storage configuration settings. [JsonProperty(\"configuration\")] public BlobStorageConfiguration? Configuration { get; set; } Property Value BlobStorageConfiguration"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.CSVFileDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.CSVFileDataSource.html",
    "title": "Class CSVFileDataSource | FoundationaLLM",
    "keywords": "Class CSVFileDataSource Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll CSV file data source metadata model. public class CSVFileDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase CSVFileDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration CSV file configuration settings metadata. [JsonProperty(\"configuration\")] public CSVFileConfiguration? Configuration { get; set; } Property Value CSVFileConfiguration"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "keywords": "Class DataSourceBase Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Data Source base class. public class DataSourceBase : MetadataBase Inheritance object MetadataBase DataSourceBase Derived BlobStorageDataSource CSVFileDataSource SQLDatabaseDataSource SearchServiceDataSource Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataDescription Discriptor for the type of data in the data source. [JsonProperty(\"data_description\")] public string? DataDescription { get; set; } Property Value string Examples Survey data for a CSV file that contains survey results."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.EmbeddingModel.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.EmbeddingModel.html",
    "title": "Class EmbeddingModel | FoundationaLLM",
    "keywords": "Class EmbeddingModel Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll public class EmbeddingModel Inheritance object EmbeddingModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChunkSize The chunk size to use when creating vectors from the embedding model. [JsonProperty(\"chunk_size\")] public int ChunkSize { get; set; } Property Value int Deployment Name of the embedding model deployment. [JsonProperty(\"deployment\")] public string? Deployment { get; set; } Property Value string Model Name of the embedding model. [JsonProperty(\"model\")] public string? Model { get; set; } Property Value string Provider The provider of the emberdding model. [JsonProperty(\"provider\")] public string? Provider { get; set; } Property Value string Type The type of the embedding model. [JsonProperty(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.LanguageModel.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.LanguageModel.html",
    "title": "Class LanguageModel | FoundationaLLM",
    "keywords": "Class LanguageModel Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Language model metadata model. public class LanguageModel Inheritance object LanguageModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Provider Provider of the language model. [JsonProperty(\"provider\")] public string? Provider { get; set; } Property Value string Temperature Temperature value to assign on the language model. This indicates the \"degree of creativity\" the model can use when generating completions. [JsonProperty(\"temperature\")] [RegularExpression(\"^(?:0?(?:\\\\.\\\\d)?|1(\\\\.0?)?)$\", ErrorMessage = \"The temperature values must be between 0 and 1.\")] public float Temperature { get; set; } Property Value float Type Type property. [JsonProperty(\"type\")] public string? Type { get; set; } Property Value string UseChat Flag indicating whether or not to use the chat model. [JsonProperty(\"use_chat\")] public bool UseChat { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.LanguageModelProvider.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.LanguageModelProvider.html",
    "title": "Class LanguageModelProvider | FoundationaLLM",
    "keywords": "Class LanguageModelProvider Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Enumerator of the Langauge Model providers. public class LanguageModelProvider Inheritance object LanguageModelProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields MICROSOFT Microsoft public static string MICROSOFT Field Value string OPENAI OpenAI public static string OPENAI Field Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.LanguageModelType.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.LanguageModelType.html",
    "title": "Class LanguageModelType | FoundationaLLM",
    "keywords": "Class LanguageModelType Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Enumerator of the Language Model types. public class LanguageModelType Inheritance object LanguageModelType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields OPENAI OpenAI public static string OPENAI Field Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.MetadataBase.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.MetadataBase.html",
    "title": "Class MetadataBase | FoundationaLLM",
    "keywords": "Class MetadataBase Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Metadata model base class. public class MetadataBase Inheritance object MetadataBase Derived AgentMetadata Agent DataSourceBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Description property. [JsonProperty(\"description\")] public string? Description { get; set; } Property Value string Name Name property. [JsonProperty(\"name\")] public string? Name { get; set; } Property Value string Type Type property. [JsonProperty(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.SQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.SQLDatabaseDataSource.html",
    "title": "Class SQLDatabaseDataSource | FoundationaLLM",
    "keywords": "Class SQLDatabaseDataSource Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll SQL Database data source metadata model. public class SQLDatabaseDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SQLDatabaseDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration SQL Database configuration settings. [JsonProperty(\"configuration\")] public SQLDatabaseConfiguration? Configuration { get; set; } Property Value SQLDatabaseConfiguration"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.SearchServiceDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.SearchServiceDataSource.html",
    "title": "Class SearchServiceDataSource | FoundationaLLM",
    "keywords": "Class SearchServiceDataSource Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Assembly FoundationaLLM.AgentFactory.Core.dll Search service data source metadata model. public class SearchServiceDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SearchServiceDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonProperty(\"configuration\")] public SearchServiceConfiguration? Configuration { get; set; } Property Value SearchServiceConfiguration"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Classes Agent Agent metadata model. BlobStorageDataSource Blob storage data source metadata model. CSVFileDataSource CSV file data source metadata model. DataSourceBase Data Source base class. EmbeddingModel LanguageModel Language model metadata model. LanguageModelProvider Enumerator of the Langauge Model providers. LanguageModelType Enumerator of the Language Model types. MetadataBase Metadata model base class. SQLDatabaseDataSource SQL Database data source metadata model. SearchServiceDataSource Search service data source metadata model."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.Orchestration.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models.Orchestration Namespaces FoundationaLLM.AgentFactory.Core.Models.Orchestration.DataSourceConfigurations FoundationaLLM.AgentFactory.Core.Models.Orchestration.Metadata Classes LLMOrchestrationCompletionRequest Orchestration completion request. Contains the metadata needed by the orchestration services to build and execute completions. LLMOrchestrationCompletionResponse LLMOrchestrationCompletionResponse class LLMOrchestrationRequest Base LLM orchestration request"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Models.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Models Namespaces FoundationaLLM.AgentFactory.Core.Models.ConfigurationOptions FoundationaLLM.AgentFactory.Core.Models.Messages FoundationaLLM.AgentFactory.Core.Models.Orchestration"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AgentFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AgentFactoryService.html",
    "title": "Class AgentFactoryService | FoundationaLLM",
    "keywords": "Class AgentFactoryService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll AgentFactoryService class. public class AgentFactoryService : IAgentFactoryService Inheritance object AgentFactoryService Implements IAgentFactoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentFactoryService(IEnumerable<ILLMOrchestrationService>, IAgentHubAPIService, IPromptHubAPIService, IDataSourceHubAPIService, ILogger<AgentFactoryService>) Constructor for the Agent Factory Service. public AgentFactoryService(IEnumerable<ILLMOrchestrationService> orchestrationServices, IAgentHubAPIService agentHubService, IPromptHubAPIService promptHubService, IDataSourceHubAPIService dataSourceHubService, ILogger<AgentFactoryService> logger) Parameters orchestrationServices IEnumerable<ILLMOrchestrationService> agentHubService IAgentHubAPIService promptHubService IPromptHubAPIService dataSourceHubService IDataSourceHubAPIService logger ILogger<AgentFactoryService> Properties Status Returns the status of the Semantic Kernel. public string Status { get; } Property Value string Methods GetCompletion(CompletionRequest) Retrieve a completion from the configured orchestration service. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetSummary(SummaryRequest) Retrieve a summarization for the passed in prompt from the orchestration service. public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest Returns Task<SummaryResponse>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AgentHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.AgentHubAPIService.html",
    "title": "Class AgentHubAPIService | FoundationaLLM",
    "keywords": "Class AgentHubAPIService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll Class for the Agent Hub API Service. public class AgentHubAPIService : IAgentHubAPIService Inheritance object AgentHubAPIService Implements IAgentHubAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentHubAPIService(IOptions<AgentHubSettings>, ILogger<AgentHubAPIService>, IHttpClientFactoryService) Constructor for the Agent Hub API Service public AgentHubAPIService(IOptions<AgentHubSettings> options, ILogger<AgentHubAPIService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<AgentHubSettings> logger ILogger<AgentHubAPIService> httpClientFactoryService IHttpClientFactoryService Methods ResolveRequest(string, string) Gets a set of agents from the Agent Hub based on the prompt and user context. public Task<AgentHubResponse> ResolveRequest(string userPrompt, string sessionId) Parameters userPrompt string The user prompt to resolve. sessionId string The session ID. Returns Task<AgentHubResponse> Status() Gets the status of the Agent Hub API public Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.DataSourceHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.DataSourceHubAPIService.html",
    "title": "Class DataSourceHubAPIService | FoundationaLLM",
    "keywords": "Class DataSourceHubAPIService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll Class for the Data Source Hub API Service public class DataSourceHubAPIService : IDataSourceHubAPIService Inheritance object DataSourceHubAPIService Implements IDataSourceHubAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceHubAPIService(IOptions<DataSourceHubSettings>, ILogger<DataSourceHubAPIService>, IHttpClientFactoryService) Constructor of the DataSource Hub API Service public DataSourceHubAPIService(IOptions<DataSourceHubSettings> options, ILogger<DataSourceHubAPIService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<DataSourceHubSettings> logger ILogger<DataSourceHubAPIService> httpClientFactoryService IHttpClientFactoryService Methods ResolveRequest(List<string>, string) Gets a list of DataSources from the DataSource Hub public Task<DataSourceHubResponse> ResolveRequest(List<string> sources, string sessionId) Parameters sources List<string> The data sources to resolve. sessionId string The session ID. Returns Task<DataSourceHubResponse> Status() Gets the status of the DataSource Hub API public Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.PromptHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.PromptHubAPIService.html",
    "title": "Class PromptHubAPIService | FoundationaLLM",
    "keywords": "Class PromptHubAPIService Namespace FoundationaLLM.AgentFactory.Core.Services Assembly FoundationaLLM.AgentFactory.Core.dll Class for the PromptHub API Service public class PromptHubAPIService : IPromptHubAPIService Inheritance object PromptHubAPIService Implements IPromptHubAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PromptHubAPIService(IOptions<PromptHubSettings>, ILogger<PromptHubAPIService>, IHttpClientFactoryService) Constructor for the PromptHub API Service public PromptHubAPIService(IOptions<PromptHubSettings> options, ILogger<PromptHubAPIService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<PromptHubSettings> logger ILogger<PromptHubAPIService> httpClientFactoryService IHttpClientFactoryService Methods ResolveRequest(string, string, string) Used to get prompts for a target agent and user context. public Task<PromptHubResponse> ResolveRequest(string agentName, string sessionId, string promptName = \"default\") Parameters agentName string Name of the agent for which to retrieve prompt values. sessionId string The session ID. promptName string Name of the prompt for which to retrieve prompt values. Returns Task<PromptHubResponse> Returns a PromptHubResponse object containing the list of prompts for the specified agent. Status() Gets the status of the Prompt Hub API public Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.Services.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core.Services Classes AgentFactoryService AgentFactoryService class. AgentHubAPIService Class for the Agent Hub API Service. DataSourceHubAPIService Class for the Data Source Hub API Service PromptHubAPIService Class for the PromptHub API Service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Core.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Core.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Core Namespaces FoundationaLLM.AgentFactory.Core.Agents FoundationaLLM.AgentFactory.Core.Interfaces FoundationaLLM.AgentFactory.Core.Models FoundationaLLM.AgentFactory.Core.Services"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILLMOrchestrationService.html",
    "title": "Interface ILLMOrchestrationService | FoundationaLLM",
    "keywords": "Interface ILLMOrchestrationService Namespace FoundationaLLM.AgentFactory.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll LLM Orchestration Service interface public interface ILLMOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Flag indicating if the orchestration service has been initialized. bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMOrchestrationCompletionRequest) Method for retrieving a completion from the orchestration service. Task<LLMOrchestrationCompletionResponse> GetCompletion(LLMOrchestrationCompletionRequest request) Parameters request LLMOrchestrationCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMOrchestrationCompletionResponse> GetSummary(LLMOrchestrationRequest) Method for retrieving a string summarizing text passed into the function. Task<string> GetSummary(LLMOrchestrationRequest orchestrationRequest) Parameters orchestrationRequest LLMOrchestrationRequest TThe orchestration request that includes the text to summarize. Returns Task<string> Returns a string containing the summary."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ILangChainService.html",
    "title": "Interface ILangChainService | FoundationaLLM",
    "keywords": "Interface ILangChainService Namespace FoundationaLLM.AgentFactory.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface for the LangChain Orchestration Service public interface ILangChainService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.IsInitialized ILLMOrchestrationService.GetCompletion(LLMOrchestrationCompletionRequest) ILLMOrchestrationService.GetSummary(LLMOrchestrationRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "keywords": "Interface ISemanticKernelService Namespace FoundationaLLM.AgentFactory.Interfaces Assembly FoundationaLLM.AgentFactory.Core.dll Interface to define the core methods of a Semantic Kernal Service public interface ISemanticKernelService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.IsInitialized ILLMOrchestrationService.GetCompletion(LLMOrchestrationCompletionRequest) ILLMOrchestrationService.GetSummary(LLMOrchestrationRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AddMemory(object, string, Action<object, float[]>) Adds an item to memory Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object itemName string vectorizer Action<object, float[]> Returns Task RemoveMemory(object) Removes an item from memory Task RemoveMemory(object item) Parameters item object Returns Task"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Interfaces.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Interfaces Interfaces ILLMOrchestrationService LLM Orchestration Service interface ILangChainService Interface for the LangChain Orchestration Service ISemanticKernelService Interface to define the core methods of a Semantic Kernal Service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.AgentHubSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.AgentHubSettings.html",
    "title": "Class AgentHubSettings | FoundationaLLM",
    "keywords": "Class AgentHubSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a AgentHub service public class AgentHubSettings : SettingsBase Inheritance object SettingsBase AgentHubSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.DataSourceHubSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.DataSourceHubSettings.html",
    "title": "Class DataSourceHubSettings | FoundationaLLM",
    "keywords": "Class DataSourceHubSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a DataSourceHub service public class DataSourceHubSettings : SettingsBase Inheritance object SettingsBase DataSourceHubSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.LangChainServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.LangChainServiceSettings.html",
    "title": "Class LangChainServiceSettings | FoundationaLLM",
    "keywords": "Class LangChainServiceSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a LangChain Service public class LangChainServiceSettings : SettingsBase Inheritance object SettingsBase LangChainServiceSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.PromptHubSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.PromptHubSettings.html",
    "title": "Class PromptHubSettings | FoundationaLLM",
    "keywords": "Class PromptHubSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a PromptHub Service public class PromptHubSettings : SettingsBase Inheritance object SettingsBase PromptHubSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Assembly FoundationaLLM.AgentFactory.Core.dll The settings configuration options for a SemanticKernalService public class SemanticKernelServiceSettings : SettingsBase Inheritance object SettingsBase SemanticKernelServiceSettings Inherited Members SettingsBase.APIUrl SettingsBase.APIKey object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Models.ConfigurationOptions Classes AgentHubSettings The settings configuration options for a AgentHub service DataSourceHubSettings The settings configuration options for a DataSourceHub service LangChainServiceSettings The settings configuration options for a LangChain Service PromptHubSettings The settings configuration options for a PromptHub Service SemanticKernelServiceSettings The settings configuration options for a SemanticKernalService"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.Orchestration.LLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.Orchestration.LLMOrchestrationService.html",
    "title": "Enum LLMOrchestrationService | FoundationaLLM",
    "keywords": "Enum LLMOrchestrationService Namespace FoundationaLLM.AgentFactory.Models.Orchestration Assembly FoundationaLLM.AgentFactory.Core.dll Orchestration service enumerator. public enum LLMOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields LangChain = 0 LangChain orchestration service SemanticKernel = 1 SemanticKernel orchestration service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.Orchestration.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Models.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Models.Orchestration Enums LLMOrchestrationService Orchestration service enumerator."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Models.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Models.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Models Namespaces FoundationaLLM.AgentFactory.Models.ConfigurationOptions FoundationaLLM.AgentFactory.Models.Orchestration"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Services.LangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Services.LangChainService.html",
    "title": "Class LangChainService | FoundationaLLM",
    "keywords": "Class LangChainService Namespace FoundationaLLM.AgentFactory.Services Assembly FoundationaLLM.AgentFactory.Core.dll The LangChain orchestration service. public class LangChainService : ILangChainService, ILLMOrchestrationService Inheritance object LangChainService Implements ILangChainService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LangChainService(IOptions<LangChainServiceSettings>, ILogger<LangChainService>, IHttpClientFactoryService) LangChain Orchestration Service public LangChainService(IOptions<LangChainServiceSettings> options, ILogger<LangChainService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<LangChainServiceSettings> logger ILogger<LangChainService> httpClientFactoryService IHttpClientFactoryService Properties IsInitialized Flag indicating whether the orchestration service has been initialized. public bool IsInitialized { get; } Property Value bool Methods GetCompletion(LLMOrchestrationCompletionRequest) Executes a completion request against the orchestration service. public Task<LLMOrchestrationCompletionResponse> GetCompletion(LLMOrchestrationCompletionRequest request) Parameters request LLMOrchestrationCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMOrchestrationCompletionResponse> Returns a completion response from the orchestration engine. GetSummary(LLMOrchestrationRequest) Summarizes the input text. public Task<string> GetSummary(LLMOrchestrationRequest orchestrationRequest) Parameters orchestrationRequest LLMOrchestrationRequest The orchestration request that includes the text to summarize. Returns Task<string> Returns a summary of the input text."
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "keywords": "Class SemanticKernelService Namespace FoundationaLLM.AgentFactory.Services Assembly FoundationaLLM.AgentFactory.Core.dll The FoundationaLLM Semantic Kernal Service public class SemanticKernelService : ISemanticKernelService, ILLMOrchestrationService Inheritance object SemanticKernelService Implements ISemanticKernelService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelService(IOptions<SemanticKernelServiceSettings>, ILogger<SemanticKernelService>, IHttpClientFactoryService) Constructor for the Semantic Kernal Service public SemanticKernelService(IOptions<SemanticKernelServiceSettings> options, ILogger<SemanticKernelService> logger, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<SemanticKernelServiceSettings> logger ILogger<SemanticKernelService> httpClientFactoryService IHttpClientFactoryService Properties IsInitialized Checks the Semantic Service returns a call to signal it is initialized and ready for requests. public bool IsInitialized { get; } Property Value bool Methods AddMemory(object, string, Action<object, float[]>) Adds an item to memory public Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object itemName string vectorizer Action<object, float[]> Returns Task Exceptions NotImplementedException GetCompletion(LLMOrchestrationCompletionRequest) Gets a completion from the Semantic Kernel service. public Task<LLMOrchestrationCompletionResponse> GetCompletion(LLMOrchestrationCompletionRequest request) Parameters request LLMOrchestrationCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMOrchestrationCompletionResponse> Returns a completion response from the orchestration engine. GetSummary(LLMOrchestrationRequest) Gets a summary from the Semantic Kernel service. public Task<string> GetSummary(LLMOrchestrationRequest orchestrationRequest) Parameters orchestrationRequest LLMOrchestrationRequest The orchestration request that includes the text to summarize. Returns Task<string> Returns a summary of the input text. RemoveMemory(object) Removes an item from memory public Task RemoveMemory(object item) Parameters item object Returns Task Exceptions NotImplementedException"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.Services.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.Services.html",
    "title": "Namespace FoundationaLLM.AgentFactory.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory.Services Classes LangChainService The LangChain orchestration service. SemanticKernelService The FoundationaLLM Semantic Kernal Service"
  },
  "api/dotnet/FoundationaLLM.AgentFactory.html": {
    "href": "api/dotnet/FoundationaLLM.AgentFactory.html",
    "title": "Namespace FoundationaLLM.AgentFactory | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AgentFactory Namespaces FoundationaLLM.AgentFactory.API FoundationaLLM.AgentFactory.Core FoundationaLLM.AgentFactory.Interfaces FoundationaLLM.AgentFactory.Models FoundationaLLM.AgentFactory.Services"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html",
    "title": "Class APIKeyAuthenticationAttribute | FoundationaLLM",
    "keywords": "Class APIKeyAuthenticationAttribute Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Service filter attribute for X-API-Key header validation. public class APIKeyAuthenticationAttribute : ServiceFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Inheritance object Attribute ServiceFilterAttribute APIKeyAuthenticationAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members ServiceFilterAttribute.CreateInstance(IServiceProvider) ServiceFilterAttribute.Order ServiceFilterAttribute.ServiceType ServiceFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIKeyAuthenticationAttribute() Initializes a new instance of the APIKeyAuthenticationAttribute class. public APIKeyAuthenticationAttribute()"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html",
    "title": "Class APIKeyAuthenticationFilter | FoundationaLLM",
    "keywords": "Class APIKeyAuthenticationFilter Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Auth filter for X-API-Key header validation. public class APIKeyAuthenticationFilter : IAuthorizationFilter, IFilterMetadata Inheritance object APIKeyAuthenticationFilter Implements IAuthorizationFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Constructors APIKeyAuthenticationFilter(IAPIKeyValidationService) Auth filter for X-API-Key header validation. public APIKeyAuthenticationFilter(IAPIKeyValidationService apiKeyValidation) Parameters apiKeyValidation IAPIKeyValidationService Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Methods OnAuthorization(AuthorizationFilterContext) Override for default OnAuthorization step to set UnauthorizedObjectResult on the context if the required header is missing or invalid. public void OnAuthorization(AuthorizationFilterContext context) Parameters context AuthorizationFilterContext The context containing the HTTP request headers."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html",
    "title": "Class APIKeyValidationService | FoundationaLLM",
    "keywords": "Class APIKeyValidationService Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Implements the IAPIKeyValidationService interface. public class APIKeyValidationService : IAPIKeyValidationService Inheritance object APIKeyValidationService Implements IAPIKeyValidationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the APIKeyValidationService class. Constructors APIKeyValidationService(IOptions<APIKeyValidationSettings>) Implements the IAPIKeyValidationService interface. public APIKeyValidationService(IOptions<APIKeyValidationSettings> options) Parameters options IOptions<APIKeyValidationSettings> otions for the deployed API key validation service. Remarks Creates a new instance of the APIKeyValidationService class. Methods IsValid(string) Checks if an API key is valid or not. public bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean value representing the validity of the API key."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html",
    "title": "Class APIKeyValidationSettings | FoundationaLLM",
    "keywords": "Class APIKeyValidationSettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Represents settings for API key validation. public record APIKeyValidationSettings : IEquatable<APIKeyValidationSettings> Inheritance object APIKeyValidationSettings Implements IEquatable<APIKeyValidationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key. public required string APIKey { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPIKeySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPIKeySettings.html",
    "title": "Class DownstreamAPIKeySettings | FoundationaLLM",
    "keywords": "Class DownstreamAPIKeySettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Represents settings for downstream API key authentication. public record DownstreamAPIKeySettings : IEquatable<DownstreamAPIKeySettings> Inheritance object DownstreamAPIKeySettings Implements IEquatable<DownstreamAPIKeySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The value of the API key. public required string APIKey { get; init; } Property Value string APIUrl The URL of the downstream API. public required string APIUrl { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPISettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.DownstreamAPISettings.html",
    "title": "Class DownstreamAPISettings | FoundationaLLM",
    "keywords": "Class DownstreamAPISettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public record DownstreamAPISettings : IDownstreamAPISettings, IEquatable<DownstreamAPISettings> Inheritance object DownstreamAPISettings Implements IDownstreamAPISettings IEquatable<DownstreamAPISettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DownstreamAPIs A dictionary of downstream APIs with a base URL and API key for authentication. public required Dictionary<string, DownstreamAPIKeySettings> DownstreamAPIs { get; init; } Property Value Dictionary<string, DownstreamAPIKeySettings>"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Authentication Classes APIKeyAuthenticationAttribute Service filter attribute for X-API-Key header validation. APIKeyAuthenticationFilter Auth filter for X-API-Key header validation. APIKeyValidationService Implements the IAPIKeyValidationService interface. APIKeyValidationSettings Represents settings for API key validation. DownstreamAPIKeySettings Represents settings for downstream API key authentication. DownstreamAPISettings Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeyFilters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeyFilters.html",
    "title": "Class AppConfigurationKeyFilters | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyFilters Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys filters for app configuration setting namespaces. public static class AppConfigurationKeyFilters Inheritance object AppConfigurationKeyFilters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs The key filter for the FoundationaLLM:APIs:* app configuration settings. public const string FoundationaLLM_APIs = \"FoundationaLLM:APIs:*\" Field Value string FoundationaLLM_APIs_VectorizationAPI The key filter for the FoundationaLLM:APIs:VectorizationAPI:* app configuration settings. public const string FoundationaLLM_APIs_VectorizationAPI = \"FoundationaLLM:APIs:VectorizationAPI:*\" Field Value string FoundationaLLM_APIs_VectorizationWorker The key filter for the FoundationaLLM:APIs:VectorizationWorker:* app configuration settings. public const string FoundationaLLM_APIs_VectorizationWorker = \"FoundationaLLM:APIs:VectorizationWorker:*\" Field Value string FoundationaLLM_AgentFactory The key filter for the FoundationaLLM:AgentFactory:* app configuration settings. public const string FoundationaLLM_AgentFactory = \"FoundationaLLM:AgentFactory:*\" Field Value string FoundationaLLM_AzureContentSafety The key filter for the FoundationaLLM:AzureContentSafety:* app configuration settings. public const string FoundationaLLM_AzureContentSafety = \"FoundationaLLM:AzureContentSafety:*\" Field Value string FoundationaLLM_BlobStorageMemorySource The key filter for the FoundationaLLM:BlobStorageMemorySource:* app configuration settings. public const string FoundationaLLM_BlobStorageMemorySource = \"FoundationaLLM:CoreAPI:BlobStorageMemorySource:*\" Field Value string FoundationaLLM_Branding The key filter for the FoundationaLLM:Branding:* app configuration settings. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding:*\" Field Value string FoundationaLLM_CognitiveSearchMemorySource The key filter for the FoundationaLLM:CognitiveSearchMemorySource:* app configuration settings. public const string FoundationaLLM_CognitiveSearchMemorySource = \"FoundationaLLM:CognitiveSearchMemorySource:*\" Field Value string FoundationaLLM_CoreAPI_Entra The key filter for the FoundationaLLM:CoreAPI:Entra:* app configuration settings. public const string FoundationaLLM_CoreAPI_Entra = \"FoundationaLLM:CoreAPI:Entra:*\" Field Value string FoundationaLLM_CoreWorker The key filter for the FoundationaLLM:CoreWorker:* app configuration settings. public const string FoundationaLLM_CoreWorker = \"FoundationaLLM:CoreWorker:*\" Field Value string FoundationaLLM_CosmosDB The key filter for the FoundationaLLM:CosmosDB:* app configuration settings. public const string FoundationaLLM_CosmosDB = \"FoundationaLLM:CosmosDB:*\" Field Value string FoundationaLLM_DurableSystemPrompt The key filter for the FoundationaLLM:DurableSystemPrompt:* app configuration settings. public const string FoundationaLLM_DurableSystemPrompt = \"FoundationaLLM:DurableSystemPrompt:*\" Field Value string FoundationaLLM_ManagementAPI_Entra The key filter for the FoundationaLLM:ManagementAPI:Entra:* app configuration settings. public const string FoundationaLLM_ManagementAPI_Entra = \"FoundationaLLM:ManagementAPI:Entra:*\" Field Value string FoundationaLLM_Refinement The key filter for the FoundationaLLM:Refinement:* app configuration settings. public const string FoundationaLLM_Refinement = \"FoundationaLLM:Refinement:*\" Field Value string FoundationaLLM_Vectorization The key filter for the FoundationaLLM:Vectorization:* app configuration settings. public const string FoundationaLLM_Vectorization = \"FoundationaLLM:Vectorization:*\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeySections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeySections.html",
    "title": "Class AppConfigurationKeySections | FoundationaLLM",
    "keywords": "Class AppConfigurationKeySections Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys sections for app configuration setting namespaces. public static class AppConfigurationKeySections Inheritance object AppConfigurationKeySections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs_AgentFactoryAPI The key section for the FoundationaLLM:APIs:AgentFactoryAPI app configuration settings. public const string FoundationaLLM_APIs_AgentFactoryAPI = \"FoundationaLLM:APIs:AgentFactoryAPI\" Field Value string FoundationaLLM_APIs_AgentHubAPI The key section for the FoundationaLLM:APIs:AgentHubAPI app configuration settings. public const string FoundationaLLM_APIs_AgentHubAPI = \"FoundationaLLM:APIs:AgentHubAPI\" Field Value string FoundationaLLM_APIs_GatekeeperAPI The key section for the FoundationaLLM:APIs:GatekeeperAPI app configuration settings. public const string FoundationaLLM_APIs_GatekeeperAPI = \"FoundationaLLM:APIs:GatekeeperAPI\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_Configuration The key section for the FoundationaLLM:APIs:GatekeeperAPI:Configuration app configuration settings. public const string FoundationaLLM_APIs_GatekeeperAPI_Configuration = \"FoundationaLLM:APIs:GatekeeperAPI:Configuration\" Field Value string FoundationaLLM_APIs_LangChainAPI The key section for the FoundationaLLM:APIs:LangChainAPI app configuration settings. public const string FoundationaLLM_APIs_LangChainAPI = \"FoundationaLLM:APIs:LangChainAPI\" Field Value string FoundationaLLM_APIs_PromptHubAPI The key section for the FoundationaLLM:APIs:AgentFactoryAPI app configuration settings. public const string FoundationaLLM_APIs_PromptHubAPI = \"FoundationaLLM:APIs:PromptHubAPI\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI The key section for the FoundationaLLM:APIs:SemanticKernelAPI app configuration settings. public const string FoundationaLLM_APIs_SemanticKernelAPI = \"FoundationaLLM:APIs:SemanticKernelAPI\" Field Value string FoundationaLLM_APIs_VectorizationAPI The key section for the FoundationaLLM:APIs:VectorizationAPI app configuration settings. public const string FoundationaLLM_APIs_VectorizationAPI = \"FoundationaLLM:APIs:VectorizationAPI\" Field Value string FoundationaLLM_APIs_VectorizationWorker The key section for the FoundationaLLM:APIs:VectorizationWorker app configuration settings. public const string FoundationaLLM_APIs_VectorizationWorker = \"FoundationaLLM:APIs:VectorizationWorker\" Field Value string FoundationaLLM_AgentFactory The key section for the FoundationaLLM:AgentFactory app configuration settings. public const string FoundationaLLM_AgentFactory = \"FoundationaLLM:AgentFactory\" Field Value string FoundationaLLM_AzureContentSafety The key section for the FoundationaLLM:AzureContentSafety app configuration settings. public const string FoundationaLLM_AzureContentSafety = \"FoundationaLLM:AzureContentSafety\" Field Value string FoundationaLLM_BlobStorageMemorySource The key section for the FoundationaLLM:BlobStorageMemorySource app configuration settings. public const string FoundationaLLM_BlobStorageMemorySource = \"FoundationaLLM:CoreAPI:BlobStorageMemorySource\" Field Value string FoundationaLLM_Branding The key section for the FoundationaLLM:Branding app configuration settings. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding\" Field Value string FoundationaLLM_CognitiveSearchMemorySource The key section for the FoundationaLLM:CognitiveSearchMemorySource app configuration settings. public const string FoundationaLLM_CognitiveSearchMemorySource = \"FoundationaLLM:CognitiveSearchMemorySource\" Field Value string FoundationaLLM_CosmosDB The key section for the FoundationaLLM:CosmosDB app configuration settings. public const string FoundationaLLM_CosmosDB = \"FoundationaLLM:CosmosDB\" Field Value string FoundationaLLM_DurableSystemPrompt The key section for the FoundationaLLM:DurableSystemPrompt app configuration settings. public const string FoundationaLLM_DurableSystemPrompt = \"FoundationaLLM:DurableSystemPrompt\" Field Value string FoundationaLLM_Refinement The key section for the FoundationaLLM:Refinement app configuration settings. public const string FoundationaLLM_Refinement = \"FoundationaLLM:Refinement\" Field Value string FoundationaLLM_SemanticKernelAPI The key section for the FoundationaLLM:SemanticKernelAPI app configuration settings. public const string FoundationaLLM_SemanticKernelAPI = \"FoundationaLLM:SemanticKernelAPI\" Field Value string FoundationaLLM_Vectorization_Queues The key section for the FoundationaLLM:Vectorization:Queues app configuration settings. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_StateServiceSettings The key section for the FoundationaLLM:Vectorization:StateServiceSettings app configuration settings. public const string FoundationaLLM_Vectorization_StateServiceSettings = \"FoundationaLLM:Vectorization:StateServiceSettings\" Field Value string FoundationaLLM_Vectorization_WorkerSettings The key section for the FoundationaLLM:Vectorization:WorkerSettings app configuration settings. public const string FoundationaLLM_Vectorization_WorkerSettings = \"FoundationaLLM:Vectorization:WorkerSettings\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AppConfigurationKeys.html",
    "title": "Class AppConfigurationKeys | FoundationaLLM",
    "keywords": "Class AppConfigurationKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants of the keys for all app configuration settings. public static class AppConfigurationKeys Inheritance object AppConfigurationKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIs_AgentFactoryAPI_APIKey The key for the FoundationaLLM:APIs:AgentFactoryAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentFactoryAPI_APIKey = \"FoundationaLLM:APIs:AgentFactoryAPI:APIKey\" Field Value string FoundationaLLM_APIs_AgentFactoryAPI_APIUrl The key for the FoundationaLLM:APIs:AgentFactoryAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_AgentFactoryAPI_APIUrl = \"FoundationaLLM:APIs:AgentFactoryAPI:APIUrl\" Field Value string FoundationaLLM_APIs_AgentFactoryAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentFactoryAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_AgentFactoryAPI_ForceHttpsRedirection The key for the FoundationaLLM:APIs:AgentFactoryAPI:ForceHttpsRedirection app configuration setting. By default, the Agent Factory API forces HTTPS redirection. To override this behavior and allow it to handle HTTP requests, set this value to false. public const string FoundationaLLM_APIs_AgentFactoryAPI_ForceHttpsRedirection = \"FoundationaLLM:APIs:AgentFactoryAPI:ForceHttpsRedirection\" Field Value string FoundationaLLM_APIs_AgentHubAPI_APIKey The key for the FoundationaLLM:APIs:AgentHubAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentHubAPI_APIKey = \"FoundationaLLM:APIs:AgentHubAPI:APIKey\" Field Value string FoundationaLLM_APIs_AgentHubAPI_APIUrl The key for the FoundationaLLM:APIs:AgentHubAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_AgentHubAPI_APIUrl = \"FoundationaLLM:APIs:AgentHubAPI:APIUrl\" Field Value string FoundationaLLM_APIs_AgentHubAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_AgentHubAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_CoreAPI_APIUrl The key for the FoundationaLLM:APIs:CoreAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_CoreAPI_APIUrl = \"FoundationaLLM:APIs:CoreAPI:APIUrl\" Field Value string FoundationaLLM_APIs_CoreAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_CoreAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_APIKey The key for the FoundationaLLM:APIs:DataSourceHubAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_DataSourceHubAPI_APIKey = \"FoundationaLLM:APIs:DataSourceHubAPI:APIKey\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_APIUrl The key for the FoundationaLLM:APIs:DataSourceHubAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_DataSourceHubAPI_APIUrl = \"FoundationaLLM:APIs:DataSourceHubAPI:APIUrl\" Field Value string FoundationaLLM_APIs_DataSourceHubAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_DataSourceHubAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_APIKey The key for the FoundationaLLM:APIs:GatekeeperAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_GatekeeperAPI_APIKey = \"FoundationaLLM:APIs:GatekeeperAPI:APIKey\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_APIUrl The key for the FoundationaLLM:APIs:GatekeeperAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_GatekeeperAPI_APIUrl = \"FoundationaLLM:APIs:GatekeeperAPI:APIUrl\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_GatekeeperAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableAzureContentSafety The key for the FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety app configuration setting. By default, the Gatekeeper API has Azure Content Safety integration enabled. To disable this feature, set this value to false. public const string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableAzureContentSafety = \"FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableMicrosoftPresidio The key for the FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio app configuration setting. By default, the Gatekeeper API has Microsoft Presidio integration enabled. To disable this feature, set this value to false. public const string FoundationaLLM_APIs_GatekeeperAPI_Configuration_EnableMicrosoftPresidio = \"FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio\" Field Value string FoundationaLLM_APIs_GatekeeperAPI_ForceHttpsRedirection The key for the FoundationaLLM:APIs:GatekeeperAPI:ForceHttpsRedirection app configuration setting. By default, the Gatekeeper API forces HTTPS redirection. To override this behavior and allow it to handle HTTP requests, set this value to false. public const string FoundationaLLM_APIs_GatekeeperAPI_ForceHttpsRedirection = \"FoundationaLLM:APIs:GatekeeperAPI:ForceHttpsRedirection\" Field Value string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIKey The key for the FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIKey = \"FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey\" Field Value string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIUrl The key for the FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_GatekeeperIntegrationAPI_APIUrl = \"FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl\" Field Value string FoundationaLLM_APIs_LangChainAPI_APIKey The key for the FoundationaLLM:APIs:LangChainAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_LangChainAPI_APIKey = \"FoundationaLLM:APIs:LangChainAPI:APIKey\" Field Value string FoundationaLLM_APIs_LangChainAPI_APIUrl The key for the FoundationaLLM:APIs:LangChainAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_LangChainAPI_APIUrl = \"FoundationaLLM:APIs:LangChainAPI:APIUrl\" Field Value string FoundationaLLM_APIs_LangChainAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_LangChainAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_PromptHubAPI_APIKey The key for the FoundationaLLM:APIs:PromptHubAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_PromptHubAPI_APIKey = \"FoundationaLLM:APIs:PromptHubAPI:APIKey\" Field Value string FoundationaLLM_APIs_PromptHubAPI_APIUrl The key for the FoundationaLLM:APIs:PromptHubAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_PromptHubAPI_APIUrl = \"FoundationaLLM:APIs:PromptHubAPI:APIUrl\" Field Value string FoundationaLLM_APIs_PromptHubAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_PromptHubAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_APIKey The key for the FoundationaLLM:APIs:SemanticKernelAPI:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_SemanticKernelAPI_APIKey = \"FoundationaLLM:APIs:SemanticKernelAPI:APIKey\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_APIUrl The key for the FoundationaLLM:APIs:SemanticKernelAPI:APIUrl app configuration setting. public const string FoundationaLLM_APIs_SemanticKernelAPI_APIUrl = \"FoundationaLLM:APIs:SemanticKernelAPI:APIUrl\" Field Value string FoundationaLLM_APIs_SemanticKernelAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_SemanticKernelAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_VectorizationAPI_AppInsightsConnectionString The key for the FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_VectorizationAPI_AppInsightsConnectionString = \"FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIs_VectorizationWorker_AppInsightsConnectionString The key for the FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_APIs_VectorizationWorker_AppInsightsConnectionString = \"FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString\" Field Value string FoundationaLLM_AgentHub_AgentMetadata_StorageContainer The key for the FoundationaLLM:AgentHub:AgentMetadata:StorageContainer app configuration setting. public const string FoundationaLLM_AgentHub_AgentMetadata_StorageContainer = \"FoundationaLLM:AgentHub:AgentMetadata:StorageContainer\" Field Value string FoundationaLLM_AgentHub_StorageManager_BlobStorage_ConnectionString The key for the FoundationaLLM:AgentHub:StorageManager:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_AgentHub_StorageManager_BlobStorage_ConnectionString = \"FoundationaLLM:AgentHub:StorageManager:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_AllowAgentHint_FeatureFlag This feature flag controls whether the User Portal UI allows users to select an agent hint. public const string FoundationaLLM_AllowAgentHint_FeatureFlag = \"FoundationaLLM-AllowAgentHint\" Field Value string FoundationaLLM_AppConfig_ConnectionString The key for the FoundationaLLM:AppConfig:ConnectionString app configuration setting. This is Key Vault reference. public const string FoundationaLLM_AppConfig_ConnectionString = \"FoundationaLLM:AppConfig:ConnectionString\" Field Value string FoundationaLLM_AzureContentSafety_APIKey The key for the FoundationaLLM:AzureContentSafety:APIKey app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_AzureContentSafety_APIKey = \"FoundationaLLM:AzureContentSafety:APIKey\" Field Value string FoundationaLLM_AzureContentSafety_APIUrl The key for the FoundationaLLM:AzureContentSafety:APIUrl app configuration setting. public const string FoundationaLLM_AzureContentSafety_APIUrl = \"FoundationaLLM:AzureContentSafety:APIUrl\" Field Value string FoundationaLLM_AzureContentSafety_HateSeverity The key for the FoundationaLLM:AzureContentSafety:HateSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_HateSeverity = \"FoundationaLLM:AzureContentSafety:HateSeverity\" Field Value string FoundationaLLM_AzureContentSafety_SelfHarmSeverity The key for the FoundationaLLM:AzureContentSafety:SelfHarmSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_SelfHarmSeverity = \"FoundationaLLM:AzureContentSafety:SelfHarmSeverity\" Field Value string FoundationaLLM_AzureContentSafety_SexualSeverity The key for the FoundationaLLM:AzureContentSafety:SexualSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_SexualSeverity = \"FoundationaLLM:AzureContentSafety:SexualSeverity\" Field Value string FoundationaLLM_AzureContentSafety_ViolenceSeverity The key for the FoundationaLLM:AzureContentSafety:ViolenceSeverity app configuration setting. public const string FoundationaLLM_AzureContentSafety_ViolenceSeverity = \"FoundationaLLM:AzureContentSafety:ViolenceSeverity\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_DeploymentName The key for the FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_DeploymentName = \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_MaxTokens The key for the FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_MaxTokens = \"FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_ModelName The key for the FoundationaLLM:AzureOpenAI:API:Completions:ModelName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_ModelName = \"FoundationaLLM:AzureOpenAI:API:Completions:ModelName\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_ModelVersion The key for the FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_ModelVersion = \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\" Field Value string FoundationaLLM_AzureOpenAI_API_Completions_Temperature The key for the FoundationaLLM:AzureOpenAI:API:Completions:Temperature app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Completions_Temperature = \"FoundationaLLM:AzureOpenAI:API:Completions:Temperature\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_DeploymentName The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_DeploymentName = \"FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_MaxTokens The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_MaxTokens = \"FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_ModelName The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_ModelName = \"FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName\" Field Value string FoundationaLLM_AzureOpenAI_API_Embeddings_Temperature The key for the FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Embeddings_Temperature = \"FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature\" Field Value string FoundationaLLM_AzureOpenAI_API_Endpoint The key for the FoundationaLLM:AzureOpenAI:API:Endpoint app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Endpoint = \"FoundationaLLM:AzureOpenAI:API:Endpoint\" Field Value string FoundationaLLM_AzureOpenAI_API_Key The key for the FoundationaLLM:AzureOpenAI:API:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_AzureOpenAI_API_Key = \"FoundationaLLM:AzureOpenAI:API:Key\" Field Value string FoundationaLLM_AzureOpenAI_API_Version The key for the FoundationaLLM:AzureOpenAI:API:Version app configuration setting. public const string FoundationaLLM_AzureOpenAI_API_Version = \"FoundationaLLM:AzureOpenAI:API:Version\" Field Value string FoundationaLLM_BlobStorageMemorySource_BlobStorageConnection The key for the FoundationaLLM:BlobStorageMemorySource:BlobStorageConnection app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_BlobStorageMemorySource_BlobStorageConnection = \"FoundationaLLM:BlobStorageMemorySource:BlobStorageConnection\" Field Value string FoundationaLLM_BlobStorageMemorySource_BlobStorageContainer The key for the FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer app configuration setting. public const string FoundationaLLM_BlobStorageMemorySource_BlobStorageContainer = \"FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer\" Field Value string FoundationaLLM_BlobStorageMemorySource_ConfigFilePath The key for the FoundationaLLM:BlobStorageMemorySource:ConfigFilePath app configuration setting. public const string FoundationaLLM_BlobStorageMemorySource_ConfigFilePath = \"FoundationaLLM:BlobStorageMemorySource:ConfigFilePath\" Field Value string FoundationaLLM_Branding_AccentColor The key for the FoundationaLLM:Branding:AccentColor app configuration setting. public const string FoundationaLLM_Branding_AccentColor = \"FoundationaLLM:Branding:AccentColor\" Field Value string FoundationaLLM_Branding_AllowAgentSelection The key for the FoundationaLLM:Branding:AllowAgentSelection app configuration setting. This value corresponds with the FoundationaLLM-AllowAgentHint feature flag. If the feature flag is true, then the User Portal UI uses these values to provide agent hints to the Agent Hub in completions-based requests. Otherwise, these values are ignored. public const string FoundationaLLM_Branding_AllowAgentSelection = \"FoundationaLLM:Branding:AllowAgentSelection\" Field Value string FoundationaLLM_Branding_BackgroundColor The key for the FoundationaLLM:Branding:BackgroundColor app configuration setting. public const string FoundationaLLM_Branding_BackgroundColor = \"FoundationaLLM:Branding:BackgroundColor\" Field Value string FoundationaLLM_Branding_CompanyName The key for the FoundationaLLM:Branding:CompanyName app configuration setting. public const string FoundationaLLM_Branding_CompanyName = \"FoundationaLLM:Branding:CompanyName\" Field Value string FoundationaLLM_Branding_FavIconUrl The key for the FoundationaLLM:Branding:FavIconUrl app configuration setting. public const string FoundationaLLM_Branding_FavIconUrl = \"FoundationaLLM:Branding:FavIconUrl\" Field Value string FoundationaLLM_Branding_KioskMode The key for the FoundationaLLM:Branding:KioskMode app configuration setting. public const string FoundationaLLM_Branding_KioskMode = \"FoundationaLLM:Branding:KioskMode\" Field Value string FoundationaLLM_Branding_LogoText The key for the FoundationaLLM:Branding:LogoText app configuration setting. public const string FoundationaLLM_Branding_LogoText = \"FoundationaLLM:Branding:LogoText\" Field Value string FoundationaLLM_Branding_LogoUrl The key for the FoundationaLLM:Branding:LogoUrl app configuration setting. public const string FoundationaLLM_Branding_LogoUrl = \"FoundationaLLM:Branding:LogoUrl\" Field Value string FoundationaLLM_Branding_PageTitle The key for the FoundationaLLM:Branding:PageTitle app configuration setting. public const string FoundationaLLM_Branding_PageTitle = \"FoundationaLLM:Branding:PageTitle\" Field Value string FoundationaLLM_Branding_PrimaryColor The key for the FoundationaLLM:Branding:PrimaryColor app configuration setting. public const string FoundationaLLM_Branding_PrimaryColor = \"FoundationaLLM:Branding:PrimaryColor\" Field Value string FoundationaLLM_Branding_PrimaryTextColor The key for the FoundationaLLM:Branding:PrimaryTextColor app configuration setting. public const string FoundationaLLM_Branding_PrimaryTextColor = \"FoundationaLLM:Branding:PrimaryTextColor\" Field Value string FoundationaLLM_Branding_SecondaryColor The key for the FoundationaLLM:Branding:SecondaryColor app configuration setting. public const string FoundationaLLM_Branding_SecondaryColor = \"FoundationaLLM:Branding:SecondaryColor\" Field Value string FoundationaLLM_Branding_SecondaryTextColor The key for the FoundationaLLM:Branding:SecondaryTextColor app configuration setting. public const string FoundationaLLM_Branding_SecondaryTextColor = \"FoundationaLLM:Branding:SecondaryTextColor\" Field Value string FoundationaLLM_Chat_Entra_CallbackPath The key for the FoundationaLLM:Chat:Entra:CallbackPath app configuration setting. public const string FoundationaLLM_Chat_Entra_CallbackPath = \"FoundationaLLM:Chat:Entra:CallbackPath\" Field Value string FoundationaLLM_Chat_Entra_ClientId The key for the FoundationaLLM:Chat:Entra:ClientId app configuration setting. public const string FoundationaLLM_Chat_Entra_ClientId = \"FoundationaLLM:Chat:Entra:ClientId\" Field Value string FoundationaLLM_Chat_Entra_ClientSecret The key for the FoundationaLLM:Chat:Entra:ClientSecret app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_Chat_Entra_ClientSecret = \"FoundationaLLM:Chat:Entra:ClientSecret\" Field Value string FoundationaLLM_Chat_Entra_Instance The key for the FoundationaLLM:Chat:Entra:Instance app configuration setting. public const string FoundationaLLM_Chat_Entra_Instance = \"FoundationaLLM:Chat:Entra:Instance\" Field Value string FoundationaLLM_Chat_Entra_Scopes The key for the FoundationaLLM:Chat:Entra:Scopes app configuration setting. public const string FoundationaLLM_Chat_Entra_Scopes = \"FoundationaLLM:Chat:Entra:Scopes\" Field Value string FoundationaLLM_Chat_Entra_TenantId The key for the FoundationaLLM:Chat:Entra:TenantId app configuration setting. public const string FoundationaLLM_Chat_Entra_TenantId = \"FoundationaLLM:Chat:Entra:TenantId\" Field Value string FoundationaLLM_CognitiveSearchMemorySource_BlobStorageConnection The key for the FoundationaLLM:CognitiveSearchMemorySource:BlobStorageConnection app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CognitiveSearchMemorySource_BlobStorageConnection = \"FoundationaLLM:CognitiveSearchMemorySource:BlobStorageConnection\" Field Value string FoundationaLLM_CognitiveSearchMemorySource_BlobStorageContainer The key for the FoundationaLLM:CognitiveSearchMemorySource:BlobStorageContainer app configuration setting. public const string FoundationaLLM_CognitiveSearchMemorySource_BlobStorageContainer = \"FoundationaLLM:CognitiveSearchMemorySource:BlobStorageContainer\" Field Value string FoundationaLLM_CognitiveSearchMemorySource_ConfigFilePath The key for the FoundationaLLM:CognitiveSearchMemorySource:ConfigFilePath app configuration setting. public const string FoundationaLLM_CognitiveSearchMemorySource_ConfigFilePath = \"FoundationaLLM:CognitiveSearchMemorySource:ConfigFilePath\" Field Value string FoundationaLLM_CognitiveSearchMemorySource_EndPoint The key for the FoundationaLLM:CognitiveSearchMemorySource:EndPoint app configuration setting. public const string FoundationaLLM_CognitiveSearchMemorySource_EndPoint = \"FoundationaLLM:CognitiveSearchMemorySource:EndPoint\" Field Value string FoundationaLLM_CognitiveSearchMemorySource_IndexName The key for the FoundationaLLM:CognitiveSearchMemorySource:IndexName app configuration setting. public const string FoundationaLLM_CognitiveSearchMemorySource_IndexName = \"FoundationaLLM:CognitiveSearchMemorySource:IndexName\" Field Value string FoundationaLLM_CognitiveSearchMemorySource_Key The key for the FoundationaLLM:CognitiveSearchMemorySource:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CognitiveSearchMemorySource_Key = \"FoundationaLLM:CognitiveSearchMemorySource:Key\" Field Value string FoundationaLLM_CognitiveSearch_EndPoint The key for the FoundationaLLM:CognitiveSearch:EndPoint app configuration setting. public const string FoundationaLLM_CognitiveSearch_EndPoint = \"FoundationaLLM:CognitiveSearch:EndPoint\" Field Value string FoundationaLLM_CognitiveSearch_IndexName The key for the FoundationaLLM:CognitiveSearch:IndexName app configuration setting. public const string FoundationaLLM_CognitiveSearch_IndexName = \"FoundationaLLM:CognitiveSearch:IndexName\" Field Value string FoundationaLLM_CognitiveSearch_Key The key for the FoundationaLLM:CognitiveSearch:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CognitiveSearch_Key = \"FoundationaLLM:CognitiveSearch:Key\" Field Value string FoundationaLLM_CognitiveSearch_MaxVectorSearchResults The key for the FoundationaLLM:CognitiveSearch:MaxVectorSearchResults app configuration setting. public const string FoundationaLLM_CognitiveSearch_MaxVectorSearchResults = \"FoundationaLLM:CognitiveSearch:MaxVectorSearchResults\" Field Value string FoundationaLLM_CoreAPI_Entra_CallbackPath The key for the FoundationaLLM:CoreAPI:Entra:CallbackPath app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_CallbackPath = \"FoundationaLLM:CoreAPI:Entra:CallbackPath\" Field Value string FoundationaLLM_CoreAPI_Entra_ClientId The key for the FoundationaLLM:CoreAPI:Entra:ClientId app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_ClientId = \"FoundationaLLM:CoreAPI:Entra:ClientId\" Field Value string FoundationaLLM_CoreAPI_Entra_ClientSecret The key for the FoundationaLLM:CoreAPI:Entra:ClientSecret app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CoreAPI_Entra_ClientSecret = \"FoundationaLLM:CoreAPI:Entra:ClientSecret\" Field Value string FoundationaLLM_CoreAPI_Entra_Instance The key for the FoundationaLLM:CoreAPI:Entra:Instance app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_Instance = \"FoundationaLLM:CoreAPI:Entra:Instance\" Field Value string FoundationaLLM_CoreAPI_Entra_Scopes The key for the FoundationaLLM:CoreAPI:Entra:Scopes app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_Scopes = \"FoundationaLLM:CoreAPI:Entra:Scopes\" Field Value string FoundationaLLM_CoreAPI_Entra_TenantId The key for the FoundationaLLM:CoreAPI:Entra:TenantId app configuration setting. public const string FoundationaLLM_CoreAPI_Entra_TenantId = \"FoundationaLLM:CoreAPI:Entra:TenantId\" Field Value string FoundationaLLM_CoreWorker_AppInsightsConnectionString The key for the FoundationaLLM:CoreWorker:AppInsightsConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CoreWorker_AppInsightsConnectionString = \"FoundationaLLM:CoreWorker:AppInsightsConnectionString\" Field Value string FoundationaLLM_CosmosDB_ChangeFeedLeaseContainer The key for the FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer app configuration setting. public const string FoundationaLLM_CosmosDB_ChangeFeedLeaseContainer = \"FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer\" Field Value string FoundationaLLM_CosmosDB_Containers The key for the FoundationaLLM:CosmosDB:Containers app configuration setting. public const string FoundationaLLM_CosmosDB_Containers = \"FoundationaLLM:CosmosDB:Containers\" Field Value string FoundationaLLM_CosmosDB_Database The key for the FoundationaLLM:CosmosDB:Database app configuration setting. public const string FoundationaLLM_CosmosDB_Database = \"FoundationaLLM:CosmosDB:Database\" Field Value string FoundationaLLM_CosmosDB_Endpoint The key for the FoundationaLLM:CosmosDB:Endpoint app configuration setting. public const string FoundationaLLM_CosmosDB_Endpoint = \"FoundationaLLM:CosmosDB:Endpoint\" Field Value string FoundationaLLM_CosmosDB_Key The key for the FoundationaLLM:CosmosDB:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_CosmosDB_Key = \"FoundationaLLM:CosmosDB:Key\" Field Value string FoundationaLLM_CosmosDB_MonitoredContainers The key for the FoundationaLLM:CosmosDB:MonitoredContainers app configuration setting. public const string FoundationaLLM_CosmosDB_MonitoredContainers = \"FoundationaLLM:CosmosDB:MonitoredContainers\" Field Value string FoundationaLLM_DataSourceHub_DataSourceMetadata_StorageContainer The key for the FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer app configuration setting. public const string FoundationaLLM_DataSourceHub_DataSourceMetadata_StorageContainer = \"FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer\" Field Value string FoundationaLLM_DataSourceHub_StorageManager_BlobStorage_ConnectionString The key for the FoundationaLLM:DataSourceHub:StorageManager:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_DataSourceHub_StorageManager_BlobStorage_ConnectionString = \"FoundationaLLM:DataSourceHub:StorageManager:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_DataSources_AboutFoundationaLLM_BlobStorage_ConnectionString The key for the FoundationaLLM:DataSources:AboutFoundationaLLM:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_DataSources_AboutFoundationaLLM_BlobStorage_ConnectionString = \"FoundationaLLM:DataSources:AboutFoundationaLLM:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_DurableSystemPrompt_BlobStorageConnection The key for the FoundationaLLM:DurableSystemPrompt:BlobStorageConnection app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_DurableSystemPrompt_BlobStorageConnection = \"FoundationaLLM:DurableSystemPrompt:BlobStorageConnection\" Field Value string FoundationaLLM_DurableSystemPrompt_BlobStorageContainer The key for the FoundationaLLM:DurableSystemPrompt:BlobStorageContainer app configuration setting. public const string FoundationaLLM_DurableSystemPrompt_BlobStorageContainer = \"FoundationaLLM:DurableSystemPrompt:BlobStorageContainer\" Field Value string FoundationaLLM_LangChainAPI_Key The key for the FoundationaLLM:LangChainAPI:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_LangChainAPI_Key = \"FoundationaLLM:LangChainAPI:Key\" Field Value string FoundationaLLM_LangChain_CSVFile_URL The key for the FoundationaLLM:LangChain:CSVFile:URL app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_LangChain_CSVFile_URL = \"FoundationaLLM:LangChain:CSVFile:URL\" Field Value string FoundationaLLM_LangChain_SQLDatabase_TestDB_Password The key for the FoundationaLLM:LangChain:SQLDatabase:TestDB:Password app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_LangChain_SQLDatabase_TestDB_Password = \"FoundationaLLM:LangChain:SQLDatabase:TestDB:Password\" Field Value string FoundationaLLM_LangChain_Summary_MaxTokens The key for the FoundationaLLM:LangChain:Summary:MaxTokens app configuration setting. public const string FoundationaLLM_LangChain_Summary_MaxTokens = \"FoundationaLLM:LangChain:Summary:MaxTokens\" Field Value string FoundationaLLM_LangChain_Summary_ModelName The key for the FoundationaLLM:LangChain:Summary:ModelName app configuration setting. public const string FoundationaLLM_LangChain_Summary_ModelName = \"FoundationaLLM:LangChain:Summary:ModelName\" Field Value string FoundationaLLM_OpenAI_API_Endpoint The key for the FoundationaLLM:OpenAI:API:Endpoint app configuration setting. public const string FoundationaLLM_OpenAI_API_Endpoint = \"FoundationaLLM:OpenAI:API:Endpoint\" Field Value string FoundationaLLM_OpenAI_API_Key The key for the FoundationaLLM:OpenAI:API:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_OpenAI_API_Key = \"FoundationaLLM:OpenAI:API:Key\" Field Value string FoundationaLLM_OpenAI_API_Temperature The key for the FoundationaLLM:OpenAI:API:Temperature app configuration setting. public const string FoundationaLLM_OpenAI_API_Temperature = \"FoundationaLLM:OpenAI:API:Temperature\" Field Value string FoundationaLLM_PromptHub_PromptMetadata_StorageContainer The key for the FoundationaLLM:PromptHub:PromptMetadata:StorageContainer app configuration setting. public const string FoundationaLLM_PromptHub_PromptMetadata_StorageContainer = \"FoundationaLLM:PromptHub:PromptMetadata:StorageContainer\" Field Value string FoundationaLLM_PromptHub_StorageManager_BlobStorage_ConnectionString The key for the FoundationaLLM:PromptHub:StorageManager:BlobStorage:ConnectionString app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_PromptHub_StorageManager_BlobStorage_ConnectionString = \"FoundationaLLM:PromptHub:StorageManager:BlobStorage:ConnectionString\" Field Value string FoundationaLLM_Refinement The key for the FoundationaLLM:Refinement app configuration setting. public const string FoundationaLLM_Refinement = \"FoundationaLLM:Refinement\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_ChatCompletionPromptName The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_ChatCompletionPromptName = \"FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeployment The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeployment = \"FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeploymentMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_CompletionsDeploymentMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeployment The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeployment = \"FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeploymentMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_EmbeddingsDeploymentMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_Endpoint The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_Endpoint = \"FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_Key The key for the FoundationaLLM:SemanticKernelAPI:OpenAI:Key app configuration setting. This is a Key Vault reference. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_Key = \"FoundationaLLM:SemanticKernelAPI:OpenAI:Key\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMinTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_CompletionsMinTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMinTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MemoryMinTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMinTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_MessagesMinTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_SystemMaxTokens The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_PromptOptimization_SystemMaxTokens = \"FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens\" Field Value string FoundationaLLM_SemanticKernelAPI_OpenAI_ShortSummaryPromptName The key for the FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName app configuration setting. public const string FoundationaLLM_SemanticKernelAPI_OpenAI_ShortSummaryPromptName = \"FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName\" Field Value string FoundationaLLM_Vectorization_WorkerSettings The key for the FoundationaLLM:Vectorization:WorkerSettings app configuration setting. public const string FoundationaLLM_Vectorization_WorkerSettings = \"FoundationaLLM:Vectorization:WorkerSettings\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CosmosDbContainers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CosmosDbContainers.html",
    "title": "Class CosmosDbContainers | FoundationaLLM",
    "keywords": "Class CosmosDbContainers Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM Cosmos DB container names. public static class CosmosDbContainers Inheritance object CosmosDbContainers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Leases The Cosmos DB change feed leases container. public const string Leases = \"leases\" Field Value string Sessions Stores chat sessions and related messages. public const string Sessions = \"Sessions\" Field Value string UserProfiles Stores user profile data. public const string UserProfiles = \"UserProfiles\" Field Value string UserSessions Stores a mapping between user identities and chat sessions. public const string UserSessions = \"UserSessions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpClients.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpClients.html",
    "title": "Class HttpClients | FoundationaLLM",
    "keywords": "Class HttpClients Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to configure and retrieve an HttpClient, using IHttpClientFactory. public static class HttpClients Inheritance object HttpClients Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentFactoryAPI Named client with matching configuration for the Agent Factory API. public const string AgentFactoryAPI = \"AgentFactoryAPI\" Field Value string AgentHubAPI Named client with matching configuration for the Agent Hub API. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string CoreAPI Named client with matching configuration for the Core API. public const string CoreAPI = \"CoreAPI\" Field Value string DataSourceHubAPI Named client with matching configuration for the DataSource Hub API. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string GatekeeperAPI Named client with matching configuration for the Gatekeeper API. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI Named client with matching configuration for the Gatekeeper Integration API. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string LangChainAPI Named client with matching configuration for the LangChain API. public const string LangChainAPI = \"LangChainAPI\" Field Value string PromptHubAPI Named client with matching configuration for the Prompt Hub API. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI Named client with matching configuration for the Semantic Kernel API. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html",
    "title": "Class HttpHeaders | FoundationaLLM",
    "keywords": "Class HttpHeaders Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common HTTP headers used throughout the FoundationaLLM infrastructure. public static class HttpHeaders Inheritance object HttpHeaders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey API key header used by APIs to authenticate requests. public const string APIKey = \"X-API-KEY\" Field Value string AgentHint When the FoundationaLLM-AllowAgentHint feature flag is enabled, this header can be used by the client to pass an agent hint to the API. Used mainly for demo purposes. public const string AgentHint = \"X-AGENT-HINT\" Field Value string UserIdentity User identity header used by APIs to pass user identity information. public const string UserIdentity = \"X-USER-IDENTITY\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Participants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Participants.html",
    "title": "Enum Participants | FoundationaLLM",
    "keywords": "Enum Participants Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Specifies the participants, such as a user and an assistant. public enum Participants Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Assistant = 1 Represents an assistant type. User = 0 Represents a user type."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html",
    "title": "Class Swagger | FoundationaLLM",
    "keywords": "Class Swagger Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common Swagger strings used throughout the FoundationaLLM infrastructure. public static class Swagger Inheritance object Swagger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SecurityDefinitionName The OpenAPI security definition name. public const string SecurityDefinitionName = \"ApiKey\" Field Value string SecuritySchemeDescription The OpenAPI security scheme description. public const string SecuritySchemeDescription = \"API Key auth\" Field Value string SecuritySchemeName The OpenAPI security scheme name. public const string SecuritySchemeName = \"ApiKeyScheme\" Field Value string SecuritySchemeReferenceId The OpenAPI security scheme reference identifier. public const string SecuritySchemeReferenceId = \"ApiKey\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html",
    "title": "Class VectorizationSteps | FoundationaLLM",
    "keywords": "Class VectorizationSteps Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM vectorization step names. public class VectorizationSteps Inheritance object VectorizationSteps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Embed Embed text chunks into a latent vector space. public const string Embed = \"embed\" Field Value string Extract Extract the text from the content of the document. public const string Extract = \"extract\" Field Value string Index Persist vector embeddings into a vector index. public const string Index = \"index\" Field Value string Partition Partition the text into multiple chunks. public const string Partition = \"partition\" Field Value string Methods ValidateStepName(string) Validates a given vectorization step name. public static bool ValidateStepName(string stepName) Parameters stepName string The vectorization step name to be validated. Returns bool Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.html",
    "title": "Namespace FoundationaLLM.Common.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants Classes AppConfigurationKeyFilters Contains constants of the keys filters for app configuration setting namespaces. AppConfigurationKeySections Contains constants of the keys sections for app configuration setting namespaces. AppConfigurationKeys Contains constants of the keys for all app configuration settings. CosmosDbContainers Core FoundationaLLM Cosmos DB container names. HttpClients Name constants used to configure and retrieve an HttpClient, using IHttpClientFactory. HttpHeaders Common HTTP headers used throughout the FoundationaLLM infrastructure. Swagger Common Swagger strings used throughout the FoundationaLLM infrastructure. VectorizationSteps Core FoundationaLLM vectorization step names. Enums Participants Specifies the participants, such as a user and an assistant."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html",
    "title": "Class SwaggerGenOptionsExtensions | FoundationaLLM",
    "keywords": "Class SwaggerGenOptionsExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. public static class SwaggerGenOptionsExtensions Inheritance object SwaggerGenOptionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAPIKeyAuth(SwaggerGenOptions) Extension method that configures API Key auth for the APIs that use it. public static void AddAPIKeyAuth(this SwaggerGenOptions options) Parameters options SwaggerGenOptions The base options."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.html",
    "title": "Namespace FoundationaLLM.Common.Extensions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Extensions Classes SwaggerGenOptionsExtensions Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html",
    "title": "Interface IAPIKeyValidationService | FoundationaLLM",
    "keywords": "Interface IAPIKeyValidationService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Common interface for X-API-Key header validation. public interface IAPIKeyValidationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IsValid(string) Checks if an API key is valid or not. bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean representing the validity of the API key parameter."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICallContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICallContext.html",
    "title": "Interface ICallContext | FoundationaLLM",
    "keywords": "Interface ICallContext Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Stores context information for the current HTTP request. The AgentHint property is extracted from the request header, if any. This is used in scenarios where the client wants to hint the API about a specific agent to resolve, and is passed through the API layers in the form of a header. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. public interface ICallContext Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentHint The current agent hint. If empty, there is no associated header value. Agent? AgentHint { get; set; } Property Value Agent CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPISettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPISettings.html",
    "title": "Interface IDownstreamAPISettings | FoundationaLLM",
    "keywords": "Interface IDownstreamAPISettings Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll One or more downstream APIs with a base URL and API key for authentication. public interface IDownstreamAPISettings Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DownstreamAPIs A dictionary of downstream APIs with a base URL and API key for authentication. Dictionary<string, DownstreamAPIKeySettings> DownstreamAPIs { get; } Property Value Dictionary<string, DownstreamAPIKeySettings>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html",
    "title": "Interface IHttpClientFactoryService | FoundationaLLM",
    "keywords": "Interface IHttpClientFactoryService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. public interface IHttpClientFactoryService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateClient(string) Creates a HttpClient instance from the provided client name. The client name must be registered in the IHttpClientFactory configuration. The headers added to the request are: X-API-KEY: The API key for the target API. X-USER-IDENTITY: The user identity information for the current user. X-AGENT-HINT: The agent hint provided in an incoming HTTP request, if any. HttpClient CreateClient(string clientName) Parameters clientName string The named HttpClient client configuration. Returns HttpClient"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html",
    "title": "Interface IStorageService | FoundationaLLM",
    "keywords": "Interface IStorageService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with a storage. public interface IStorageService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html",
    "title": "Interface IUserClaimsProviderService | FoundationaLLM",
    "keywords": "Interface IUserClaimsProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object. public interface IUserClaimsProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.html",
    "title": "Namespace FoundationaLLM.Common.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Interfaces Interfaces IAPIKeyValidationService Common interface for X-API-Key header validation. ICallContext Stores context information for the current HTTP request. The AgentHint property is extracted from the request header, if any. This is used in scenarios where the client wants to hint the API about a specific agent to resolve, and is passed through the API layers in the form of a header. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. IDownstreamAPISettings One or more downstream APIs with a base URL and API key for authentication. IHttpClientFactoryService Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. IStorageService Provides services to interact with a storage. IUserClaimsProviderService Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object."
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html",
    "title": "Class CallContextMiddleware | FoundationaLLM",
    "keywords": "Class CallContextMiddleware Namespace FoundationaLLM.Common.Middleware Assembly FoundationaLLM.Common.dll Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. public class CallContextMiddleware Inheritance object CallContextMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CallContextMiddleware(RequestDelegate) Initializes a new instance of the CallContextMiddleware class. public CallContextMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IUserClaimsProviderService, ICallContext) Executes the middleware. public Task InvokeAsync(HttpContext context, IUserClaimsProviderService claimsProviderService, ICallContext callContext) Parameters context HttpContext The current HTTP request context. claimsProviderService IUserClaimsProviderService Resolves user claims to a UnifiedUserIdentity object. callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.html",
    "title": "Namespace FoundationaLLM.Common.Middleware | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Middleware Classes CallContextMiddleware Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html",
    "title": "Class UnifiedUserIdentity | FoundationaLLM",
    "keywords": "Class UnifiedUserIdentity Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll Represents strongly-typed user identity information, regardless of the identity provider. public class UnifiedUserIdentity Inheritance object UnifiedUserIdentity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The user's display name. [JsonProperty(\"name\")] public string? Name { get; set; } Property Value string UPN The User Principal Name (UPN) of the user. [JsonProperty(\"upn\")] public string? UPN { get; set; } Property Value string Username The username of the user used to authenticate. [JsonProperty(\"user_name\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Authentication Classes UnifiedUserIdentity Represents strongly-typed user identity information, regardless of the identity provider."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Completion.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Completion.html",
    "title": "Class Completion | FoundationaLLM",
    "keywords": "Class Completion Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The completion object. public class Completion Inheritance object Completion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Text The completion text. public string? Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.CompletionPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.CompletionPrompt.html",
    "title": "Class CompletionPrompt | FoundationaLLM",
    "keywords": "Class CompletionPrompt Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The completion prompt object. public class CompletionPrompt Inheritance object CompletionPrompt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionPrompt(string, string, string) Constructor for Completion Prompt. public CompletionPrompt(string sessionId, string messageId, string prompt) Parameters sessionId string messageId string prompt string Properties Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string MessageId The messageId of the completion. public string MessageId { get; set; } Property Value string Prompt The completion prompt. public string Prompt { get; set; } Property Value string SessionId The sessionId associated with the completion. public string SessionId { get; set; } Property Value string Type The type of the completion. public string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.DocumentVector.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.DocumentVector.html",
    "title": "Class DocumentVector | FoundationaLLM",
    "keywords": "Class DocumentVector Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The document vector object. public record DocumentVector : IEquatable<DocumentVector> Inheritance object DocumentVector Implements IEquatable<DocumentVector> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DocumentVector(string, string, string, float[]?) Constructor for Document Vector. public DocumentVector(string itemId, string partitionKey, string containerName, float[]? vector = null) Parameters itemId string partitionKey string containerName string vector float[] Properties containerName The name of the container associated with the document vector. public string containerName { get; set; } Property Value string id The unique identifier. public string id { get; set; } Property Value string itemId The identifier of the item associated with the document vector. public string itemId { get; set; } Property Value string partitionKey The partition key associated with the document vector. public string partitionKey { get; set; } Property Value string vector The vector associated with the document. public float[]? vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Message.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Message.html",
    "title": "Class Message | FoundationaLLM",
    "keywords": "Class Message Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The message object. public record Message : IEquatable<Message> Inheritance object Message Implements IEquatable<Message> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Message(string, string, int?, string, float[]?, bool?, string, string?) Constructor for Message. public Message(string sessionId, string sender, int? tokens, string text, float[]? vector, bool? rating, string upn, string? senderDisplayName = null) Parameters sessionId string sender string tokens int? text string vector float[] rating bool? upn string senderDisplayName string Properties CompletionPromptId The identifier for the completion prompt associated with the message. public string? CompletionPromptId { get; set; } Property Value string Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string Id { get; set; } Property Value string Rating The rating associated with the message, if any. [SimpleField] public bool? Rating { get; set; } Property Value bool? Sender The sender of the message. [SimpleField] public string Sender { get; set; } Property Value string SenderDisplayName The display name of the message sender. This could be the name of the signed in user or the name of the agent. [SimpleField] public string? SenderDisplayName { get; set; } Property Value string SessionId The Partition key. [SimpleField] public string SessionId { get; set; } Property Value string Text The text content of the message. [SimpleField] public string Text { get; set; } Property Value string TimeStamp The timestamp when the message was created. [SimpleField] public DateTime TimeStamp { get; set; } Property Value DateTime Tokens The number of tokens associated with the message, if any. [SimpleField] public int? Tokens { get; set; } Property Value int? Type The type of the message. [SimpleField] public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Vector The vector associated with the message. [FieldBuilderIgnore] public float[]? Vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageHistoryItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageHistoryItem.html",
    "title": "Class MessageHistoryItem | FoundationaLLM",
    "keywords": "Class MessageHistoryItem Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll Represents an historic message sender and text item. public class MessageHistoryItem Inheritance object MessageHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MessageHistoryItem(string, string) Message history item public MessageHistoryItem(string sender, string text) Parameters sender string The sender of the message (e.g., \"Agent\", \"User\") text string The message text. Properties Sender The sender of the message (e.g. \"Agent\", \"User\"). [JsonProperty(\"sender\")] public string Sender { get; set; } Property Value string Text The message text. [JsonProperty(\"text\")] public string Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Session.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Session.html",
    "title": "Class Session | FoundationaLLM",
    "keywords": "Class Session Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The session object. public record Session : IEquatable<Session> Inheritance object Session Implements IEquatable<Session> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Session() Constructor for Session. public Session() Properties Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string Messages The list of messages associated with the session. [JsonIgnore] public List<Message> Messages { get; set; } Property Value List<Message> Name The name of the session. public string Name { get; set; } Property Value string SessionId The Partition key. public string SessionId { get; set; } Property Value string TokensUsed The number of tokens used in the session. public int? TokensUsed { get; set; } Property Value int? Type The type of the session. public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Methods AddMessage(Message) Adds a message to the list of messages associated with the session. public void AddMessage(Message message) Parameters message Message The message to be added. UpdateMessage(Message) Updates an existing message in the list of messages associated with the session. public void UpdateMessage(Message message) Parameters message Message The updated message."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.html",
    "title": "Namespace FoundationaLLM.Common.Models.Chat | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Chat Classes Completion The completion object. CompletionPrompt The completion prompt object. DocumentVector The document vector object. Message The message object. MessageHistoryItem Represents an historic message sender and text item. Session The session object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html",
    "title": "Class EntraSettings | FoundationaLLM",
    "keywords": "Class EntraSettings Namespace FoundationaLLM.Common.Models.Configuration.Authentication Assembly FoundationaLLM.Common.dll Represents settings specific to Entra. public class EntraSettings Inheritance object EntraSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Scopes The scopes associated with the Entra settings. public string? Scopes { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication Classes EntraSettings Represents settings specific to Entra."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html",
    "title": "Class ClientBrandingConfiguration | FoundationaLLM",
    "keywords": "Class ClientBrandingConfiguration Namespace FoundationaLLM.Common.Models.Configuration.Branding Assembly FoundationaLLM.Common.dll Provides configuration for client branding. public class ClientBrandingConfiguration Inheritance object ClientBrandingConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccentColor The accent color of the client in hex format. public string? AccentColor { get; set; } Property Value string AllowAgentSelection Comma-separated list of global agents. public string? AllowAgentSelection { get; set; } Property Value string BackgroundColor The background color of the client in hex format. public string? BackgroundColor { get; set; } Property Value string CompanyName The display name of the client. public string? CompanyName { get; set; } Property Value string FavIconUrl The URL of the client's favicon. Can be an absolute URL or a relative URL. public string? FavIconUrl { get; set; } Property Value string KioskMode Flag indicating whether we use kiosk mode or not. public bool KioskMode { get; set; } Property Value bool LogoText The text to display next to the logo in the nav pane. Leave blank to not display any text. public string? LogoText { get; set; } Property Value string LogoUrl The URL of the client's logo. Can be an absolute URL or a relative URL. public string? LogoUrl { get; set; } Property Value string PageTitle The page title of the client. public string? PageTitle { get; set; } Property Value string PrimaryColor The primary color of the client in hex format. public string? PrimaryColor { get; set; } Property Value string PrimaryTextColor The text color that overlays the PrimaryColor of the client in hex format. public string? PrimaryTextColor { get; set; } Property Value string SecondaryColor The secondary color of the client in hex format. public string? SecondaryColor { get; set; } Property Value string SecondaryTextColor The text color that overlays the SecondaryColor of the client in hex format. public string? SecondaryTextColor { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Branding | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Branding Classes ClientBrandingConfiguration Provides configuration for client branding."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html",
    "title": "Class BlobStorageSettings | FoundationaLLM",
    "keywords": "Class BlobStorageSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration options for a Blob Storage service. public record BlobStorageSettings : IEquatable<BlobStorageSettings> Inheritance object BlobStorageSettings Implements IEquatable<BlobStorageSettings> Derived AzureCognitiveSearchMemorySourceSettings BlobStorageMemorySourceSettings DurableSystemPromptServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BlobStorageConnection The connection string for the blob storage. public required string BlobStorageConnection { get; set; } Property Value string BlobStorageContainer The name of the blob storage container. public required string BlobStorageContainer { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Storage | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Storage Classes BlobStorageSettings Provides configuration options for a Blob Storage service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html",
    "title": "Class UserProfile | FoundationaLLM",
    "keywords": "Class UserProfile Namespace FoundationaLLM.Common.Models.Configuration.Users Assembly FoundationaLLM.Common.dll The user profile object persisted in long-term storage. public record UserProfile : IEquatable<UserProfile> Inheritance object UserProfile Implements IEquatable<UserProfile> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfile(string, IEnumerable<Agent>?) The user profile object persisted in long-term storage. public UserProfile(string UPN, IEnumerable<Agent>? PrivateAgents) Parameters UPN string The user's account user principal name. PrivateAgents IEnumerable<Agent> Private agents assigned to the user. Properties Id The unique identifier. [JsonProperty(\"id\")] public string Id { get; set; } Property Value string PrivateAgents Names of private agents assigned to the user. [JsonProperty(\"privateAgents\")] public IEnumerable<Agent>? PrivateAgents { get; set; } Property Value IEnumerable<Agent> Type The document type. [JsonProperty(\"type\")] public string Type { get; set; } Property Value string UPN The user principal name. [JsonProperty(\"upn\")] public string UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Users | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Users Classes UserProfile The user profile object persisted in long-term storage."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration Namespaces FoundationaLLM.Common.Models.Configuration.Authentication FoundationaLLM.Common.Models.Configuration.Branding FoundationaLLM.Common.Models.Configuration.Storage FoundationaLLM.Common.Models.Configuration.Users"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.CallContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.CallContext.html",
    "title": "Class CallContext | FoundationaLLM",
    "keywords": "Class CallContext Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CallContext : ICallContext Inheritance object CallContext Implements ICallContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentHint The current agent hint. If empty, there is no associated header value. public Agent? AgentHint { get; set; } Property Value Agent CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. public UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.html",
    "title": "Namespace FoundationaLLM.Common.Models.Context | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Context Classes CallContext Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.Agent.html",
    "title": "Class Agent | FoundationaLLM",
    "keywords": "Class Agent Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll Represents the name and privacy of a FoundationaLLM agent. Used as a reference in the UserProfile class. public class Agent Inheritance object Agent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the agent. [JsonProperty(\"name\")] public string? Name { get; set; } Property Value string Private Indicates whether the agent is private. [JsonProperty(\"private\")] public bool Private { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.html",
    "title": "Namespace FoundationaLLM.Common.Models.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Metadata Classes Agent Represents the name and privacy of a FoundationaLLM agent. Used as a reference in the UserProfile class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ModelRegistry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ModelRegistry.html",
    "title": "Class ModelRegistry | FoundationaLLM",
    "keywords": "Class ModelRegistry Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll The model registry object. public class ModelRegistry Inheritance object ModelRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Models Dictionary of model names and their corresponding entries in the registry. public static Dictionary<string, ModelRegistryEntry> Models Field Value Dictionary<string, ModelRegistryEntry> Methods IdentifyType(JObject) Identifies the type of the object based on its properties. public static ModelRegistryEntry? IdentifyType(JObject obj) Parameters obj JObject Returns ModelRegistryEntry"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ModelRegistryEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ModelRegistryEntry.html",
    "title": "Class ModelRegistryEntry | FoundationaLLM",
    "keywords": "Class ModelRegistryEntry Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll The model registry entry object. public class ModelRegistryEntry Inheritance object ModelRegistryEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NamingProperties The list of naming properties associated with the model registry entry. public List<string>? NamingProperties { get; init; } Property Value List<string> Type The Type associated with the model registry entry. public Type? Type { get; init; } Property Value Type TypeMatchingProperties The list of type-matching properties associated with the model registry entry. public List<string>? TypeMatchingProperties { get; init; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionRequest.html",
    "title": "Class CompletionRequest | FoundationaLLM",
    "keywords": "Class CompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The completion request object. public class CompletionRequest : OrchestrationRequest Inheritance object OrchestrationRequest CompletionRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MessageHistory The message history associated with the completion request. [JsonProperty(\"message_history\")] public List<MessageHistoryItem>? MessageHistory { get; init; } Property Value List<MessageHistoryItem>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.CompletionResponse.html",
    "title": "Class CompletionResponse | FoundationaLLM",
    "keywords": "Class CompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Response from a language model. public class CompletionResponse Inheritance object CompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionResponse() Initialize a completion response. public CompletionResponse() CompletionResponse(string, string, int, int, float[]?) Initialize a completion response public CompletionResponse(string completion, string userPrompt, int userPromptTokens, int responseTokens, float[]? userPromptEmbedding) Parameters completion string The completion response from the language model. userPrompt string The user prompt the language model responded to. userPromptTokens int The number of tokens in the prompt. responseTokens int The number of tokens in the completion. userPromptEmbedding float[] User prompt embedding. Properties AgentName The name of the FoundationaLLM agent. [JsonProperty(\"agent_name\")] public string? AgentName { get; set; } Property Value string Completion The completion response from the language model. [JsonProperty(\"completion\")] public string Completion { get; set; } Property Value string CompletionTokens The number of tokens in the completion. [JsonProperty(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int PromptTemplate The prompt template used by the LLM. [JsonProperty(\"prompt_template\")] public string? PromptTemplate { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonProperty(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalCost The total cost of executing the completion operation. [JsonProperty(\"total_cost\")] public float TotalCost { get; set; } Property Value float TotalTokens The total number of tokens. [JsonProperty(\"total_tokens\")] public int TotalTokens { get; } Property Value int UserPrompt The user prompt the language model responded to. [JsonProperty(\"user_prompt\")] public string UserPrompt { get; set; } Property Value string UserPromptEmbedding User prompt embedding. [JsonProperty(\"user_prompt_embedding\")] public float[]? UserPromptEmbedding { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationRequest.html",
    "title": "Class OrchestrationRequest | FoundationaLLM",
    "keywords": "Class OrchestrationRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Base class for orchestration request objects. public class OrchestrationRequest Inheritance object OrchestrationRequest Derived AgentHubRequest CompletionRequest SummaryRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SessionId The session ID. [JsonProperty(\"session_id\")] public string? SessionId { get; set; } Property Value string UserPrompt Represent the input or user prompt. [JsonProperty(\"user_prompt\")] public string? UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryRequest.html",
    "title": "Class SummaryRequest | FoundationaLLM",
    "keywords": "Class SummaryRequest Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The summary request object. public class SummaryRequest : OrchestrationRequest Inheritance object OrchestrationRequest SummaryRequest Inherited Members OrchestrationRequest.SessionId OrchestrationRequest.UserPrompt object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html",
    "title": "Class SummaryResponse | FoundationaLLM",
    "keywords": "Class SummaryResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The summary response object. public class SummaryResponse Inheritance object SummaryResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Summary The summary response. public string? Summary { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration Classes CompletionRequest The completion request object. CompletionResponse Response from a language model. OrchestrationRequest Base class for orchestration request objects. SummaryRequest The summary request object. SummaryResponse The summary response object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Customer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Customer.html",
    "title": "Class Customer | FoundationaLLM",
    "keywords": "Class Customer Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The customer object. public class Customer : EmbeddedEntity Inheritance object EmbeddedEntity Customer Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Customer(string, string, string, string, string, string, string, string, string, List<CustomerAddress>, Password, double, float[]?) Constructor for Customer. public Customer(string id, string type, string customerId, string title, string firstName, string lastName, string emailAddress, string phoneNumber, string creationDate, List<CustomerAddress> addresses, Password password, double salesOrderCount, float[]? vector = null) Parameters id string type string customerId string title string firstName string lastName string emailAddress string phoneNumber string creationDate string addresses List<CustomerAddress> password Password salesOrderCount double vector float[] Properties addresses The customer address of the customer. [SimpleField] public List<CustomerAddress> addresses { get; set; } Property Value List<CustomerAddress> creationDate The creation of the customer. [SimpleField] public string creationDate { get; set; } Property Value string customerId The customer id. [SimpleField] public string customerId { get; set; } Property Value string emailAddress The email of the customer. [SimpleField] public string emailAddress { get; set; } Property Value string firstName The customer first name. [SimpleField] public string firstName { get; set; } Property Value string id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string id { get; set; } Property Value string lastName The customer last name. [SimpleField] public string lastName { get; set; } Property Value string password The customer password in hash and salt. [SimpleField(IsHidden = true)] public Password password { get; set; } Property Value Password phoneNumber The customer phone number. [SimpleField] public string phoneNumber { get; set; } Property Value string salesOrderCount The count of the sales order. [SimpleField] public double salesOrderCount { get; set; } Property Value double title The customer title. [SimpleField] public string title { get; set; } Property Value string type The customer type. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.CustomerAddress.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.CustomerAddress.html",
    "title": "Class CustomerAddress | FoundationaLLM",
    "keywords": "Class CustomerAddress Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The customer address object. public class CustomerAddress Inheritance object CustomerAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CustomerAddress(string, string, string, string, string, string, Location) Constructor for Customer Address. public CustomerAddress(string addressLine1, string addressLine2, string city, string state, string country, string zipCode, Location location) Parameters addressLine1 string addressLine2 string city string state string country string zipCode string location Location Properties addressLine1 First line from customer address. [SimpleField] public string addressLine1 { get; set; } Property Value string addressLine2 Second line from customer address. [SimpleField] public string addressLine2 { get; set; } Property Value string city The customer city. [SimpleField] public string city { get; set; } Property Value string country The customer country. [SimpleField] public string country { get; set; } Property Value string location The location of the customer. [SimpleField] public Location location { get; set; } Property Value Location state The customer state. [SimpleField] public string state { get; set; } Property Value string zipCode The customer zip code. [SimpleField] public string zipCode { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.EmbeddedEntity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.EmbeddedEntity.html",
    "title": "Class EmbeddedEntity | FoundationaLLM",
    "keywords": "Class EmbeddedEntity Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The embedded entity object. public class EmbeddedEntity Inheritance object EmbeddedEntity Derived Customer Product SalesOrder ShortTermMemory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties entityType__ The type of the entity. [SearchableField(IsFilterable = true, IsFacetable = true)] public string? entityType__ { get; set; } Property Value string vector The vector associated with the embedded entity. [FieldBuilderIgnore] public float[]? vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Location.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Location.html",
    "title": "Class Location | FoundationaLLM",
    "keywords": "Class Location Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The location object. public class Location Inheritance object Location Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Location(string, List<float>) Constructor for Location. public Location(string type, List<float> coordinates) Parameters type string coordinates List<float> Properties coordinates The coordinates of the location. [FieldBuilderIgnore] public List<float> coordinates { get; set; } Property Value List<float> type The type of the location. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Password.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Password.html",
    "title": "Class Password | FoundationaLLM",
    "keywords": "Class Password Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The password object. public class Password Inheritance object Password Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Password(string, string) Constructor for Password. public Password(string hash, string salt) Parameters hash string salt string Properties hash The hashed representation of the password. [SimpleField(IsHidden = true)] public string hash { get; set; } Property Value string salt The salt value used during password hashing. [SimpleField(IsHidden = true)] public string salt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Product.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Product.html",
    "title": "Class Product | FoundationaLLM",
    "keywords": "Class Product Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The product object. public class Product : EmbeddedEntity Inheritance object EmbeddedEntity Product Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Product(string, string, string, string, string, string, double, List<Tag>, float[]?) Constructor for Product. public Product(string id, string categoryId, string categoryName, string sku, string name, string description, double price, List<Tag> tags, float[]? vector = null) Parameters id string categoryId string categoryName string sku string name string description string price double tags List<Tag> vector float[] Properties categoryId The categoryid of the product. [SimpleField] public string categoryId { get; set; } Property Value string categoryName The category name of the product. [SearchableField(IsFilterable = true, IsFacetable = true)] public string categoryName { get; set; } Property Value string description The product description. [SimpleField] public string description { get; set; } Property Value string id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string id { get; set; } Property Value string name The product name. [SimpleField] public string name { get; set; } Property Value string price The price of the product. [SimpleField] public double price { get; set; } Property Value double sku The product stock keeping unit. [SimpleField] public string sku { get; set; } Property Value string tags The product tags. [SimpleField] public List<Tag> tags { get; set; } Property Value List<Tag>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.ProductCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.ProductCategory.html",
    "title": "Class ProductCategory | FoundationaLLM",
    "keywords": "Class ProductCategory Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The product category object. public class ProductCategory Inheritance object ProductCategory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ProductCategory(string, string, string) Constructor for Product Category. public ProductCategory(string id, string type, string name) Parameters id string type string name string Properties id The unique identifier. [SimpleField] public string id { get; set; } Property Value string name The product category name. [SimpleField] public string name { get; set; } Property Value string type The product category type. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrder.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrder.html",
    "title": "Class SalesOrder | FoundationaLLM",
    "keywords": "Class SalesOrder Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The sales order object. public class SalesOrder : EmbeddedEntity Inheritance object EmbeddedEntity SalesOrder Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SalesOrder(string, string, string, string, string, List<SalesOrderDetails>, float[]?) Constructor for Sales Order. public SalesOrder(string id, string type, string customerId, string orderDate, string shipDate, List<SalesOrderDetails> details, float[]? vector = null) Parameters id string type string customerId string orderDate string shipDate string details List<SalesOrderDetails> vector float[] Properties customerId The customer identifier associated with the sales order. [SimpleField] public string customerId { get; set; } Property Value string details The details associated with the customer sales order. [SimpleField] public List<SalesOrderDetails> details { get; set; } Property Value List<SalesOrderDetails> id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string id { get; set; } Property Value string orderDate The date of the sales order. [SimpleField] public string orderDate { get; set; } Property Value string shipDate The date of the shipment associated with the sales order. [SimpleField] public string shipDate { get; set; } Property Value string type The type of the customer sales order. [SimpleField] public string type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrderDetails.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.SalesOrderDetails.html",
    "title": "Class SalesOrderDetails | FoundationaLLM",
    "keywords": "Class SalesOrderDetails Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The sales order details object public class SalesOrderDetails Inheritance object SalesOrderDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SalesOrderDetails(string, string, double, double) Constructor for Sales Order Details public SalesOrderDetails(string sku, string name, double price, double quantity) Parameters sku string name string price double quantity double Properties name The product name associated with the customer sales order detail [SimpleField] public string name { get; set; } Property Value string price The price of the product associated with the customer sales order detail [SimpleField] public double price { get; set; } Property Value double quantity The quantity of the product associated with the customer sales order detail [SimpleField] public double quantity { get; set; } Property Value double sku The stock keeping unit (SKU) for the customer sales order detail [SimpleField] public string sku { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.ShortTermMemory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.ShortTermMemory.html",
    "title": "Class ShortTermMemory | FoundationaLLM",
    "keywords": "Class ShortTermMemory Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The short term memory object. public class ShortTermMemory : EmbeddedEntity Inheritance object EmbeddedEntity ShortTermMemory Inherited Members EmbeddedEntity.vector EmbeddedEntity.entityType__ object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties memory__ The memory string associated with the short-term memory. public string? memory__ { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.Tag.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.Tag.html",
    "title": "Class Tag | FoundationaLLM",
    "keywords": "Class Tag Namespace FoundationaLLM.Common.Models.Search Assembly FoundationaLLM.Common.dll The tag object. public class Tag Inheritance object Tag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Tag(string, string) Constructor for Tag. public Tag(string id, string name) Parameters id string name string Properties id The unique identifier. [SimpleField] public string id { get; set; } Property Value string name The product tag name. [SimpleField] public string name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Search.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Search.html",
    "title": "Namespace FoundationaLLM.Common.Models.Search | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Search Classes Customer The customer object. CustomerAddress The customer address object. EmbeddedEntity The embedded entity object. Location The location object. Password The password object. Product The product object. ProductCategory The product category object. SalesOrder The sales order object. SalesOrderDetails The sales order details object ShortTermMemory The short term memory object. Tag The tag object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddingFieldAttribute.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.EmbeddingFieldAttribute.html",
    "title": "Class EmbeddingFieldAttribute | FoundationaLLM",
    "keywords": "Class EmbeddingFieldAttribute Namespace FoundationaLLM.Common.Models.TextEmbedding Assembly FoundationaLLM.Common.dll The embedding field attribute object. [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false, Inherited = true)] public class EmbeddingFieldAttribute : Attribute Inheritance object Attribute EmbeddingFieldAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Label The label associated with the embedding field. public string? Label { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.TextEmbedding.html",
    "title": "Namespace FoundationaLLM.Common.Models.TextEmbedding | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.TextEmbedding Classes EmbeddingFieldAttribute The embedding field attribute object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.html",
    "title": "Namespace FoundationaLLM.Common.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models Namespaces FoundationaLLM.Common.Models.Authentication FoundationaLLM.Common.Models.Chat FoundationaLLM.Common.Models.Configuration FoundationaLLM.Common.Models.Context FoundationaLLM.Common.Models.Metadata FoundationaLLM.Common.Models.Orchestration FoundationaLLM.Common.Models.Search FoundationaLLM.Common.Models.TextEmbedding Classes ModelRegistry The model registry object. ModelRegistryEntry The model registry entry object."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html",
    "title": "Class ConfigureSwaggerOptions | FoundationaLLM",
    "keywords": "Class ConfigureSwaggerOptions Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Configures the Swagger generation options. public class ConfigureSwaggerOptions : IConfigureOptions<SwaggerGenOptions> Inheritance object ConfigureSwaggerOptions Implements IConfigureOptions<SwaggerGenOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This allows API versioning to define a Swagger document per API version after the Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider service has been resolved from the service container. Constructors ConfigureSwaggerOptions(IApiVersionDescriptionProvider) Initializes a new instance of the ConfigureSwaggerOptions class. public ConfigureSwaggerOptions(IApiVersionDescriptionProvider provider) Parameters provider IApiVersionDescriptionProvider The provider used to generate Swagger documents. Methods Configure(SwaggerGenOptions) Invoked to configure a SwaggerGenOptions instance. public void Configure(SwaggerGenOptions options) Parameters options SwaggerGenOptions The options instance to configure."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html",
    "title": "Class SwaggerDefaultValues | FoundationaLLM",
    "keywords": "Class SwaggerDefaultValues Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used. public class SwaggerDefaultValues : IOperationFilter Inheritance object SwaggerDefaultValues Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This IOperationFilter is only required due to bugs in the SwaggerGenerator. Once they are fixed and published, this class can be removed. Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext"
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.html",
    "title": "Namespace FoundationaLLM.Common.OpenAPI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.OpenAPI Classes ConfigureSwaggerOptions Configures the Swagger generation options. SwaggerDefaultValues Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used."
  },
  "api/dotnet/FoundationaLLM.Common.Services.DataLakeStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.DataLakeStorageService.html",
    "title": "Class DataLakeStorageService | FoundationaLLM",
    "keywords": "Class DataLakeStorageService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to Azure Data Lake blob storage. public class DataLakeStorageService : IStorageService Inheritance object DataLakeStorageService Implements IStorageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the DataLakeStorageService with the specified options and logger. Constructors DataLakeStorageService(IOptions<BlobStorageServiceSettings>, ILogger<DataLakeStorageService>) Provides access to Azure Data Lake blob storage. public DataLakeStorageService(IOptions<BlobStorageServiceSettings> options, ILogger<DataLakeStorageService> logger) Parameters options IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<DataLakeStorageService> The logger used for logging. Remarks Initializes a new instance of the DataLakeStorageService with the specified options and logger."
  },
  "api/dotnet/FoundationaLLM.Common.Services.EntraUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.EntraUserClaimsProviderService.html",
    "title": "Class EntraUserClaimsProviderService | FoundationaLLM",
    "keywords": "Class EntraUserClaimsProviderService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. public class EntraUserClaimsProviderService : IUserClaimsProviderService Inheritance object EntraUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Services.HttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.HttpClientFactoryService.html",
    "title": "Class HttpClientFactoryService | FoundationaLLM",
    "keywords": "Class HttpClientFactoryService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class HttpClientFactoryService : IHttpClientFactoryService Inheritance object HttpClientFactoryService Implements IHttpClientFactoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors HttpClientFactoryService(IHttpClientFactory, ICallContext, IDownstreamAPISettings) Creates a new instance of the HttpClientFactoryService class. public HttpClientFactoryService(IHttpClientFactory httpClientFactory, ICallContext callContext, IDownstreamAPISettings apiSettings) Parameters httpClientFactory IHttpClientFactory A fully configured IHttpClientFactory that allows access to HttpClient instances by name. callContext ICallContext Stores a UnifiedUserIdentity object resolved from one or more services, and the agent hint value extracted from the request header, if any. If the agent hint value is not empty or null, the service adds its contents to the agent hint header for the returned HttpClient instance. apiSettings IDownstreamAPISettings A DownstreamAPISettings class that contains the configured path to the desired API key. Exceptions ArgumentNullException Methods CreateClient(string) Creates a HttpClient instance from the provided client name. The client name must be registered in the IHttpClientFactory configuration. The headers added to the request are: X-API-KEY: The API key for the target API. X-USER-IDENTITY: The user identity information for the current user. X-AGENT-HINT: The agent hint provided in an incoming HTTP request, if any. public HttpClient CreateClient(string clientName) Parameters clientName string The named HttpClient client configuration. Returns HttpClient"
  },
  "api/dotnet/FoundationaLLM.Common.Services.NoOpUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.NoOpUserClaimsProviderService.html",
    "title": "Class NoOpUserClaimsProviderService | FoundationaLLM",
    "keywords": "Class NoOpUserClaimsProviderService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed. public class NoOpUserClaimsProviderService : IUserClaimsProviderService Inheritance object NoOpUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserIdentity(ClaimsPrincipal?) Returns null. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal Returns UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.html",
    "title": "Namespace FoundationaLLM.Common.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services Classes DataLakeStorageService Provides access to Azure Data Lake blob storage. EntraUserClaimsProviderService Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. HttpClientFactoryService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. NoOpUserClaimsProviderService No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.BlobStorageAuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.BlobStorageAuthenticationTypes.html",
    "title": "Enum BlobStorageAuthenticationTypes | FoundationaLLM",
    "keywords": "Enum BlobStorageAuthenticationTypes Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Types of authentication for blob storage accounts. public enum BlobStorageAuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AccountKey = 2 Account key authentication type. AzureIdentity = 0 Azure managed identity authentication type. ConnectionString = 1 Connection string authentication type. Unknown = -1 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.BlobStorageServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.BlobStorageServiceSettings.html",
    "title": "Class BlobStorageServiceSettings | FoundationaLLM",
    "keywords": "Class BlobStorageServiceSettings Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize a blob storage service. public record BlobStorageServiceSettings : IEquatable<BlobStorageServiceSettings> Inheritance object BlobStorageServiceSettings Implements IEquatable<BlobStorageServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountKey The account key used for authentication. This value should be set only if AuthenticationType has a value of AccountKey. public string? AccountKey { get; set; } Property Value string AccountName The name of the blob storage account. public required string AccountName { get; set; } Property Value string AuthenticationType A BlobStorageAuthenticationTypes value indicating the type of authentication used. public required BlobStorageAuthenticationTypes AuthenticationType { get; set; } Property Value BlobStorageAuthenticationTypes ConnectionString The connection string used for authentication. This value should be set only if AuthenticationType has a value of ConnectionString. public string? ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html",
    "title": "Class CommonHttpRetryStrategyOptions | FoundationaLLM",
    "keywords": "Class CommonHttpRetryStrategyOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Common Http retry resiliency strategy options used by the API classes and their libraries. public static class CommonHttpRetryStrategyOptions Inheritance object CommonHttpRetryStrategyOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCommonHttpRetryStrategyOptions() Configures the commonly used Polly Http retry resiliency strategy options. public static HttpRetryStrategyOptions GetCommonHttpRetryStrategyOptions() Returns HttpRetryStrategyOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerSettings.html",
    "title": "Class CommonJsonSerializerSettings | FoundationaLLM",
    "keywords": "Class CommonJsonSerializerSettings Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll JSON serializer settings for the API classes and their libraries. public static class CommonJsonSerializerSettings Inheritance object CommonJsonSerializerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJsonSerializerSettings() Configures the Newtonsoft JSON serializer settings. public static JsonSerializerSettings GetJsonSerializerSettings() Returns JsonSerializerSettings"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.html",
    "title": "Namespace FoundationaLLM.Common.Settings | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Settings Classes BlobStorageServiceSettings Provides configuration settings to initialize a blob storage service. CommonHttpRetryStrategyOptions Common Http retry resiliency strategy options used by the API classes and their libraries. CommonJsonSerializerSettings JSON serializer settings for the API classes and their libraries. Enums BlobStorageAuthenticationTypes Types of authentication for blob storage accounts."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html",
    "title": "Class TaskPool | FoundationaLLM",
    "keywords": "Class TaskPool Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents a pool of active tasks with a predefined capacity. public class TaskPool Inheritance object TaskPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TaskPool(int) Constructs a task pool with a specified capacity. public TaskPool(int maxConcurrentTasks) Parameters maxConcurrentTasks int Indicates the maximum number of tasks accepted by the task pool. Properties AvailableCapacity Indicates whether the task pool is at capacity or not. public int AvailableCapacity { get; } Property Value int Methods Add(IEnumerable<Task>) Adds a new batch of tasks to the task pool. public void Add(IEnumerable<Task> tasks) Parameters tasks IEnumerable<Task> The list of tasks to be added to the pool. Exceptions TaskPoolException The exception raised when a task cannot be added to the pool (e.g., the task pool is at capacity)."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html",
    "title": "Class TaskPoolException | FoundationaLLM",
    "keywords": "Class TaskPoolException Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents errors that occur in task pools. public class TaskPoolException : Exception, ISerializable Inheritance object Exception TaskPoolException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TaskPoolException() Initializes a new instance of the TaskPoolException class with a default message. public TaskPoolException() TaskPoolException(string?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message) Parameters message string A string that describes the error. TaskPoolException(string?, Exception?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.html",
    "title": "Namespace FoundationaLLM.Common.Tasks | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Tasks Classes TaskPool Represents a pool of active tasks with a predefined capacity. TaskPoolException Represents errors that occur in task pools."
  },
  "api/dotnet/FoundationaLLM.Common.html": {
    "href": "api/dotnet/FoundationaLLM.Common.html",
    "title": "Namespace FoundationaLLM.Common | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common Namespaces FoundationaLLM.Common.Authentication FoundationaLLM.Common.Constants FoundationaLLM.Common.Extensions FoundationaLLM.Common.Interfaces FoundationaLLM.Common.Middleware FoundationaLLM.Common.Models FoundationaLLM.Common.OpenAPI FoundationaLLM.Common.Services FoundationaLLM.Common.Settings FoundationaLLM.Common.Tasks"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html",
    "title": "Class BrandingController | FoundationaLLM",
    "keywords": "Class BrandingController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides branding information for the client. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class BrandingController : ControllerBase Inheritance object ControllerBase BrandingController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BrandingController(IOptions<ClientBrandingConfiguration>) Constructor for the Branding Controller. public BrandingController(IOptions<ClientBrandingConfiguration> settings) Parameters settings IOptions<ClientBrandingConfiguration> Methods Index() Retrieves the branding information for the client. [AllowAnonymous] [HttpGet(Name = \"GetBranding\")] public IActionResult Index() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Methods for orchestration services exposed by the Gatekeeper API service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Orchestration Controller. Constructors OrchestrationController(IGatekeeperAPIService, ILogger<OrchestrationController>) Methods for orchestration services exposed by the Gatekeeper API service. public OrchestrationController(IGatekeeperAPIService gatekeeperAPIService, ILogger<OrchestrationController> logger) Parameters gatekeeperAPIService IGatekeeperAPIService Provides methods for calling the Gatekeeper API. logger ILogger<OrchestrationController> The logging interface used to log under the OrchestrationController type name. Remarks Constructor for the Orchestration Controller. Methods GetCompletion(CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. [AllowAnonymous] [HttpPost(\"completion\", Name = \"GetCompletion\")] public Task<IActionResult> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<IActionResult> GetSummary(SummaryRequest) Requests a summary from the downstream APIs via the Gatekeeper API. [AllowAnonymous] [HttpPost(\"summary\", Name = \"GetSummary\")] public Task<IActionResult> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summary request containing the user prompt. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html",
    "title": "Class SessionsController | FoundationaLLM",
    "keywords": "Class SessionsController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for interacting with the Core service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class SessionsController : ControllerBase Inheritance object ControllerBase SessionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SessionsController(ICoreService, ILogger<SessionsController>) Constructor for the Core Controller. public SessionsController(ICoreService coreService, ILogger<SessionsController> logger) Parameters coreService ICoreService The Core service provides methods for managing chat sessions and messages, and for getting completions from the orchestrator. logger ILogger<SessionsController> The logging interface used to log under the SessionsController type name. Methods CreateNewChatSession() Creates a new chat session. [HttpPost(Name = \"CreateNewChatSession\")] public Task<Session> CreateNewChatSession() Returns Task<Session> DeleteChatSession(string) Delete a chat session and related messages. [HttpDelete(\"{sessionId}\", Name = \"DeleteChatSession\")] public Task DeleteChatSession(string sessionId) Parameters sessionId string Returns Task GetAllChatSessions() Returns list of chat session ids and names. [HttpGet(Name = \"GetAllChatSessions\")] public Task<IEnumerable<Session>> GetAllChatSessions() Returns Task<IEnumerable<Session>> GetChatCompletion(string, string) Receive a prompt from a user, vectorize it, and get a completion from the orchestration service. [HttpPost(\"{sessionId}/completion\", Name = \"GetChatCompletion\")] public Task<Completion> GetChatCompletion(string sessionId, string userPrompt) Parameters sessionId string The id of the session for which to get a completion. userPrompt string The prompt to send to the orchestration service. Returns Task<Completion> GetChatSessionMessages(string) Returns the chat messages related to an existing session. [HttpGet(\"{sessionId}/messages\", Name = \"GetChatSessionMessages\")] public Task<IEnumerable<Message>> GetChatSessionMessages(string sessionId) Parameters sessionId string The id of the session for which to retrieve chat messages. Returns Task<IEnumerable<Message>> GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. [HttpGet(\"{sessionId}/completionprompts/{completionPromptId}\", Name = \"GetCompletionPrompt\")] public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessage(string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. [HttpPost(\"{sessionId}/message/{messageId}/rate\", Name = \"RateMessage\")] public Task<Message> RateMessage(string messageId, string sessionId, bool? rating) Parameters messageId string The id of the message to rate. sessionId string The id of the session to which the message belongs. rating bool? The rating to assign to the message. Returns Task<Message> RenameChatSession(string, string) Rename the chat session. [HttpPost(\"{sessionId}/rename\", Name = \"RenameChatSession\")] public Task<Session> RenameChatSession(string sessionId, string newChatSessionName) Parameters sessionId string The id of the session to rename. newChatSessionName string The new name for the session. Returns Task<Session> SummarizeChatSessionName(string, string) Generate a name for a chat message, based on the passed in prompt. [HttpPost(\"{sessionId}/summarize-name\", Name = \"SummarizeChatSessionName\")] public Task<Completion> SummarizeChatSessionName(string sessionId, string prompt) Parameters sessionId string The id of the session for which to generate a name. prompt string The prompt to use to generate the name. Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for checking the status of the service. [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Core API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html",
    "title": "Class UserProfilesController | FoundationaLLM",
    "keywords": "Class UserProfilesController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing user profiles. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class UserProfilesController : ControllerBase Inheritance object ControllerBase UserProfilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfilesController(IUserProfileService, IOptions<ClientBrandingConfiguration>) Constructor for the UserProfiles Controller. public UserProfilesController(IUserProfileService userProfileService, IOptions<ClientBrandingConfiguration> settings) Parameters userProfileService IUserProfileService The Core service provides methods for managing the user profile. settings IOptions<ClientBrandingConfiguration> The branding configuration for the client. Methods GetAgents() Retrieves a list of global and private agents. [HttpGet(\"agents\", Name = \"GetAgents\")] public Task<IEnumerable<Agent>> GetAgents() Returns Task<IEnumerable<Agent>> Index() Retrieves the branding information for the client. [HttpGet(Name = \"GetUserProfile\")] public Task<IActionResult> Index() Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Core.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.API.Controllers Classes BrandingController Provides branding information for the client. OrchestrationController Methods for orchestration services exposed by the Gatekeeper API service. SessionsController Provides methods for interacting with the Core service. StatusController Provides methods for checking the status of the service. UserProfilesController Provides methods for retrieving and managing user profiles."
  },
  "api/dotnet/FoundationaLLM.Core.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Core.API Assembly FoundationaLLM.Core.API.dll Main entry point for the Core API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Core API service configuration. public static void Main(string[] args) Parameters args string[] RegisterAuthConfiguration(WebApplicationBuilder) Register the authentication services. public static void RegisterAuthConfiguration(WebApplicationBuilder builder) Parameters builder WebApplicationBuilder"
  },
  "api/dotnet/FoundationaLLM.Core.API.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.html",
    "title": "Namespace FoundationaLLM.Core.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.API Namespaces FoundationaLLM.Core.API.Controllers Classes Program Main entry point for the Core API."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html",
    "title": "Interface ICoreService | FoundationaLLM",
    "keywords": "Interface ICoreService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. public interface ICoreService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateNewChatSessionAsync() Creates a new chat session. Task<Session> CreateNewChatSessionAsync() Returns Task<Session> DeleteChatSessionAsync(string) Delete a chat session and related messages. Task DeleteChatSessionAsync(string sessionId) Parameters sessionId string Returns Task GetAllChatSessionsAsync() Returns list of chat session ids and names. Task<List<Session>> GetAllChatSessionsAsync() Returns Task<List<Session>> GetChatCompletionAsync(string?, string) Receive a prompt from a user, vectorize it from the OpenAI service, and get a completion from the OpenAI service. Task<Completion> GetChatCompletionAsync(string? sessionId, string userPrompt) Parameters sessionId string userPrompt string Returns Task<Completion> GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. Task<List<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<List<Message>> GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessageAsync(string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. Task<Message> RateMessageAsync(string id, string sessionId, bool? rating) Parameters id string sessionId string rating bool? Returns Task<Message> RenameChatSessionAsync(string, string) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. Task<Session> RenameChatSessionAsync(string sessionId, string newChatSessionName) Parameters sessionId string newChatSessionName string Returns Task<Session> SummarizeChatSessionNameAsync(string?, string) Generate a name for a chat message, based on the passed in prompt. Task<Completion> SummarizeChatSessionNameAsync(string? sessionId, string prompt) Parameters sessionId string prompt string Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html",
    "title": "Interface ICosmosDbChangeFeedService | FoundationaLLM",
    "keywords": "Interface ICosmosDbChangeFeedService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains Azure Cosmos DB change feed methods. public interface ICosmosDbChangeFeedService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Indicates whether the Azure Cosmos DB change feed is initialized. bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbService.html",
    "title": "Interface ICosmosDbService | FoundationaLLM",
    "keywords": "Interface ICosmosDbService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for accessing Azure Cosmos DB for NoSQL. public interface ICosmosDbService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteSessionAndMessagesAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. Task DeleteSessionAndMessagesAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetSessionAsync(string, CancellationToken) Performs a point read to retrieve a single chat session item. Task<Session> GetSessionAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Session> The chat session item. GetSessionMessagesAsync(string, string, CancellationToken) Gets a list of all current chat messages for a specified session identifier. Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetSessionsAsync(string, string, CancellationToken) Gets a list of all current chat sessions. Task<List<Session>> GetSessionsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The session type to return. upn string The user principal name used for retrieving sessions for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Session>> List of distinct chat session items. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> GetVectorSearchDocumentsAsync(List<DocumentVector>, CancellationToken) Reads all documents retrieved by Vector Search. Task<string> GetVectorSearchDocumentsAsync(List<DocumentVector> vectorDocuments, CancellationToken cancellationToken = default) Parameters vectorDocuments List<DocumentVector> List string of JSON documents from vector search results cancellationToken CancellationToken Cancellation token for async calls. Returns Task<string> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. InsertSessionAsync(Session, CancellationToken) Creates a new chat session. Task<Session> InsertSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Newly created chat session item. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateMessageRatingAsync(string, string, bool?, CancellationToken) Updates a message's rating through a patch operation. Task<Message> UpdateMessageRatingAsync(string id, string sessionId, bool? rating, CancellationToken cancellationToken = default) Parameters id string The message id. sessionId string The message's partition key (session id). rating bool? The rating to replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateSessionAsync(Session, CancellationToken) Updates an existing chat session. Task<Session> UpdateSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised created chat session item. UpdateSessionNameAsync(string, string, CancellationToken) Updates a session's name through a patch operation. Task<Session> UpdateSessionNameAsync(string id, string name, CancellationToken cancellationToken = default) Parameters id string The session id. name string The session's new name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised chat session item. UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Session, CancellationToken) Create or update a user session from the passed in Session object. Task UpsertUserSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html",
    "title": "Interface IGatekeeperAPIService | FoundationaLLM",
    "keywords": "Interface IGatekeeperAPIService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public interface IGatekeeperAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> GetSummary(SummaryRequest) Requests a summary from the downstream APIs via the Gatekeeper API. Task<string> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summary request object. Returns Task<string> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IOpenAiService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IOpenAiService.html",
    "title": "Interface IOpenAiService | FoundationaLLM",
    "keywords": "Interface IOpenAiService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll This service is provided as an example, it is not used by the main RAG flow. public interface IOpenAiService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxConversationBytes Gets the maximum number of tokens to limit chat conversation length. int MaxConversationBytes { get; } Property Value int Methods GetChatCompletionAsync(string, string, string) Sends a prompt to the deployed OpenAI LLM model and returns the response. Task<(string response, int promptTokens, int responseTokens)> GetChatCompletionAsync(string sessionId, string userPrompt, string documents) Parameters sessionId string Chat session identifier for the current conversation. userPrompt string Prompt message to send to the deployment. documents string Documents used for the data context. Returns Task<(string response, int promptTokens, int responseTokens)> Response from the OpenAI model along with tokens for the prompt and response. GetEmbeddingsAsync(dynamic) Sends a prompt to the deployed OpenAI embeddings model and returns an array of vectors as a response. Task<(float[] response, int responseTokens)> GetEmbeddingsAsync(dynamic input) Parameters input dynamic The input for which to create embeddings. Returns Task<(float[] response, int responseTokens)> Response from the OpenAI model as an array of vectors along with tokens for the prompt and response. GetEmbeddingsAsync(dynamic, string) Sends a prompt to the deployed OpenAI embeddings model and returns an array of vectors as a response. Task<(float[] response, int responseTokens)> GetEmbeddingsAsync(dynamic input, string sessionId) Parameters input dynamic The input for which to create embeddings. sessionId string Chat session identifier for the current conversation. Returns Task<(float[] response, int responseTokens)> Response from the OpenAI model as an array of vectors along with tokens for the prompt and response. SummarizeAsync(string, string) Sends the existing conversation to the OpenAI model and returns a two word summary. Task<string> SummarizeAsync(string sessionId, string userPrompt) Parameters sessionId string Chat session identifier for the current conversation. userPrompt string The first User Prompt and Completion to send to the deployment. Returns Task<string> Summarization response from the OpenAI model deployment."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IUserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IUserProfileService.html",
    "title": "Interface IUserProfileService | FoundationaLLM",
    "keywords": "Interface IUserProfileService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Provides methods for working with user profiles. public interface IUserProfileService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserProfileAsync() Returns the user profile of the signed in user. Task<UserProfile?> GetUserProfileAsync() Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string) Returns the user profile of the specified user. Task<UserProfile?> GetUserProfileForUserAsync(string upn) Parameters upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(UserProfile) Inserts or updates a user profile. Task UpsertUserProfileAsync(UserProfile userProfile) Parameters userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IVectorDatabaseServiceManagement.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IVectorDatabaseServiceManagement.html",
    "title": "Interface IVectorDatabaseServiceManagement | FoundationaLLM",
    "keywords": "Interface IVectorDatabaseServiceManagement Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Interface for managing vector database databases. public interface IVectorDatabaseServiceManagement Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteVector(object) Deletes an entity from the vector database. Task DeleteVector(object document) Parameters document object The entity to remove from the vector database. Returns Task InsertVector(object) Inserts an entity into the vector database. Task InsertVector(object document) Parameters document object The entity to add to the vector database. Returns Task InsertVectors(IEnumerable<object>) Inserts a collection of entities into the vector database. Task InsertVectors(IEnumerable<object> documents) Parameters documents IEnumerable<object> The entities to add to the vector database. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IVectorDatabaseServiceQueries.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IVectorDatabaseServiceQueries.html",
    "title": "Interface IVectorDatabaseServiceQueries | FoundationaLLM",
    "keywords": "Interface IVectorDatabaseServiceQueries Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Interface for the vector database service search queries. public interface IVectorDatabaseServiceQueries Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods VectorSearchAsync(float[]) Performs a vector similarity search against the vector database. Task<string> VectorSearchAsync(float[] embeddings) Parameters embeddings float[] The vector used in the index search. Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Interfaces Interfaces ICoreService Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. ICosmosDbChangeFeedService Contains Azure Cosmos DB change feed methods. ICosmosDbService Contains methods for accessing Azure Cosmos DB for NoSQL. IGatekeeperAPIService Contains methods for interacting with the Gatekeeper API. IOpenAiService This service is provided as an example, it is not used by the main RAG flow. IUserProfileService Provides methods for working with user profiles. IVectorDatabaseServiceManagement Interface for managing vector database databases. IVectorDatabaseServiceQueries Interface for the vector database service search queries."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.CosmosDbSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.CosmosDbSettings.html",
    "title": "Class CosmosDbSettings | FoundationaLLM",
    "keywords": "Class CosmosDbSettings Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Stores the Azure Cosmos DB settings from the app configuration. public record CosmosDbSettings : IEquatable<CosmosDbSettings> Inheritance object CosmosDbSettings Implements IEquatable<CosmosDbSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChangeFeedLeaseContainer The name of the Azure Cosmos DB container used for change feed leases. public required string ChangeFeedLeaseContainer { get; init; } Property Value string Containers Comma-separated list of Azure Cosmos DB container names. public required string Containers { get; init; } Property Value string Database The name of the Azure Cosmos DB database. public required string Database { get; init; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; init; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; init; } Property Value string Key The Azure Cosmos DB key. public required string Key { get; init; } Property Value string MonitoredContainers Comma-separated list of Azure Cosmos DB container names to monitor for changes. public required string MonitoredContainers { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Core.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Models.Configuration Classes CosmosDbSettings Stores the Azure Cosmos DB settings from the app configuration."
  },
  "api/dotnet/FoundationaLLM.Core.Models.SessionTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.SessionTypes.html",
    "title": "Class SessionTypes | FoundationaLLM",
    "keywords": "Class SessionTypes Namespace FoundationaLLM.Core.Models Assembly FoundationaLLM.Core.dll Constants for chat session types. public static class SessionTypes Inheritance object SessionTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KioskSession Named session with matching type for the KioskSession. public const string KioskSession = \"KioskSession\" Field Value string Session Named session with matching type for the Session. public const string Session = \"Session\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.html",
    "title": "Namespace FoundationaLLM.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Models Namespaces FoundationaLLM.Core.Models.Configuration Classes SessionTypes Constants for chat session types."
  },
  "api/dotnet/FoundationaLLM.Core.Services.CognitiveSearchService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CognitiveSearchService.html",
    "title": "Class CognitiveSearchService | FoundationaLLM",
    "keywords": "Class CognitiveSearchService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll This service is provided as an example, it is not used by the main RAG flow. public class CognitiveSearchService : IVectorDatabaseServiceManagement, IVectorDatabaseServiceQueries Inheritance object CognitiveSearchService Implements IVectorDatabaseServiceManagement IVectorDatabaseServiceQueries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CognitiveSearchService(string, string, string, string, ILogger, bool) Initializes a new instance of the CognitiveSearchService class. public CognitiveSearchService(string azureSearchAdminKey, string azureSearchServiceEndpoint, string azureSearchIndexName, string maxVectorSearchResults, ILogger logger, bool createIndexIfNotExists = false) Parameters azureSearchAdminKey string The Azure Cognitive Search admin key. azureSearchServiceEndpoint string The Azure Cognitive Search endpoint. azureSearchIndexName string The name of the Azure Cognitive Search vector index. maxVectorSearchResults string The maximum number of Azure Cognitive Search vector search results to return. logger ILogger The configured logging interface. createIndexIfNotExists bool If this setting is true, the service will create the Azure Cognitive Search vector index upon initialization if it does not exist. Methods DeleteVector(object) Deletes an entity from the Azure Cognitive Search vector index. public Task DeleteVector(object document) Parameters document object The entity to remove from the vector index. Returns Task InsertVector(object) Inserts an entity into the Azure Cognitive Search vector index. public Task InsertVector(object document) Parameters document object The entity to add to the vector index. Returns Task InsertVectors(IEnumerable<object>) Inserts a collection of entities into the Azure Cognitive Search vector index. public Task InsertVectors(IEnumerable<object> documents) Parameters documents IEnumerable<object> The entities to add to the vector index. Returns Task VectorSearchAsync(float[]) Performs a vector similarity search against the Azure Cognitive Search vector index. public Task<string> VectorSearchAsync(float[] embeddings) Parameters embeddings float[] The vector used in the index search. Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CoreService.html",
    "title": "Class CoreService | FoundationaLLM",
    "keywords": "Class CoreService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll public class CoreService : ICoreService Inheritance object CoreService Implements ICoreService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreService(ICosmosDbService, IGatekeeperAPIService, ILogger<CoreService>, IOptions<ClientBrandingConfiguration>, ICallContext) Initializes a new instance of the CoreService class. public CoreService(ICosmosDbService cosmosDbService, IGatekeeperAPIService gatekeeperAPIService, ILogger<CoreService> logger, IOptions<ClientBrandingConfiguration> settings, ICallContext callContext) Parameters cosmosDbService ICosmosDbService The Azure Cosmos DB service that contains chat sessions and messages. gatekeeperAPIService IGatekeeperAPIService The service used to make calls to the Gatekeeper API. logger ILogger<CoreService> The logging interface used to log under the CoreService type name. settings IOptions<ClientBrandingConfiguration> The ClientBrandingConfiguration settings retrieved by the injected IOptions<TOptions>. callContext ICallContext Contains contextual data for the calling service. Methods CreateNewChatSessionAsync() Creates a new chat session. public Task<Session> CreateNewChatSessionAsync() Returns Task<Session> DeleteChatSessionAsync(string) Delete a chat session and related messages. public Task DeleteChatSessionAsync(string sessionId) Parameters sessionId string Returns Task GetAllChatSessionsAsync() Returns list of chat session ids and names. public Task<List<Session>> GetAllChatSessionsAsync() Returns Task<List<Session>> GetChatCompletionAsync(string?, string) Receive a prompt from a user, vectorize it from the OpenAI service, and get a completion from the OpenAI service. public Task<Completion> GetChatCompletionAsync(string? sessionId, string userPrompt) Parameters sessionId string userPrompt string Returns Task<Completion> GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. public Task<List<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<List<Message>> GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessageAsync(string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. public Task<Message> RateMessageAsync(string id, string sessionId, bool? rating) Parameters id string sessionId string rating bool? Returns Task<Message> RenameChatSessionAsync(string, string) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. public Task<Session> RenameChatSessionAsync(string sessionId, string newChatSessionName) Parameters sessionId string newChatSessionName string Returns Task<Session> SummarizeChatSessionNameAsync(string?, string) Generate a name for a chat message, based on the passed in prompt. public Task<Completion> SummarizeChatSessionNameAsync(string? sessionId, string prompt) Parameters sessionId string prompt string Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CosmosDbChangeFeedService.html",
    "title": "Class CosmosDbChangeFeedService | FoundationaLLM",
    "keywords": "Class CosmosDbChangeFeedService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CosmosDbChangeFeedService : ICosmosDbChangeFeedService Inheritance object CosmosDbChangeFeedService Implements ICosmosDbChangeFeedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbChangeFeedService(ILogger<CosmosDbChangeFeedService>, ICosmosDbService, IOptions<CosmosDbSettings>) Initializes a new instance of the CosmosDbChangeFeedService class. public CosmosDbChangeFeedService(ILogger<CosmosDbChangeFeedService> logger, ICosmosDbService cosmosDbService, IOptions<CosmosDbSettings> settings) Parameters logger ILogger<CosmosDbChangeFeedService> The logging interface used to log under the CosmosDbChangeFeedService type name. cosmosDbService ICosmosDbService Contains standard methods for managing data stored within the Azure Cosmos DB workspace. settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Properties IsInitialized Gets a value indicating whether the change feeds have been initialized. public bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. public Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. public Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CosmosDbService.html",
    "title": "Class CosmosDbService | FoundationaLLM",
    "keywords": "Class CosmosDbService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Service to access Azure Cosmos DB for NoSQL. public class CosmosDbService : ICosmosDbService Inheritance object CosmosDbService Implements ICosmosDbService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbService(IOptions<CosmosDbSettings>, ILogger<CosmosDbService>) Initializes a new instance of the CosmosDbService class. public CosmosDbService(IOptions<CosmosDbSettings> settings, ILogger<CosmosDbService> logger) Parameters settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. logger ILogger<CosmosDbService> The logging interface used to log under the CosmosDbService type name. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Methods DeleteSessionAndMessagesAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. public Task DeleteSessionAndMessagesAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetSessionAsync(string, CancellationToken) Performs a point read to retrieve a single chat session item. public Task<Session> GetSessionAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Session> The chat session item. GetSessionMessagesAsync(string, string, CancellationToken) Gets a list of all current chat messages for a specified session identifier. public Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetSessionsAsync(string, string, CancellationToken) Gets a list of all current chat sessions. public Task<List<Session>> GetSessionsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The session type to return. upn string The user principal name used for retrieving sessions for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Session>> List of distinct chat session items. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. public Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> GetVectorSearchDocumentsAsync(List<DocumentVector>, CancellationToken) Reads all documents retrieved by Vector Search. public Task<string> GetVectorSearchDocumentsAsync(List<DocumentVector> vectorDocuments, CancellationToken cancellationToken = default) Parameters vectorDocuments List<DocumentVector> List string of JSON documents from vector search results cancellationToken CancellationToken Cancellation token for async calls. Returns Task<string> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. public Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. InsertSessionAsync(Session, CancellationToken) Creates a new chat session. public Task<Session> InsertSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Newly created chat session item. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. public Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateMessageRatingAsync(string, string, bool?, CancellationToken) Updates a message's rating through a patch operation. public Task<Message> UpdateMessageRatingAsync(string id, string sessionId, bool? rating, CancellationToken cancellationToken = default) Parameters id string The message id. sessionId string The message's partition key (session id). rating bool? The rating to replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateSessionAsync(Session, CancellationToken) Updates an existing chat session. public Task<Session> UpdateSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised created chat session item. UpdateSessionNameAsync(string, string, CancellationToken) Updates a session's name through a patch operation. public Task<Session> UpdateSessionNameAsync(string id, string name, CancellationToken cancellationToken = default) Parameters id string The session id. name string The session's new name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised chat session item. UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. public Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. public Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Session, CancellationToken) Create or update a user session from the passed in Session object. public Task UpsertUserSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html",
    "title": "Class GatekeeperAPIService | FoundationaLLM",
    "keywords": "Class GatekeeperAPIService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperAPIService : IGatekeeperAPIService Inheritance object GatekeeperAPIService Implements IGatekeeperAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperAPIService(IHttpClientFactoryService) Initializes a new instance of the GatekeeperAPIService class. public GatekeeperAPIService(IHttpClientFactoryService httpClientFactoryService) Parameters httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gateway API requests. Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. public Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> GetSummary(SummaryRequest) Requests a summary from the downstream APIs via the Gatekeeper API. public Task<string> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summary request object. Returns Task<string> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. public Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.OpenAiService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.OpenAiService.html",
    "title": "Class OpenAiService | FoundationaLLM",
    "keywords": "Class OpenAiService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll This service is provided as an example, it is not used by the main RAG flow. public class OpenAiService : IOpenAiService Inheritance object OpenAiService Implements IOpenAiService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OpenAiService(string, string, string, string, string, ILogger) Creates a new instance of the service. public OpenAiService(string endpoint, string key, string embeddingsDeployment, string completionsDeployment, string maxConversationBytes, ILogger logger) Parameters endpoint string Endpoint URI. key string Account key. embeddingsDeployment string Name of the model deployment for generating embeddings. completionsDeployment string Name of the model deployment for generating completions. maxConversationBytes string Maximum number of bytes to limit conversation history sent for a completion. logger ILogger Logger instance. Remarks This constructor will validate credentials and create a HTTP client instance. Exceptions ArgumentNullException Thrown when endpoint, key, deploymentName, or maxConversationBytes is either null or empty. Properties MaxConversationBytes Gets the maximum number of tokens to limit chat conversation length. public int MaxConversationBytes { get; } Property Value int Methods GetChatCompletionAsync(string, string, string) Sends a prompt to the deployed OpenAI LLM model and returns the response. public Task<(string response, int promptTokens, int responseTokens)> GetChatCompletionAsync(string sessionId, string userPrompt, string documents) Parameters sessionId string Chat session identifier for the current conversation. userPrompt string Prompt message to send to the deployment. documents string Documents used for the data context. Returns Task<(string response, int promptTokens, int responseTokens)> Response from the OpenAI model along with tokens for the prompt and response. GetEmbeddingsAsync(dynamic) Sends a prompt to the deployed OpenAI embeddings model and returns an array of vectors as a response. public Task<(float[] response, int responseTokens)> GetEmbeddingsAsync(dynamic input) Parameters input dynamic The input for which to create embeddings. Returns Task<(float[] response, int responseTokens)> Response from the OpenAI model as an array of vectors along with tokens for the prompt and response. GetEmbeddingsAsync(dynamic, string) Sends a prompt to the deployed OpenAI embeddings model and returns an array of vectors as a response. public Task<(float[] response, int responseTokens)> GetEmbeddingsAsync(dynamic input, string sessionId) Parameters input dynamic The input for which to create embeddings. sessionId string Chat session identifier for the current conversation. Returns Task<(float[] response, int responseTokens)> Response from the OpenAI model as an array of vectors along with tokens for the prompt and response. SummarizeAsync(string, string) Sends the existing conversation to the OpenAI model and returns a two word summary. public Task<string> SummarizeAsync(string sessionId, string userPrompt) Parameters sessionId string Chat session identifier for the current conversation. userPrompt string The first User Prompt and Completion to send to the deployment. Returns Task<string> Summarization response from the OpenAI model deployment."
  },
  "api/dotnet/FoundationaLLM.Core.Services.UserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.UserProfileService.html",
    "title": "Class UserProfileService | FoundationaLLM",
    "keywords": "Class UserProfileService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class UserProfileService : IUserProfileService Inheritance object UserProfileService Implements IUserProfileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfileService(ICosmosDbService, ILogger<CoreService>, ICallContext) Initializes a new instance of the CoreService class. public UserProfileService(ICosmosDbService cosmosDbService, ILogger<CoreService> logger, ICallContext callContext) Parameters cosmosDbService ICosmosDbService The Azure Cosmos DB service that contains user profiles. logger ILogger<CoreService> The logging interface used to log under the UserProfileService type name. callContext ICallContext Contains contextual data for the calling service. Methods GetUserProfileAsync() Returns the user profile of the signed in user. public Task<UserProfile?> GetUserProfileAsync() Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string) Returns the user profile of the specified user. public Task<UserProfile?> GetUserProfileForUserAsync(string upn) Parameters upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(UserProfile) Inserts or updates a user profile. public Task UpsertUserProfileAsync(UserProfile userProfile) Parameters userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.html",
    "title": "Namespace FoundationaLLM.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Services Classes CognitiveSearchService This service is provided as an example, it is not used by the main RAG flow. CoreService CosmosDbChangeFeedService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. CosmosDbService Service to access Azure Cosmos DB for NoSQL. GatekeeperAPIService Contains methods for interacting with the Gatekeeper API. OpenAiService This service is provided as an example, it is not used by the main RAG flow. UserProfileService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html",
    "title": "Class ObjectExtensions | FoundationaLLM",
    "keywords": "Class ObjectExtensions Namespace FoundationaLLM.Core.Utils Assembly FoundationaLLM.Core.dll Contains extension methods for objects. public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPropertyValues(object, List<string>) Gets the values of a specified set of properties of an object. public static List<string?> GetPropertyValues(this object obj, List<string> propertyNames) Parameters obj object The object instance. propertyNames List<string> The list of property names. Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Core.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.html",
    "title": "Namespace FoundationaLLM.Core.Utils | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Utils Classes ObjectExtensions Contains extension methods for objects."
  },
  "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html",
    "title": "Class ChangeFeedWorker | FoundationaLLM",
    "keywords": "Class ChangeFeedWorker Namespace FoundationaLLM.Core.Worker Assembly FoundationaLLM.Core.Worker.dll Background service that runs the Change Feed Processor. public class ChangeFeedWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService ChangeFeedWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ChangeFeedWorker(ILogger<ChangeFeedWorker>, TelemetryClient, ICosmosDbChangeFeedService) Instantiates a new instance of the ChangeFeedWorker. public ChangeFeedWorker(ILogger<ChangeFeedWorker> logger, TelemetryClient telemetryClient, ICosmosDbChangeFeedService cosmosDbChangeFeedService) Parameters logger ILogger<ChangeFeedWorker> The logging interface used to log under the ChangeFeedWorker type name. telemetryClient TelemetryClient The telemetry client sends events, metrics, and other telemetry to the App Insights service. cosmosDbChangeFeedService ICosmosDbChangeFeedService The Cosmos DB change feed processor that performs the event processing tasks for the worker. Methods ExecuteAsync(CancellationToken) Executes the Change Feed Processor. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.html",
    "title": "Namespace FoundationaLLM.Core.Worker | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Worker Classes ChangeFeedWorker Background service that runs the Change Feed Processor."
  },
  "api/dotnet/FoundationaLLM.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Core.html",
    "title": "Namespace FoundationaLLM.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core Namespaces FoundationaLLM.Core.API FoundationaLLM.Core.Interfaces FoundationaLLM.Core.Models FoundationaLLM.Core.Services FoundationaLLM.Core.Utils FoundationaLLM.Core.Worker"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Wrapper for Gatekeeper service. [ApiVersion(1, null)] [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper API orchestration controller. Constructors OrchestrationController(IGatekeeperService) Wrapper for Gatekeeper service. public OrchestrationController(IGatekeeperService gatekeeperService) Parameters gatekeeperService IGatekeeperService Remarks Constructor for the Gatekeeper API orchestration controller. Methods GetCompletion(CompletionRequest) Gets a completion from the Gatekeeper service. [HttpPost(\"completion\")] public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Gatekeeper service. [HttpPost(\"summary\")] public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Provides methods for checking the status of the service. [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Gatekeeper API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Gatekeeper API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.API.Controllers Classes OrchestrationController Wrapper for Gatekeeper service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Gatekeeper.API Assembly FoundationaLLM.Gatekeeper.API.dll Program class for the Gatekeeper API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for Gatekeeper API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.API Namespaces FoundationaLLM.Gatekeeper.API.Controllers Classes Program Program class for the Gatekeeper API."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IAgentFactoryAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IAgentFactoryAPIService.html",
    "title": "Interface IAgentFactoryAPIService | FoundationaLLM",
    "keywords": "Interface IAgentFactoryAPIService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling the Agent Factory API. public interface IAgentFactoryAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(CompletionRequest) Gets a completion from the Agent Factory API. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Agent Factory API. Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html",
    "title": "Interface IContentSafetyService | FoundationaLLM",
    "keywords": "Interface IContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling a content safety service. public interface IContentSafetyService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html",
    "title": "Interface IGatekeeperIntegrationAPIService | FoundationaLLM",
    "keywords": "Interface IGatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper Integration API. public interface IGatekeeperIntegrationAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html",
    "title": "Interface IGatekeeperService | FoundationaLLM",
    "keywords": "Interface IGatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for the Gatekeeper service. public interface IGatekeeperService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(CompletionRequest) Gets a completion from the Gatekeeper service. Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Gatekeeper service. Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IRefinementService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IRefinementService.html",
    "title": "Interface IRefinementService | FoundationaLLM",
    "keywords": "Interface IRefinementService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for a user prompt refinement service. public interface IRefinementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods RefineUserPrompt(string) Refines the user prompt text. Task<string> RefineUserPrompt(string userPrompt) Parameters userPrompt string The user prompt text. Returns Task<string> The refined user prompt text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Interfaces IAgentFactoryAPIService Interface for calling the Agent Factory API. IContentSafetyService Interface for calling a content safety service. IGatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper Integration API. IGatekeeperService Interface for the Gatekeeper service. IRefinementService Interface for a user prompt refinement service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html",
    "title": "Class AzureContentSafetySettings | FoundationaLLM",
    "keywords": "Class AzureContentSafetySettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Azure Content Safety service. public record AzureContentSafetySettings : IEquatable<AzureContentSafetySettings> Inheritance object AzureContentSafetySettings Implements IEquatable<AzureContentSafetySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The Azure Content Safety key. public required string APIKey { get; init; } Property Value string APIUrl The Azure Content Safety endpoint. public required string APIUrl { get; init; } Property Value string HateSeverity The threshold for filtering the contents of a text, based on the \"Hate\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int HateSeverity { get; init; } Property Value int SelfHarmSeverity The threshold for filtering the contents of a text, based on the \"Self-Harm\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SelfHarmSeverity { get; init; } Property Value int SexualSeverity The threshold for filtering the contents of a text, based on the \"Sexual\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SexualSeverity { get; init; } Property Value int ViolenceSeverity The threshold for filtering the contents of a text, based on the \"Violence\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int ViolenceSeverity { get; init; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html",
    "title": "Class GatekeeperServiceSettings | FoundationaLLM",
    "keywords": "Class GatekeeperServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Gatekeeper service. public record GatekeeperServiceSettings : IEquatable<GatekeeperServiceSettings> Inheritance object GatekeeperServiceSettings Implements IEquatable<GatekeeperServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EnableAzureContentSafety Flag for enabling or disabling the Azure Content Safety feature. public required bool EnableAzureContentSafety { get; init; } Property Value bool EnableMicrosoftPresidio Flag for enabling or disabling the Microsoft Presidio feature. public required bool EnableMicrosoftPresidio { get; init; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.RefinementServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.RefinementServiceSettings.html",
    "title": "Class RefinementServiceSettings | FoundationaLLM",
    "keywords": "Class RefinementServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the user prompt Refinement service. public record RefinementServiceSettings : IEquatable<RefinementServiceSettings> Inheritance object RefinementServiceSettings Implements IEquatable<RefinementServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Classes AzureContentSafetySettings Provides configuration options for the Azure Content Safety service. GatekeeperServiceSettings Provides configuration options for the Gatekeeper service. RefinementServiceSettings Provides configuration options for the user prompt Refinement service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html",
    "title": "Class AnalyzeTextFilterResult | FoundationaLLM",
    "keywords": "Class AnalyzeTextFilterResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Content filter text analysis restult. public class AnalyzeTextFilterResult Inheritance object AnalyzeTextFilterResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Reason The reason why the content was considered to be unsafe. public required string Reason { get; set; } Property Value string Safe A flag representing if the content is safe or not. public bool Safe { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Classes AnalyzeTextFilterResult Content filter text analysis restult."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html",
    "title": "Class AnalyzeRequest | FoundationaLLM",
    "keywords": "Class AnalyzeRequest Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis request. public class AnalyzeRequest Inheritance object AnalyzeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Anonymize A flag used to tell if PII found by analysis should be anonymized. [JsonProperty(\"anonymize\")] public required bool Anonymize { get; set; } Property Value bool Content The text to be analyzed. [JsonProperty(\"content\")] public required string Content { get; set; } Property Value string Language The language used to detect PII. [JsonProperty(\"language\")] public string? Language { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html",
    "title": "Class AnalyzeResponse | FoundationaLLM",
    "keywords": "Class AnalyzeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis response. public class AnalyzeResponse Inheritance object AnalyzeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonProperty(\"content\")] public required string Content { get; set; } Property Value string Results A list of PII (personally identifiable information) entities identified in the analyzed text. [JsonProperty(\"results\")] public required List<PIIResult> Results { get; set; } Property Value List<PIIResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html",
    "title": "Class AnonymizeResponse | FoundationaLLM",
    "keywords": "Class AnonymizeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text anonymize response. public class AnonymizeResponse Inheritance object AnonymizeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonProperty(\"content\")] public required string Content { get; set; } Property Value string Results A list of anonymized PII (personally identifiable information) entities identified in the analyzed text. [JsonProperty(\"results\")] public required List<PIIResultAnonymized> Results { get; set; } Property Value List<PIIResultAnonymized>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html",
    "title": "Class PIIResult | FoundationaLLM",
    "keywords": "Class PIIResult Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the PII (personally identifiable information) results. public class PIIResult Inheritance object PIIResult Derived PIIResultAnonymized Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EndIndex The end index where a PII entity was detected. [JsonProperty(\"end_index\")] public required int EndIndex { get; set; } Property Value int EntityType The type of personally identifiable information (i.e. Person, Location, Date). [JsonProperty(\"entity_type\")] public required string EntityType { get; set; } Property Value string StartIndex The start index where a PII was detected. [JsonProperty(\"start_index\")] public required int StartIndex { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html",
    "title": "Class PIIResultAnonymized | FoundationaLLM",
    "keywords": "Class PIIResultAnonymized Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the anonymized PII (personally identifiable information) results. public class PIIResultAnonymized : PIIResult Inheritance object PIIResult PIIResultAnonymized Inherited Members PIIResult.EntityType PIIResult.StartIndex PIIResult.EndIndex object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AnonymizedText The anonymized text to be used instead of the original text. [JsonProperty(\"anonymized_text\")] public required string AnonymizedText { get; set; } Property Value string Operator The operator needed to anonymize the original text. [JsonProperty(\"operator\")] public required string Operator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Classes AnalyzeRequest Encapsulates a text analysis request. AnalyzeResponse Encapsulates a text analysis response. AnonymizeResponse Encapsulates a text anonymize response. PIIResult Encapsulates the PII (personally identifiable information) results. PIIResultAnonymized Encapsulates the anonymized PII (personally identifiable information) results."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models Namespaces FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions FoundationaLLM.Gatekeeper.Core.Models.ContentSafety FoundationaLLM.Gatekeeper.Core.Models.Integration"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AgentFactoryAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AgentFactoryAPIService.html",
    "title": "Class AgentFactoryAPIService | FoundationaLLM",
    "keywords": "Class AgentFactoryAPIService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IAgentFactoryAPIService interface. public class AgentFactoryAPIService : IAgentFactoryAPIService Inheritance object AgentFactoryAPIService Implements IAgentFactoryAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentFactoryAPIService(IHttpClientFactoryService) Constructor for the Agent Factory APIS client. public AgentFactoryAPIService(IHttpClientFactoryService httpClientFactoryService) Parameters httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. Methods GetCompletion(CompletionRequest) Gets a completion from the Agent Factory API. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Agent Factory API. public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html",
    "title": "Class AzureContentSafetyService | FoundationaLLM",
    "keywords": "Class AzureContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IContentSafetyService interface. public class AzureContentSafetyService : IContentSafetyService Inheritance object AzureContentSafetyService Implements IContentSafetyService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContentSafetyService(IOptions<AzureContentSafetySettings>, ILogger<AzureContentSafetyService>) Constructor for the Azure Content Safety service. public AzureContentSafetyService(IOptions<AzureContentSafetySettings> options, ILogger<AzureContentSafetyService> logger) Parameters options IOptions<AzureContentSafetySettings> The configuration options for the Azure Content Safety service. logger ILogger<AzureContentSafetyService> The logger for the Azure Content Safety service. Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. public Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html",
    "title": "Class GatekeeperIntegrationAPIService | FoundationaLLM",
    "keywords": "Class GatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperIntegrationAPIService : IGatekeeperIntegrationAPIService Inheritance object GatekeeperIntegrationAPIService Implements IGatekeeperIntegrationAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperIntegrationAPIService(IHttpClientFactoryService) Initializes a new instance of the GatekeeperIntegrationAPIService class. public GatekeeperIntegrationAPIService(IHttpClientFactoryService httpClientFactoryService) Parameters httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gatekeeper Integration API requests. Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. public Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. public Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html",
    "title": "Class GatekeeperService | FoundationaLLM",
    "keywords": "Class GatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IGatekeeperService interface. public class GatekeeperService : IGatekeeperService Inheritance object GatekeeperService Implements IGatekeeperService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper service. Constructors GatekeeperService(IAgentFactoryAPIService, IContentSafetyService, IGatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings>) Implements the IGatekeeperService interface. public GatekeeperService(IAgentFactoryAPIService agentFactoryAPIService, IContentSafetyService contentSafetyService, IGatekeeperIntegrationAPIService gatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings> gatekeeperServiceSettings) Parameters agentFactoryAPIService IAgentFactoryAPIService The Agent Factory API client. contentSafetyService IContentSafetyService The user prompt Content Safety service. gatekeeperIntegrationAPIService IGatekeeperIntegrationAPIService The Gatekeeper Integration API client. gatekeeperServiceSettings IOptions<GatekeeperServiceSettings> The configuration options for the Gatekeeper service. Remarks Constructor for the Gatekeeper service. Methods GetCompletion(CompletionRequest) Gets a completion from the Gatekeeper service. public Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Gatekeeper service. public Task<SummaryResponse> GetSummary(SummaryRequest summaryRequest) Parameters summaryRequest SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.RefinementService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.RefinementService.html",
    "title": "Class RefinementService | FoundationaLLM",
    "keywords": "Class RefinementService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IRefinementService interface. public class RefinementService : IRefinementService Inheritance object RefinementService Implements IRefinementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RefinementService(IOptions<RefinementServiceSettings>, ILogger<RefinementService>) Constructor for the Refinement service. public RefinementService(IOptions<RefinementServiceSettings> options, ILogger<RefinementService> logger) Parameters options IOptions<RefinementServiceSettings> The configuration options for the Refinement service. logger ILogger<RefinementService> Methods RefineUserPrompt(string) Refines the user prompt text. public Task<string> RefineUserPrompt(string userPrompt) Parameters userPrompt string The user prompt text. Returns Task<string> The refined user prompt text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Services Classes AgentFactoryAPIService Implements the IAgentFactoryAPIService interface. AzureContentSafetyService Implements the IContentSafetyService interface. GatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper API. GatekeeperService Implements the IGatekeeperService interface. RefinementService Implements the IRefinementService interface."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core Namespaces FoundationaLLM.Gatekeeper.Core.Interfaces FoundationaLLM.Gatekeeper.Core.Models FoundationaLLM.Gatekeeper.Core.Services"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.html",
    "title": "Namespace FoundationaLLM.Gatekeeper | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper Namespaces FoundationaLLM.Gatekeeper.API FoundationaLLM.Gatekeeper.Core"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.ConfigController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.ConfigController.html",
    "title": "Class ConfigController | FoundationaLLM",
    "keywords": "Class ConfigController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for interacting with the Configuration Management service. [Authorize] [Authorize(Policy = \"RequiredScope\")] [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class ConfigController : ControllerBase Inheritance object ControllerBase ConfigController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigController(IConfigurationManagementService, ILogger<ConfigController>) Constructor for the Config Controller. public ConfigController(IConfigurationManagementService configurationManagementService, ILogger<ConfigController> logger) Parameters configurationManagementService IConfigurationManagementService The Configuration Management service provides methods for managing configurations for FoundationaLLM. logger ILogger<ConfigController> The logging interface used to log under the ConfigController type name. Methods GetAgentHints() Returns the configuration for global agent hints and feature setting. [HttpGet(\"agents\", Name = \"GetAgentHints\")] public Task<AgentHints> GetAgentHints() Returns Task<AgentHints> GetBrandingConfigurations() Returns the branding configuration from app configuration. [HttpGet(\"branding\", Name = \"GetBrandingConfigurations\")] public Task<ClientBrandingConfiguration> GetBrandingConfigurations() Returns Task<ClientBrandingConfiguration> UpdateAgentHints(AgentHints) Updates the configuration for global agent hints and feature setting. [HttpPut(\"agents\", Name = \"UpdateAgentHints\")] public Task UpdateAgentHints(AgentHints agentHints) Parameters agentHints AgentHints Returns Task UpdateBrandingConfigurations(ClientBrandingConfiguration) Updates the branding configuration in app configuration. [HttpPut(\"branding\", Name = \"UpdateBrandingConfigurations\")] public Task UpdateBrandingConfigurations(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for checking the status of the service. [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Management API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Management API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Management.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.API.Controllers Classes ConfigController Provides methods for interacting with the Configuration Management service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Management.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Management.API Assembly FoundationaLLM.Management.API.dll Main entry point for the Management API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Management API service configuration. public static void Main(string[] args) Parameters args string[] RegisterAuthConfiguration(WebApplicationBuilder) Register the authentication services. public static void RegisterAuthConfiguration(WebApplicationBuilder builder) Parameters builder WebApplicationBuilder"
  },
  "api/dotnet/FoundationaLLM.Management.API.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.html",
    "title": "Namespace FoundationaLLM.Management.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.API Namespaces FoundationaLLM.Management.API.Controllers Classes Program Main entry point for the Management API."
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.IConfigurationManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.IConfigurationManagementService.html",
    "title": "Interface IConfigurationManagementService | FoundationaLLM",
    "keywords": "Interface IConfigurationManagementService Namespace FoundationaLLM.Management.Interfaces Assembly FoundationaLLM.Management.dll Provides methods for managing app configuration. public interface IConfigurationManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAgentHintsAsync() Retrieves a list of public agent hints from app configuration. Task<List<string>?> GetAgentHintsAsync() Returns Task<List<string>> GetAllowAgentSelectionAsync() Retrieves the allow agent selection feature flag value from app configuration. Task<bool> GetAllowAgentSelectionAsync() Returns Task<bool> GetBrandingConfigurationAsync() Retrieves the branding configuration from app configuration. Task<ClientBrandingConfiguration> GetBrandingConfigurationAsync() Returns Task<ClientBrandingConfiguration> SetAllowAgentSelectionAsync(bool) Sets the allow agent selection feature flag value in app configuration. Task SetAllowAgentSelectionAsync(bool allowAgentSelection) Parameters allowAgentSelection bool Indicates whether to enable or disable the feature flag. Returns Task SetBrandingConfiguration(ClientBrandingConfiguration) Sets the branding configuration in app configuration. Task SetBrandingConfiguration(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration The branding configuration settings to apply. Returns Task UpdateAgentHintsAsync(IEnumerable<string>?) Creates or updates app configuration setting that lists the public agent hints. Task UpdateAgentHintsAsync(IEnumerable<string>? agentHints) Parameters agentHints IEnumerable<string> Set the value to null if you wish to clear the list of agent hints. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.html",
    "title": "Namespace FoundationaLLM.Management.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Interfaces Interfaces IConfigurationManagementService Provides methods for managing app configuration."
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.Agents.AgentHints.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.Agents.AgentHints.html",
    "title": "Class AgentHints | FoundationaLLM",
    "keywords": "Class AgentHints Namespace FoundationaLLM.Management.Models.Configuration.Agents Assembly FoundationaLLM.Management.dll Provides configuration for global agent hints and feature setting. public class AgentHints Inheritance object AgentHints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedAgentSelection Lists the allowed global agent selection values. public IEnumerable<string>? AllowedAgentSelection { get; set; } Property Value IEnumerable<string> Enabled Indicates whether agent hints are enabled. public bool Enabled { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.Agents.html",
    "title": "Namespace FoundationaLLM.Management.Models.Configuration.Agents | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Models.Configuration.Agents Classes AgentHints Provides configuration for global agent hints and feature setting."
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.AppConfigurationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.AppConfigurationSettings.html",
    "title": "Class AppConfigurationSettings | FoundationaLLM",
    "keywords": "Class AppConfigurationSettings Namespace FoundationaLLM.Management.Models.Configuration Assembly FoundationaLLM.Management.dll Contains settings for the Azure App Configuration service. public record AppConfigurationSettings : IEquatable<AppConfigurationSettings> Inheritance object AppConfigurationSettings Implements IEquatable<AppConfigurationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The Azure App Configuration connection string. public required string ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.CosmosDbSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.CosmosDbSettings.html",
    "title": "Class CosmosDbSettings | FoundationaLLM",
    "keywords": "Class CosmosDbSettings Namespace FoundationaLLM.Management.Models.Configuration Assembly FoundationaLLM.Management.dll Stores the Azure Cosmos DB settings from the app configuration. public record CosmosDbSettings : IEquatable<CosmosDbSettings> Inheritance object CosmosDbSettings Implements IEquatable<CosmosDbSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Database The name of the Azure Cosmos DB database. public required string Database { get; init; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; init; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; init; } Property Value string Key The Azure Cosmos DB key. public required string Key { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Management.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Models.Configuration Namespaces FoundationaLLM.Management.Models.Configuration.Agents Classes AppConfigurationSettings Contains settings for the Azure App Configuration service. CosmosDbSettings Stores the Azure Cosmos DB settings from the app configuration."
  },
  "api/dotnet/FoundationaLLM.Management.Services.ConfigurationManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.ConfigurationManagementService.html",
    "title": "Class ConfigurationManagementService | FoundationaLLM",
    "keywords": "Class ConfigurationManagementService Namespace FoundationaLLM.Management.Services Assembly FoundationaLLM.Management.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ConfigurationManagementService : IConfigurationManagementService Inheritance object ConfigurationManagementService Implements IConfigurationManagementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationManagementService(ILogger<ConfigurationManagementService>, IOptions<AppConfigurationSettings>) Initializes a new instance of the ConfigurationManagementService class. public ConfigurationManagementService(ILogger<ConfigurationManagementService> logger, IOptions<AppConfigurationSettings> appConfigurationSettings) Parameters logger ILogger<ConfigurationManagementService> The logging interface used to log under the ConfigurationManagementService type name. appConfigurationSettings IOptions<AppConfigurationSettings> The application configuration settings. Methods GetAgentHintsAsync() Retrieves a list of public agent hints from app configuration. public Task<List<string>?> GetAgentHintsAsync() Returns Task<List<string>> GetAllowAgentSelectionAsync() Retrieves the allow agent selection feature flag value from app configuration. public Task<bool> GetAllowAgentSelectionAsync() Returns Task<bool> GetBrandingConfigurationAsync() Retrieves the branding configuration from app configuration. public Task<ClientBrandingConfiguration> GetBrandingConfigurationAsync() Returns Task<ClientBrandingConfiguration> SetAllowAgentSelectionAsync(bool) Sets the allow agent selection feature flag value in app configuration. public Task SetAllowAgentSelectionAsync(bool allowAgentSelection) Parameters allowAgentSelection bool Indicates whether to enable or disable the feature flag. Returns Task SetBrandingConfiguration(ClientBrandingConfiguration) Sets the branding configuration in app configuration. public Task SetBrandingConfiguration(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration The branding configuration settings to apply. Returns Task UpdateAgentHintsAsync(IEnumerable<string>?) Creates or updates app configuration setting that lists the public agent hints. public Task UpdateAgentHintsAsync(IEnumerable<string>? agentHints) Parameters agentHints IEnumerable<string> Set the value to null if you wish to clear the list of agent hints. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Services.html",
    "title": "Namespace FoundationaLLM.Management.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Services Classes ConfigurationManagementService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Management.html": {
    "href": "api/dotnet/FoundationaLLM.Management.html",
    "title": "Namespace FoundationaLLM.Management | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management Namespaces FoundationaLLM.Management.API FoundationaLLM.Management.Interfaces FoundationaLLM.Management.Models.Configuration FoundationaLLM.Management.Services"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.OrchestrationController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.OrchestrationController.html",
    "title": "Class OrchestrationController | FoundationaLLM",
    "keywords": "Class OrchestrationController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Wrapper for the Semantic Kernel service. [ApiVersion(1, null)] [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class OrchestrationController : ControllerBase Inheritance object ControllerBase OrchestrationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationController(ISemanticKernelService) Constructor for the Semantic Kernel API orchestration controller. public OrchestrationController(ISemanticKernelService semanticKernelService) Parameters semanticKernelService ISemanticKernelService Methods AddMemory() Add an object instance and its associated vectorization to the memory store. [HttpPost(\"memory/add\")] public Task AddMemory() Returns Task GetCompletion(CompletionRequest) Gets a completion from the Semantic Kernel service. [HttpPost(\"completion\")] public Task<CompletionResponse> GetCompletion(CompletionRequest request) Parameters request CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetSummary(SummaryRequest) Gets a summary from the Semantic Kernel service. [HttpPost(\"summary\")] public Task<SummaryResponse> GetSummary(SummaryRequest request) Parameters request SummaryRequest The summarize request containing the user prompt. Returns Task<SummaryResponse> The summary response. RemoveMemory() Removes an object instance and its associated vectorization from the memory store. [HttpDelete(\"memory/remove\")] public Task RemoveMemory() Returns Task"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Provides methods for checking the status of the service. [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Semantic Kernel API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Semantic Kernel API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.API.Controllers Classes OrchestrationController Wrapper for the Semantic Kernel service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.SemanticKernel.API Assembly FoundationaLLM.SemanticKernel.API.dll Program class for the Semantic Kernel API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Semantic Kernel API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.API Namespaces FoundationaLLM.SemanticKernel.API.Controllers Classes Program Program class for the Semantic Kernel API."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Chat.ChatBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Chat.ChatBuilder.html",
    "title": "Class ChatBuilder | FoundationaLLM",
    "keywords": "Class ChatBuilder Namespace FoundationaLLM.SemanticKernel.Chat Assembly FoundationaLLM.SemanticKernel.Core.dll The Chat Builder class the builds the chat message history representation Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory. public class ChatBuilder Inheritance object ChatBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ChatBuilder(IKernel, int, Dictionary<string, Type>, ITokenizer?, PromptOptimizationSettings?) Constructor for Chat Builder class. public ChatBuilder(IKernel kernel, int maxTokens, Dictionary<string, Type> memoryTypes, ITokenizer? tokenizer = null, PromptOptimizationSettings? promptOptimizationSettings = null) Parameters kernel IKernel The Semantic kernel. maxTokens int The maximum number of tokens. memoryTypes Dictionary<string, Type> The dictionary of memory names and types. tokenizer ITokenizer The Tokenizer service. promptOptimizationSettings PromptOptimizationSettings The configuration options for the prompt optimization. Methods Build() Builds the chat message history object. public ChatHistory Build() Returns ChatHistory The chat message history object. WithMemories(List<string>) Constructor for Chat Builder class. public ChatBuilder WithMemories(List<string> memories) Parameters memories List<string> The list of memories. Returns ChatBuilder WithMessageHistory(List<(AuthorRole AuthorRole, string Content)>) Constructor for Chat Builder class. public ChatBuilder WithMessageHistory(List<(AuthorRole AuthorRole, string Content)> messages) Parameters messages List<(AuthorRole AuthorRole, string Content)> The list of messages. Returns ChatBuilder WithSystemPrompt(string) Constructor for Chat Builder class. public ChatBuilder WithSystemPrompt(string prompt) Parameters prompt string The prompt text. Returns ChatBuilder"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Chat.PromptOptimizationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Chat.PromptOptimizationSettings.html",
    "title": "Class PromptOptimizationSettings | FoundationaLLM",
    "keywords": "Class PromptOptimizationSettings Namespace FoundationaLLM.SemanticKernel.Chat Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for prompt optimization. public record PromptOptimizationSettings : IEquatable<PromptOptimizationSettings> Inheritance object PromptOptimizationSettings Implements IEquatable<PromptOptimizationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionsMaxTokens Maximum number of tokens for Completions. public required int CompletionsMaxTokens { get; init; } Property Value int CompletionsMinTokens Minimum number of tokens for Completions. public required int CompletionsMinTokens { get; init; } Property Value int MemoryMaxTokens Maximum number of tokens for Memory. public required int MemoryMaxTokens { get; init; } Property Value int MemoryMinTokens Minimum number of tokens for Memory. public required int MemoryMinTokens { get; init; } Property Value int MessagesMaxTokens Maximum number of tokens for Messages. public required int MessagesMaxTokens { get; init; } Property Value int MessagesMinTokens Minimum number of tokens for Messages. public required int MessagesMinTokens { get; init; } Property Value int SystemMaxTokens Maximum number of tokens for System. public required int SystemMaxTokens { get; init; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Chat.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Chat.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Chat | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Chat Classes ChatBuilder The Chat Builder class the builds the chat message history representation Microsoft.SemanticKernel.AI.ChatCompletion.ChatHistory. PromptOptimizationSettings Provides configuration options for prompt optimization."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.IMemorySource.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.IMemorySource.html",
    "title": "Interface IMemorySource | FoundationaLLM",
    "keywords": "Interface IMemorySource Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll Interface for the Memory Source service. public interface IMemorySource Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetMemories() Gets a list of memories. Task<List<string>> GetMemories() Returns Task<List<string>> The list of memories."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "keywords": "Interface ISemanticKernelService Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll Interface for the Semantic Kernel service. public interface ISemanticKernelService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AddMemory(object, string) Add an object instance and its associated vectorization to the underlying memory. Task AddMemory(object item, string itemName) Parameters item object The object instance to be added to the memory. itemName string The name of the object instance. Returns Task GetCompletion(string, List<MessageHistoryItem>) Gets a completion from the Semantic Kernel service. Task<string> GetCompletion(string userPrompt, List<MessageHistoryItem> messageHistory) Parameters userPrompt string The user prompt text. messageHistory List<MessageHistoryItem> A list of previous messages. Returns Task<string> The completion text. GetSummary(string) Gets a summary from the Semantic Kernel service. Task<string> GetSummary(string content) Parameters content string The user prompt text. Returns Task<string> The prompt summary. RemoveMemory(object) Removes an object instance and its associated vectorization from the underlying memory. Task RemoveMemory(object item) Parameters item object The object instance to be removed from the memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISystemPromptService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISystemPromptService.html",
    "title": "Interface ISystemPromptService | FoundationaLLM",
    "keywords": "Interface ISystemPromptService Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll Interface for a System Prompt service. public interface ISystemPromptService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPrompt(string, bool) Gets the specified system prompt. Task<string> GetPrompt(string promptName, bool forceRefresh = false) Parameters promptName string The system prompt name. forceRefresh bool The flag that inform the System Prompt service to do a cache refresh. Returns Task<string> The system prompt text."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ITokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ITokenizer.html",
    "title": "Interface ITokenizer | FoundationaLLM",
    "keywords": "Interface ITokenizer Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll Interface for the Tokenizer service. public interface ITokenizer Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetTokensCount(string) Gets the number of tokens for the input text. int GetTokensCount(string text) Parameters text string The text content. Returns int The number of tokens."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Interfaces IMemorySource Interface for the Memory Source service. ISemanticKernelService Interface for the Semantic Kernel service. ISystemPromptService Interface for a System Prompt service. ITokenizer Interface for the Tokenizer service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.AzureCognitiveSearchMemorySourceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.AzureCognitiveSearchMemorySourceSettings.html",
    "title": "Class AzureCognitiveSearchMemorySourceSettings | FoundationaLLM",
    "keywords": "Class AzureCognitiveSearchMemorySourceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for an Azure Cognitive Search memory source service. public record AzureCognitiveSearchMemorySourceSettings : BlobStorageSettings, IEquatable<BlobStorageSettings>, IEquatable<AzureCognitiveSearchMemorySourceSettings> Inheritance object BlobStorageSettings AzureCognitiveSearchMemorySourceSettings Implements IEquatable<BlobStorageSettings> IEquatable<AzureCognitiveSearchMemorySourceSettings> Inherited Members BlobStorageSettings.BlobStorageConnection BlobStorageSettings.BlobStorageContainer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigFilePath The configurable file path. public required string ConfigFilePath { get; init; } Property Value string Endpoint The Azure Cognitive Search endpoint. public required string Endpoint { get; init; } Property Value string IndexName The name of the Azure Cognitive Search index. public required string IndexName { get; init; } Property Value string Key The Azure Cognitive Search key. public required string Key { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.BlobStorageMemorySourceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.BlobStorageMemorySourceSettings.html",
    "title": "Class BlobStorageMemorySourceSettings | FoundationaLLM",
    "keywords": "Class BlobStorageMemorySourceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for a Blob Storage service. public record BlobStorageMemorySourceSettings : BlobStorageSettings, IEquatable<BlobStorageSettings>, IEquatable<BlobStorageMemorySourceSettings> Inheritance object BlobStorageSettings BlobStorageMemorySourceSettings Implements IEquatable<BlobStorageSettings> IEquatable<BlobStorageMemorySourceSettings> Inherited Members BlobStorageSettings.BlobStorageConnection BlobStorageSettings.BlobStorageContainer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigFilePath The configurable file path. public required string ConfigFilePath { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.DurableSystemPromptServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.DurableSystemPromptServiceSettings.html",
    "title": "Class DurableSystemPromptServiceSettings | FoundationaLLM",
    "keywords": "Class DurableSystemPromptServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for the Durable System Prompt service. public record DurableSystemPromptServiceSettings : BlobStorageSettings, IEquatable<BlobStorageSettings>, IEquatable<DurableSystemPromptServiceSettings> Inheritance object BlobStorageSettings DurableSystemPromptServiceSettings Implements IEquatable<BlobStorageSettings> IEquatable<DurableSystemPromptServiceSettings> Inherited Members BlobStorageSettings.BlobStorageConnection BlobStorageSettings.BlobStorageContainer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.CognitiveSearchSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.CognitiveSearchSettings.html",
    "title": "Class SemanticKernelServiceSettings.CognitiveSearchSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings.CognitiveSearchSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for Cognitive Search. public record SemanticKernelServiceSettings.CognitiveSearchSettings : IEquatable<SemanticKernelServiceSettings.CognitiveSearchSettings> Inheritance object SemanticKernelServiceSettings.CognitiveSearchSettings Implements IEquatable<SemanticKernelServiceSettings.CognitiveSearchSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Endpoint The Azure Cognitive Search endpoint. public required string Endpoint { get; init; } Property Value string IndexName The index name. public required string IndexName { get; init; } Property Value string Key The Azure Cognitive Search key. public required string Key { get; init; } Property Value string MaxVectorSearchResults The maximum vector search results. public required int MaxVectorSearchResults { get; init; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.OpenAISettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.OpenAISettings.html",
    "title": "Class SemanticKernelServiceSettings.OpenAISettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings.OpenAISettings Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for Open AI. public record SemanticKernelServiceSettings.OpenAISettings : IEquatable<SemanticKernelServiceSettings.OpenAISettings> Inheritance object SemanticKernelServiceSettings.OpenAISettings Implements IEquatable<SemanticKernelServiceSettings.OpenAISettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChatCompletionPromptName The name of the chat completion prompt. public required string ChatCompletionPromptName { get; init; } Property Value string CompletionsDeployment The name of the completions deployment service. public required string CompletionsDeployment { get; set; } Property Value string CompletionsDeploymentMaxTokens The maximum tokens for the completions deployment service. public required int CompletionsDeploymentMaxTokens { get; init; } Property Value int EmbeddingsDeployment The name of the embeddings deployment service. public required string EmbeddingsDeployment { get; init; } Property Value string EmbeddingsDeploymentMaxTokens The maximum tokens for the embeddings deployment service. public required int EmbeddingsDeploymentMaxTokens { get; init; } Property Value int Endpoint The Azure Open AI endpoint. public required string Endpoint { get; init; } Property Value string Key The Azure Open AI key. public required string Key { get; init; } Property Value string PromptOptimization The configuration options for prompt optimization. public required PromptOptimizationSettings PromptOptimization { get; init; } Property Value PromptOptimizationSettings ShortSummaryPromptName The name of the short summary prompt. public required string ShortSummaryPromptName { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration options for the Semantic Kernel service. public record SemanticKernelServiceSettings : IEquatable<SemanticKernelServiceSettings> Inheritance object SemanticKernelServiceSettings Implements IEquatable<SemanticKernelServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CognitiveSearch Cognitive Search settings object. public required SemanticKernelServiceSettings.CognitiveSearchSettings CognitiveSearch { get; init; } Property Value SemanticKernelServiceSettings.CognitiveSearchSettings OpenAI Open AI settings object. public required SemanticKernelServiceSettings.OpenAISettings OpenAI { get; init; } Property Value SemanticKernelServiceSettings.OpenAISettings"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions Classes AzureCognitiveSearchMemorySourceSettings Provides configuration options for an Azure Cognitive Search memory source service. BlobStorageMemorySourceSettings Provides configuration options for a Blob Storage service. DurableSystemPromptServiceSettings Provides configuration options for the Durable System Prompt service. SemanticKernelServiceSettings Provides configuration options for the Semantic Kernel service. SemanticKernelServiceSettings.CognitiveSearchSettings Provides configuration options for Cognitive Search. SemanticKernelServiceSettings.OpenAISettings Provides configuration options for Open AI."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.Core.TextEmbeddingObjectMemoryPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.Core.TextEmbeddingObjectMemoryPlugin.html",
    "title": "Class TextEmbeddingObjectMemoryPlugin | FoundationaLLM",
    "keywords": "Class TextEmbeddingObjectMemoryPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins.Core Assembly FoundationaLLM.SemanticKernel.Core.dll TextEmbeddingObjectMemoryPlugin provides the capability to recall object information from the long term memory using vector-based similarity. Optionally, a short-term, volatile memory can be also used to enhance the result set. public sealed class TextEmbeddingObjectMemoryPlugin Inheritance object TextEmbeddingObjectMemoryPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Examples Usage: kernel.ImportSkill(\"memory\", new TextEmbeddingObjectMemorySkill()); Examples: SKContext[\"input\"] = \"what is the capital of France?\" {{memory.recall $input }} => \"Paris\" Constructors TextEmbeddingObjectMemoryPlugin(VectorMemoryStore, VectorMemoryStore, ILogger) Creates a new instance of the TextEmbeddingMemorySkill public TextEmbeddingObjectMemoryPlugin(VectorMemoryStore longTermMemory, VectorMemoryStore shortTermMemory, ILogger logger) Parameters longTermMemory VectorMemoryStore shortTermMemory VectorMemoryStore logger ILogger Properties LastInputTextEmbedding The vector embedding of the last text input submitted to the Recall method. Can only be read once, to avoid inconsistencies across multiple calls to Recall. public ReadOnlyMemory<float>? LastInputTextEmbedding { get; } Property Value ReadOnlyMemory<float>? Methods RecallAsync(string, string, double?, int?) Vector search and return up to N memories related to the input text. The long-term memory and an optional, short-term memory are used. In this application, short term memory is made up of the product count for each product category and the total products for the company. [SKFunction] public Task<string> RecallAsync(string text, string collection, double? relevance, int? limit) Parameters text string The input text to find related memories for. collection string Memories collection to search. relevance double? The relevance score, from 0.0 to 1.0, where 1.0 means perfect match. limit int? The maximum number of relevant memories to recall. Returns Task<string> Examples SKContext[\"input\"] = \"what is the capital of France?\" {{memory.recall $input }} => \"Paris\""
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.Core.TextSummaryPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.Core.TextSummaryPlugin.html",
    "title": "Class TextSummaryPlugin | FoundationaLLM",
    "keywords": "Class TextSummaryPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins.Core Assembly FoundationaLLM.SemanticKernel.Core.dll Text summarizer plugin for Semantic Kernel. public class TextSummaryPlugin Inheritance object TextSummaryPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextSummaryPlugin(string, int, IKernel) Constructor for the Text Summary Plugin. public TextSummaryPlugin(string promptTemplate, int maxTokens, IKernel kernel) Parameters promptTemplate string The prompt template. maxTokens int The maximum number of tokens. kernel IKernel The Semantic Kernel instance. Methods SummarizeTextAsync(string) Gets a summary from the Semantic Kernel service. [SKFunction] public Task<string> SummarizeTextAsync(string text) Parameters text string The user prompt text. Returns Task<string> The prompt summary."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.Core.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.Core.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins.Core Classes TextEmbeddingObjectMemoryPlugin TextEmbeddingObjectMemoryPlugin provides the capability to recall object information from the long term memory using vector-based similarity. Optionally, a short-term, volatile memory can be also used to enhance the result set. TextSummaryPlugin Text summarizer plugin for Semantic Kernel."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.DurableSystemPromptService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.DurableSystemPromptService.html",
    "title": "Class DurableSystemPromptService | FoundationaLLM",
    "keywords": "Class DurableSystemPromptService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Implements the ISystemPromptService interface. public class DurableSystemPromptService : ISystemPromptService Inheritance object DurableSystemPromptService Implements ISystemPromptService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DurableSystemPromptService(IOptions<DurableSystemPromptServiceSettings>) Constructor for the Durable System Prompt service. public DurableSystemPromptService(IOptions<DurableSystemPromptServiceSettings> settings) Parameters settings IOptions<DurableSystemPromptServiceSettings> The configuration options for the Durable System Prompt service. Methods GetPrompt(string, bool) Gets the specified system prompt. public Task<string> GetPrompt(string promptName, bool forceRefresh = false) Parameters promptName string The system prompt name. forceRefresh bool The flag that inform the System Prompt service to do a cache refresh. Returns Task<string> The system prompt text."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.InMemorySystemPromptService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.InMemorySystemPromptService.html",
    "title": "Class InMemorySystemPromptService | FoundationaLLM",
    "keywords": "Class InMemorySystemPromptService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Implements the ISystemPromptService interface. public class InMemorySystemPromptService : ISystemPromptService Inheritance object InMemorySystemPromptService Implements ISystemPromptService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPrompt(string, bool) Gets the specified system prompt. public Task<string> GetPrompt(string promptName, bool forceRefresh = false) Parameters promptName string The system prompt name. forceRefresh bool The flag that inform the System Prompt service to do a cache refresh. Returns Task<string> The system prompt text."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "keywords": "Class SemanticKernelService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Implements the ISemanticKernelService interface. public class SemanticKernelService : ISemanticKernelService Inheritance object SemanticKernelService Implements ISemanticKernelService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelService(ISystemPromptService, IEnumerable<IMemorySource>, IOptions<SemanticKernelServiceSettings>, IOptions<AzureCognitiveSearchMemorySourceSettings>, ILogger<SemanticKernelService>, ILoggerFactory) Constructor for the Semantic Kernel service. public SemanticKernelService(ISystemPromptService systemPromptService, IEnumerable<IMemorySource> memorySources, IOptions<SemanticKernelServiceSettings> options, IOptions<AzureCognitiveSearchMemorySourceSettings> cognitiveSearchMemorySourceSettings, ILogger<SemanticKernelService> logger, ILoggerFactory loggerFactory) Parameters systemPromptService ISystemPromptService The System Prompt service. memorySources IEnumerable<IMemorySource> The list of memory sources. options IOptions<SemanticKernelServiceSettings> The configuration options for the Semantic Kernel service. cognitiveSearchMemorySourceSettings IOptions<AzureCognitiveSearchMemorySourceSettings> The configuration options for the Azure Cognitive Search memory source. logger ILogger<SemanticKernelService> The logger for the Semantic Kernel service. loggerFactory ILoggerFactory The logger factory for the Semantic kernel. Properties IsInitialized Flag for the service initialization. public bool IsInitialized { get; } Property Value bool Methods AddMemory(object, string) Add an object instance and its associated vectorization to the underlying memory. public Task AddMemory(object item, string itemName) Parameters item object The object instance to be added to the memory. itemName string The name of the object instance. Returns Task GetCompletion(string, List<MessageHistoryItem>) Gets a completion from the Semantic Kernel service. public Task<string> GetCompletion(string userPrompt, List<MessageHistoryItem> messageHistory) Parameters userPrompt string The user prompt text. messageHistory List<MessageHistoryItem> A list of previous messages. Returns Task<string> The completion text. GetSummary(string) Gets a summary from the Semantic Kernel service. public Task<string> GetSummary(string userPrompt) Parameters userPrompt string The user prompt text. Returns Task<string> The prompt summary. RemoveMemory(object) Removes an object instance and its associated vectorization from the underlying memory. public Task RemoveMemory(object item) Parameters item object The object instance to be removed from the memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTokenizer.html",
    "title": "Class SemanticKernelTokenizer | FoundationaLLM",
    "keywords": "Class SemanticKernelTokenizer Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Implements the ITokenizer interface. public class SemanticKernelTokenizer : ITokenizer Inheritance object SemanticKernelTokenizer Implements ITokenizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetTokensCount(string) Gets the number of tokens for the input text. public int GetTokensCount(string text) Parameters text string The text content. Returns int The number of tokens."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Services Classes DurableSystemPromptService Implements the ISystemPromptService interface. InMemorySystemPromptService Implements the ISystemPromptService interface. SemanticKernelService Implements the ISemanticKernelService interface. SemanticKernelTokenizer Implements the ITokenizer interface."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core Namespaces FoundationaLLM.SemanticKernel.Core.Interfaces FoundationaLLM.SemanticKernel.Core.Models.ConfigurationOptions FoundationaLLM.SemanticKernel.Core.Plugins.Core FoundationaLLM.SemanticKernel.Core.Services"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.AzureCognitiveSearchMemorySource.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.AzureCognitiveSearchMemorySource.html",
    "title": "Class AzureCognitiveSearchMemorySource | FoundationaLLM",
    "keywords": "Class AzureCognitiveSearchMemorySource Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll Azure Cognitive Search memory source implementing IMemorySource. public class AzureCognitiveSearchMemorySource : IMemorySource Inheritance object AzureCognitiveSearchMemorySource Implements IMemorySource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCognitiveSearchMemorySource(IOptions<AzureCognitiveSearchMemorySourceSettings>, ILogger<AzureCognitiveSearchMemorySource>) Constructor for the Azure Cognitive Search memory source. public AzureCognitiveSearchMemorySource(IOptions<AzureCognitiveSearchMemorySourceSettings> settings, ILogger<AzureCognitiveSearchMemorySource> logger) Parameters settings IOptions<AzureCognitiveSearchMemorySourceSettings> The configuration options for the Azure Cognitive Search memory source. logger ILogger<AzureCognitiveSearchMemorySource> The logger for the Azure Cognitive Search memory source. Methods GetMemories() Gets a list of memories from the configured memory source. public Task<List<string>> GetMemories() Returns Task<List<string>> A list of memories."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.AzureCognitiveSearchMemorySourceConfig.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.AzureCognitiveSearchMemorySourceConfig.html",
    "title": "Class AzureCognitiveSearchMemorySourceConfig | FoundationaLLM",
    "keywords": "Class AzureCognitiveSearchMemorySourceConfig Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll The Azure Cognitive Search memory source configuration class. public class AzureCognitiveSearchMemorySourceConfig Inheritance object AzureCognitiveSearchMemorySourceConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FacetedQueryMemorySources The list of faceted query memory sources. public required List<FacetedQueryMemorySource> FacetedQueryMemorySources { get; set; } Property Value List<FacetedQueryMemorySource>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.BlobStorageMemorySource.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.BlobStorageMemorySource.html",
    "title": "Class BlobStorageMemorySource | FoundationaLLM",
    "keywords": "Class BlobStorageMemorySource Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll Azure Blob Storage memory source implementing IMemorySource. public class BlobStorageMemorySource : IMemorySource Inheritance object BlobStorageMemorySource Implements IMemorySource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BlobStorageMemorySource(IOptions<BlobStorageMemorySourceSettings>, ILogger<BlobStorageMemorySource>) Constructor for the Azure Blob Storage memory source. public BlobStorageMemorySource(IOptions<BlobStorageMemorySourceSettings> settings, ILogger<BlobStorageMemorySource> logger) Parameters settings IOptions<BlobStorageMemorySourceSettings> The configuration options for the Azure Blob Storage memory source. logger ILogger<BlobStorageMemorySource> The logger for the Azure Blob Storage memory source. Methods GetMemories() Gets a list of memories from the configured memory source. public Task<List<string>> GetMemories() Returns Task<List<string>> A list of memories."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.BlobStorageMemorySourceConfig.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.BlobStorageMemorySourceConfig.html",
    "title": "Class BlobStorageMemorySourceConfig | FoundationaLLM",
    "keywords": "Class BlobStorageMemorySourceConfig Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll The Blob Storage memory source configuration class. public class BlobStorageMemorySourceConfig Inheritance object BlobStorageMemorySourceConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextChunkMaxTokens The maximum tokens for the text chunk. public int TextChunkMaxTokens { get; init; } Property Value int TextFileMemorySources The list of file memory sources. public required List<FileMemorySource> TextFileMemorySources { get; init; } Property Value List<FileMemorySource>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FacetedQueryFacet.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FacetedQueryFacet.html",
    "title": "Class FacetedQueryFacet | FoundationaLLM",
    "keywords": "Class FacetedQueryFacet Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll The FacetedQueryFacet class. public class FacetedQueryFacet Inheritance object FacetedQueryFacet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CountMemoryTemplate The amount of memory templates. public required string CountMemoryTemplate { get; init; } Property Value string Facet The faceted query facet. public required string Facet { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FacetedQueryMemorySource.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FacetedQueryMemorySource.html",
    "title": "Class FacetedQueryMemorySource | FoundationaLLM",
    "keywords": "Class FacetedQueryMemorySource Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll The FacetedQueryMemorySource class. public class FacetedQueryMemorySource Inheritance object FacetedQueryMemorySource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Facets The list of faceted query facets. public required List<FacetedQueryFacet> Facets { get; init; } Property Value List<FacetedQueryFacet> Filter The memory search filter. public required string Filter { get; init; } Property Value string TotalCountMemoryTemplate The total amount of memory templates. public required string TotalCountMemoryTemplate { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FileMemorySource.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FileMemorySource.html",
    "title": "Class FileMemorySource | FoundationaLLM",
    "keywords": "Class FileMemorySource Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll The FileMemorySource class. public class FileMemorySource Inheritance object FileMemorySource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContainerName The name of the blob storage container. public required string ContainerName { get; init; } Property Value string TextFiles The list of file memory source files. public required List<FileMemorySourceFile> TextFiles { get; init; } Property Value List<FileMemorySourceFile>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FileMemorySourceFile.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.FileMemorySourceFile.html",
    "title": "Class FileMemorySourceFile | FoundationaLLM",
    "keywords": "Class FileMemorySourceFile Namespace FoundationaLLM.SemanticKernel.MemorySource Assembly FoundationaLLM.SemanticKernel.Core.dll The FileMemorySourceFile class. public class FileMemorySourceFile Inheritance object FileMemorySourceFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileName The name of the file. public required string FileName { get; init; } Property Value string SplitIntoChunks The flag representing if the file is split into chunks. public bool SplitIntoChunks { get; init; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.MemorySource.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.MemorySource | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.MemorySource Classes AzureCognitiveSearchMemorySource Azure Cognitive Search memory source implementing IMemorySource. AzureCognitiveSearchMemorySourceConfig The Azure Cognitive Search memory source configuration class. BlobStorageMemorySource Azure Blob Storage memory source implementing IMemorySource. BlobStorageMemorySourceConfig The Blob Storage memory source configuration class. FacetedQueryFacet The FacetedQueryFacet class. FacetedQueryMemorySource The FacetedQueryMemorySource class. FileMemorySource The FileMemorySource class. FileMemorySourceFile The FileMemorySourceFile class."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Plugins.Memory.VectorMemoryStore.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Plugins.Memory.VectorMemoryStore.html",
    "title": "Class VectorMemoryStore | FoundationaLLM",
    "keywords": "Class VectorMemoryStore Namespace FoundationaLLM.SemanticKernel.Plugins.Memory Assembly FoundationaLLM.SemanticKernel.Core.dll Vector memory store plugin for Semantic Kernel. public class VectorMemoryStore Inheritance object VectorMemoryStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorMemoryStore(string, IMemoryStore, ITextEmbeddingGeneration, ILogger<VectorMemoryStore>) Constructor for the Vector Memory Store. public VectorMemoryStore(string collectionName, IMemoryStore memoryStore, ITextEmbeddingGeneration textEmbedding, ILogger<VectorMemoryStore> logger) Parameters collectionName string The name associated with a collection of embeddings. memoryStore IMemoryStore The memory store. textEmbedding ITextEmbeddingGeneration The text embedding generation service. logger ILogger<VectorMemoryStore> The logger for the Vector Memory Store. Properties MemoryStore The memory store. public IMemoryStore MemoryStore { get; } Property Value IMemoryStore Methods AddMemory(object, string) Add an object instance and its associated vectorization to the underlying memory. public Task AddMemory(object item, string itemName) Parameters item object The object instance to be added to the memory. itemName string The name of the object instance. Returns Task GetEmbedding(string) Generates an embedding from the given text. public Task<ReadOnlyMemory<float>> GetEmbedding(string textToEmbed) Parameters textToEmbed string The text to embed. Returns Task<ReadOnlyMemory<float>> A list of embedding structs representing the input text. GetNearestMatches(ReadOnlyMemory<float>, int, double) Gets the nearest matches to an embedding of type float. Does not guarantee that the collection exists. public IAsyncEnumerable<MemoryQueryResult> GetNearestMatches(ReadOnlyMemory<float> embeddingToMatch, int limit, double minRelevanceScore = 0.7) Parameters embeddingToMatch ReadOnlyMemory<float> The embedding to compare the collection's embeddings with. limit int The maximum number of similarity results to return. minRelevanceScore double The minimum cosine similarity threshold for returned results. Returns IAsyncEnumerable<MemoryQueryResult> The metadata associated with the memory and the similarity score. GetNearestMatches(string, int, double) Gets the nearest match to an embedding of type float. Does not guarantee that the collection exists. public IAsyncEnumerable<MemoryQueryResult> GetNearestMatches(string textToMatch, int limit, double minRelevanceScore = 0.7) Parameters textToMatch string The text to compare the collection's embeddings with. limit int The maximum number of similarity results to return. minRelevanceScore double The minimum relevance threshold for returned results. Returns IAsyncEnumerable<MemoryQueryResult> The metadata associated with the memory and the similarity score. RemoveMemory(object) Removes an object instance and its associated vectorization from the underlying memory. public Task RemoveMemory(object item) Parameters item object The object instance to be removed from the memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Plugins.Memory.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Plugins.Memory.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Plugins.Memory | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Plugins.Memory Classes VectorMemoryStore Vector memory store plugin for Semantic Kernel."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Text.StringExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Text.StringExtensions.html",
    "title": "Class StringExtensions | FoundationaLLM",
    "keywords": "Class StringExtensions Namespace FoundationaLLM.SemanticKernel.Text Assembly FoundationaLLM.SemanticKernel.Core.dll String extensions class. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NormalizeLineEndings(string) Normalizes line endings for an input text. public static string NormalizeLineEndings(this string src) Parameters src string The input text. Returns string The input text with normalized line endlings."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Text.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Text.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Text | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Text Classes StringExtensions String extensions class."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.TextEmbedding.EmbeddingUtility.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.TextEmbedding.EmbeddingUtility.html",
    "title": "Class EmbeddingUtility | FoundationaLLM",
    "keywords": "Class EmbeddingUtility Namespace FoundationaLLM.SemanticKernel.TextEmbedding Assembly FoundationaLLM.SemanticKernel.Core.dll Text embedding utility class. public static class EmbeddingUtility Inheritance object EmbeddingUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Transform(object, int) Transforms an object into a JObject and string representation. public static (JObject ObjectToEmbed, string TextToEmbed) Transform(object item, int maxRecursionLevels = 3) Parameters item object The object to be transformed. maxRecursionLevels int The maximum number of recursion levels to traverse the input object. Returns (JObject ObjectToEmbed, string TextToEmbed) The transformed object. Exceptions ArgumentException Transform(string, Dictionary<string, Type>, int) Transforms an object into a JObject and string representation. public static (JObject ObjectToEmbed, string TextToEmbed) Transform(string item, Dictionary<string, Type> types, int maxRecursionLevels = 3) Parameters item string The object to be transformed. types Dictionary<string, Type> The dictionary of property names and types for the input object. maxRecursionLevels int The maximum number of recursion levels to traverse the input object. Returns (JObject ObjectToEmbed, string TextToEmbed) The transformed object. Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.TextEmbedding.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.TextEmbedding.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.TextEmbedding | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.TextEmbedding Classes EmbeddingUtility Text embedding utility class."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.html",
    "title": "Namespace FoundationaLLM.SemanticKernel | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel Namespaces FoundationaLLM.SemanticKernel.API FoundationaLLM.SemanticKernel.Chat FoundationaLLM.SemanticKernel.Core FoundationaLLM.SemanticKernel.MemorySource FoundationaLLM.SemanticKernel.Plugins.Memory FoundationaLLM.SemanticKernel.Text FoundationaLLM.SemanticKernel.TextEmbedding"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Provides methods for checking the status of the service. [ApiVersion(1, null)] [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html",
    "title": "Class VectorizationRequestController | FoundationaLLM",
    "keywords": "Class VectorizationRequestController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Methods for managing vectorization requests. [ApiVersion(1, null)] [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class VectorizationRequestController : ControllerBase Inheritance object ControllerBase VectorizationRequestController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the vectorization request controller. Constructors VectorizationRequestController(IVectorizationService) Methods for managing vectorization requests. public VectorizationRequestController(IVectorizationService vectorizationService) Parameters vectorizationService IVectorizationService Remarks Constructor for the vectorization request controller. Methods ProcessRequest(VectorizationRequest) Handles an incoming vectorization request by starting a new vectorization pipeline. [HttpPost] public Task ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.API.Controllers Classes StatusController Provides methods for checking the status of the service. VectorizationRequestController Methods for managing vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Exceptions.VectorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Exceptions.VectorizationException.html",
    "title": "Class VectorizationException | FoundationaLLM",
    "keywords": "Class VectorizationException Namespace FoundationaLLM.Vectorization.Exceptions Assembly FoundationaLLM.Vectorization.dll Represents errors that occur during the vectorization process. public class VectorizationException : Exception, ISerializable Inheritance object Exception VectorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationException() Initializes a new instance of the VectorizationException class with a default message. public VectorizationException() VectorizationException(string?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message) Parameters message string A string that describes the error. VectorizationException(string?, Exception?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Exceptions.html",
    "title": "Namespace FoundationaLLM.Vectorization.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Exceptions Classes VectorizationException Represents errors that occur during the vectorization process."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html",
    "title": "Class EmbeddingHandler | FoundationaLLM",
    "keywords": "Class EmbeddingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll public class EmbeddingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase EmbeddingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingHandler(Dictionary<string, string>) public EmbeddingHandler(Dictionary<string, string> parameters) Parameters parameters Dictionary<string, string> Methods ProcessRequest(VectorizationRequest, VectorizationState, CancellationToken) protected override Task ProcessRequest(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest state VectorizationState cancellationToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html",
    "title": "Class ExtractionHandler | FoundationaLLM",
    "keywords": "Class ExtractionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll public class ExtractionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase ExtractionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ExtractionHandler(Dictionary<string, string>) public ExtractionHandler(Dictionary<string, string> parameters) Parameters parameters Dictionary<string, string> Methods ProcessRequest(VectorizationRequest, VectorizationState, CancellationToken) protected override Task ProcessRequest(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest state VectorizationState cancellationToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html",
    "title": "Class IndexingHandler | FoundationaLLM",
    "keywords": "Class IndexingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll public class IndexingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase IndexingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingHandler(Dictionary<string, string>) public IndexingHandler(Dictionary<string, string> parameters) Parameters parameters Dictionary<string, string> Methods ProcessRequest(VectorizationRequest, VectorizationState, CancellationToken) protected override Task ProcessRequest(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest state VectorizationState cancellationToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html",
    "title": "Class PartitionHandler | FoundationaLLM",
    "keywords": "Class PartitionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll public class PartitionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase PartitionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PartitionHandler(Dictionary<string, string>) public PartitionHandler(Dictionary<string, string> parameters) Parameters parameters Dictionary<string, string> Methods ProcessRequest(VectorizationRequest, VectorizationState, CancellationToken) protected override Task ProcessRequest(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest state VectorizationState cancellationToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html",
    "title": "Class VectorizationStepHandlerBase | FoundationaLLM",
    "keywords": "Class VectorizationStepHandlerBase Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll public class VectorizationStepHandlerBase : IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase Implements IVectorizationStepHandler Derived EmbeddingHandler ExtractionHandler IndexingHandler PartitionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationStepHandlerBase(string, Dictionary<string, string>) public VectorizationStepHandlerBase(string stepId, Dictionary<string, string> parameters) Parameters stepId string parameters Dictionary<string, string> Fields _parameters protected readonly Dictionary<string, string> _parameters Field Value Dictionary<string, string> _stepId protected readonly string _stepId Field Value string Properties StepId The identifier of the vectorization pipeline step. public string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, CancellationToken) Invokes the handler. public Task Invoke(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task ProcessRequest(VectorizationRequest, VectorizationState, CancellationToken) protected virtual Task ProcessRequest(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest state VectorizationState cancellationToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html",
    "title": "Class VectorizationStepHandlerFactory | FoundationaLLM",
    "keywords": "Class VectorizationStepHandlerFactory Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Implements a factory that creates vectorization step handlers. public class VectorizationStepHandlerFactory Inheritance object VectorizationStepHandlerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Create(string, Dictionary<string, string>) Creates a vectorization step handler capable of handling a specified vectorization pipeline step. public static IVectorizationStepHandler Create(string step, Dictionary<string, string> parameters) Parameters step string The identifier of the vectorization pipeline step for which the handler is created. parameters Dictionary<string, string> The parameters used to initialize the vectorization step handler. Returns IVectorizationStepHandler A class implementing IVectorizationStepHandler."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Handlers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Handlers Classes EmbeddingHandler ExtractionHandler IndexingHandler PartitionHandler VectorizationStepHandlerBase VectorizationStepHandlerFactory Implements a factory that creates vectorization step handlers."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html",
    "title": "Interface IContentSourceService | FoundationaLLM",
    "keywords": "Interface IContentSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides access to a content source. public interface IContentSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ReadFileAsync(string) Reads the binary content of a specified document from the content source. Task<BinaryData> ReadFileAsync(string filePath) Parameters filePath string The path of the document to read. Returns Task<BinaryData> The binary content of the document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html",
    "title": "Interface IRequestManagerService | FoundationaLLM",
    "keywords": "Interface IRequestManagerService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests. public interface IRequestManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Run() Runs the vectorization requests processing cycle. Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html",
    "title": "Interface IRequestSourceService | FoundationaLLM",
    "keywords": "Interface IRequestSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests. public interface IRequestSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SourceName The name of the vectorization request source. string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. Task DeleteRequest(string requestId, string popReceipt) Parameters requestId string The identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string) before the timeout expires. Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt)>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt)>> A collection of tuples containg a VectorizationRequest object, a message id and a pop receipt. The message id and pop receipt will be used to delete the message from the request source after it has been processed. SubmitRequest(VectorizationRequest) Submits a new vectorization request to the source. Task SubmitRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest item describing the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html",
    "title": "Interface IRequestSourcesCache | FoundationaLLM",
    "keywords": "Interface IRequestSourcesCache Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Defines a cache of IRequestSourceService objects. public interface IRequestSourcesCache Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html",
    "title": "Interface IVectorizationService | FoundationaLLM",
    "keywords": "Interface IVectorizationService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Interface for the vectorization service. public interface IVectorizationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(VectorizationRequest) Processes an incoming vectorization request. Task ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html",
    "title": "Interface IVectorizationStateService | FoundationaLLM",
    "keywords": "Interface IVectorizationStateService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides persistence services for vectorization pipeline states. public interface IVectorizationStateService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. ReadState(VectorizationRequest) Reads the state associated with a vectorization request. Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SaveState(VectorizationState) Saves a specified vectorization state. Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html",
    "title": "Interface IVectorizationStepHandler | FoundationaLLM",
    "keywords": "Interface IVectorizationStepHandler Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Handles requests associated with a specific vectorization pipeline step. public interface IVectorizationStepHandler Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties StepId The identifier of the vectorization pipeline step. string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, CancellationToken) Invokes the handler. Task Invoke(VectorizationRequest request, VectorizationState state, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html",
    "title": "Namespace FoundationaLLM.Vectorization.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Interfaces Interfaces IContentSourceService Provides access to a content source. IRequestManagerService Manages vectorization requests. IRequestSourceService Manages vectorization requests. IRequestSourcesCache Defines a cache of IRequestSourceService objects. IVectorizationService Interface for the vectorization service. IVectorizationStateService Provides persistence services for vectorization pipeline states. IVectorizationStepHandler Handles requests associated with a specific vectorization pipeline step."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.BlobStorageVectorizationStateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.BlobStorageVectorizationStateServiceSettings.html",
    "title": "Class BlobStorageVectorizationStateServiceSettings | FoundationaLLM",
    "keywords": "Class BlobStorageVectorizationStateServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a vectorization state service that uses Azure blob storage. public class BlobStorageVectorizationStateServiceSettings : VectorizationStateServiceSettings Inheritance object VectorizationStateServiceSettings BlobStorageVectorizationStateServiceSettings Inherited Members VectorizationStateServiceSettings.ConnectionString VectorizationStateServiceSettings.ContainerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html",
    "title": "Class RequestManagerServiceSettings | FoundationaLLM",
    "keywords": "Class RequestManagerServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a request manager instance. public record RequestManagerServiceSettings : IEquatable<RequestManagerServiceSettings> Inheritance object RequestManagerServiceSettings Implements IEquatable<RequestManagerServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxHandlerInstances The maximum number of handler instances allowed to run in parallel. [JsonPropertyOrder(1)] public int MaxHandlerInstances { get; set; } Property Value int RequestSourceName The name of the request source that provides the requests processed by the request manager. [JsonPropertyOrder(0)] public required string RequestSourceName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html",
    "title": "Class RequestSourceServiceSettings | FoundationaLLM",
    "keywords": "Class RequestSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a request source service. public class RequestSourceServiceSettings Inheritance object RequestSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionConfigurationName The name of the configuration setting holding connection information public required string ConnectionConfigurationName { get; set; } Property Value string ConnectionString The connection string to connect to the request source queue. public string? ConnectionString { get; set; } Property Value string Name The name of the request source. public required string Name { get; set; } Property Value string VisibilityTimeoutSeconds The timeout in seconds available for the processing of each request provided by the request source. If a request is not processed within the timeout window it will become visible again to request managers and might be picked up for processing again. public required int VisibilityTimeoutSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html",
    "title": "Class VectorizationStateServiceSettings | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a vectorization state service. public class VectorizationStateServiceSettings Inheritance object VectorizationStateServiceSettings Derived BlobStorageVectorizationStateServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string to connect to the underlying persistence service. public required string ConnectionString { get; set; } Property Value string ContainerName The name of the container where the underlying persistence service stores vectorization state. public required string ContainerName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html",
    "title": "Class VectorizationWorkerSettings | FoundationaLLM",
    "keywords": "Class VectorizationWorkerSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll public class VectorizationWorkerSettings Inheritance object VectorizationWorkerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties QueuingEngine [JsonPropertyOrder(2)] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationQueuing QueuingEngine { get; set; } Property Value VectorizationQueuing RequestManagers [JsonPropertyOrder(0)] public List<RequestManagerServiceSettings>? RequestManagers { get; set; } Property Value List<RequestManagerServiceSettings> RequestSources [JsonPropertyOrder(1)] public List<RequestSourceServiceSettings>? RequestSources { get; set; } Property Value List<RequestSourceServiceSettings>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models.Configuration Classes BlobStorageVectorizationStateServiceSettings Provides configuration settings to initialize a vectorization state service that uses Azure blob storage. RequestManagerServiceSettings Provides configuration settings to initialize a request manager instance. RequestSourceServiceSettings Provides configuration settings to initialize a request source service. VectorizationStateServiceSettings Provides configuration settings to initialize a vectorization state service. VectorizationWorkerSettings"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationContentIdentifier.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationContentIdentifier.html",
    "title": "Class VectorizationContentIdentifier | FoundationaLLM",
    "keywords": "Class VectorizationContentIdentifier Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents the content associated with a vectorization request. public class VectorizationContentIdentifier Inheritance object VectorizationContentIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the content being vectorized. Vectorization state services use it to derive the location of the state in the underlying storage. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public required string CanonicalId { get; set; } Property Value string UniqueId The unique identifier of the content (i.e., document) being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"unique_id\")] public required string UniqueId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html",
    "title": "Class VectorizationLogEntry | FoundationaLLM",
    "keywords": "Class VectorizationLogEntry Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll public class VectorizationLogEntry Inheritance object VectorizationLogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationLogEntry(string, string, string) public VectorizationLogEntry(string requestId, string source, string text) Parameters requestId string source string text string Properties RequestId [JsonPropertyOrder(0)] [JsonPropertyName(\"rid\")] public string RequestId { get; set; } Property Value string Source [JsonPropertyOrder(2)] [JsonPropertyName(\"src\")] public string Source { get; set; } Property Value string Text [JsonPropertyOrder(3)] [JsonPropertyName(\"txt\")] public string Text { get; set; } Property Value string Time [JsonPropertyOrder(1)] [JsonPropertyName(\"t\")] public DateTimeOffset Time { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html",
    "title": "Enum VectorizationQueuing | FoundationaLLM",
    "keywords": "Enum VectorizationQueuing Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll public enum VectorizationQueuing Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureStorageQueue = 1 None = 0"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequest.html",
    "title": "Class VectorizationRequest | FoundationaLLM",
    "keywords": "Class VectorizationRequest Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization request. public class VectorizationRequest Inheritance object VectorizationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Complete Indicates whether the vectorization process is complete or not. [JsonIgnore] public bool Complete { get; } Property Value bool CompletedSteps The ordered list of the names of the vectorization steps that were already completed. [JsonPropertyOrder(11)] [JsonPropertyName(\"completed_steps\")] public required List<string> CompletedSteps { get; set; } Property Value List<string> ContentIdentifier The VectorizationContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"content_identifier\")] public required VectorizationContentIdentifier ContentIdentifier { get; set; } Property Value VectorizationContentIdentifier Id The unique identifier of the vectorization request. Subsequent vectorization requests referring to the same content will have different unique identifiers. [JsonPropertyOrder(0)] [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string this[string] Gets the vectorization pipeline step that has a specific identifier. public VectorizationStep? this[string step] { get; } Parameters step string The identifier of the vectorization pipeline step. Property Value VectorizationStep An instances of the VectorizationStep class with the details required by the step handler. RemainingSteps The ordered list of the names of the vectorization steps that still need to be executed. [JsonPropertyOrder(12)] [JsonPropertyName(\"remaining_steps\")] public required List<string> RemainingSteps { get; set; } Property Value List<string> Steps The list of vectorization steps requested by the vectorization request. Vectorization steps are identified by unique names like \"extract\", \"partition\", \"embed\", \"index\", etc. [JsonPropertyOrder(10)] [JsonPropertyName(\"steps\")] public required List<VectorizationStep> Steps { get; set; } Property Value List<VectorizationStep> Methods MoveToNextStep() Advances the vectorization pipeline to the next step, returning the name of the next step to execute. The name returned is used to choose the next request source to which the vectorization request will be added. public string? MoveToNextStep() Returns string The name of the next step to execute if there are steps left to execute or null if the processing of the vectorization request is complete. RollbackToPreviousStep() Reverts the vectorization pipeline to the previous step, returning the name of the step to execute public string RollbackToPreviousStep() Returns string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html",
    "title": "Class VectorizationState | FoundationaLLM",
    "keywords": "Class VectorizationState Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). public class VectorizationState Inheritance object VectorizationState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentIdentifier The VectorizationContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"content_identifier\")] public required VectorizationContentIdentifier ContentIdentifier { get; set; } Property Value VectorizationContentIdentifier CurrentRequestId The unique identifier of the current vectorization request. Subsequent vectorization requests referring to the same content will have different unique identifiers. [JsonPropertyOrder(0)] [JsonPropertyName(\"request_id\")] public required string CurrentRequestId { get; set; } Property Value string LogEntries The list of log entries associated with actions executed by the vectorization pipeline. [JsonPropertyOrder(18)] [JsonPropertyName(\"log\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public List<VectorizationLogEntry> LogEntries { get; set; } Property Value List<VectorizationLogEntry> Methods FromRequest(VectorizationRequest) Creates a new VectorizationState instance based on a specified vectorization request. public static VectorizationState FromRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest instance for which the state is created. Returns VectorizationState The VectorizationState created from the request. Log(IVectorizationStepHandler, string, string) Adds a new generic log entry. public void Log(IVectorizationStepHandler handler, string requestId, string text) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. text string The string content of the log entry. LogHandlerEnd(IVectorizationStepHandler, string) Adds a log entry marking the completion of handling. public void LogHandlerEnd(IVectorizationStepHandler handler, string requestId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. LogHandlerError(IVectorizationStepHandler, string, Exception) Adds a log entry for a handling exception. public void LogHandlerError(IVectorizationStepHandler handler, string requestId, Exception ex) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. ex Exception The exception being logged. LogHandlerStart(IVectorizationStepHandler, string) Adds a log entry marking the start of handling. public void LogHandlerStart(IVectorizationStepHandler handler, string requestId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationStep.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationStep.html",
    "title": "Class VectorizationStep | FoundationaLLM",
    "keywords": "Class VectorizationStep Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll public class VectorizationStep Inheritance object VectorizationStep Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id [JsonPropertyOrder(0)] [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string Parameters [JsonPropertyOrder(1)] [JsonPropertyName(\"parameters\")] public required Dictionary<string, string> Parameters { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models Namespaces FoundationaLLM.Vectorization.Models.Configuration Classes VectorizationContentIdentifier Represents the content associated with a vectorization request. VectorizationLogEntry VectorizationRequest Represents a vectorization request. VectorizationState Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). VectorizationStep Enums VectorizationQueuing"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.BlobStorageContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.BlobStorageContentSourceService.html",
    "title": "Class BlobStorageContentSourceService | FoundationaLLM",
    "keywords": "Class BlobStorageContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll public class BlobStorageContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase BlobStorageContentSourceService Implements IContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BlobStorageContentSourceService() public BlobStorageContentSourceService() Methods ReadFileAsync(string) Reads the binary content of a specified document from the content source. public Task<BinaryData> ReadFileAsync(string filePath) Parameters filePath string The path of the document to read. Returns Task<BinaryData> The binary content of the document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html",
    "title": "Class ContentSourceServiceBase | FoundationaLLM",
    "keywords": "Class ContentSourceServiceBase Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll public class ContentSourceServiceBase Inheritance object ContentSourceServiceBase Derived BlobStorageContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.ContentSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.ContentSources Classes BlobStorageContentSourceService ContentSourceServiceBase"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html",
    "title": "Class RequestManagerService | FoundationaLLM",
    "keywords": "Class RequestManagerService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests originating from a specific request source. public class RequestManagerService : IRequestManagerService Inheritance object RequestManagerService Implements IRequestManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestManagerService(RequestManagerServiceSettings, Dictionary<string, IRequestSourceService>, IVectorizationStateService, ILogger<RequestManagerService>, CancellationToken) Initializes a new instance of the RequestManagerService class with the configuration and services required to manage vectorization requests originating from a specific request source. public RequestManagerService(RequestManagerServiceSettings settings, Dictionary<string, IRequestSourceService> requestSourceServices, IVectorizationStateService vectorizationStateService, ILogger<RequestManagerService> logger, CancellationToken cancellationToken) Parameters settings RequestManagerServiceSettings The configuration settings used to initialize the instance. requestSourceServices Dictionary<string, IRequestSourceService> The dictionary with all the request source services registered in the vectorization platform. vectorizationStateService IVectorizationStateService The service providing vectorization state management. logger ILogger<RequestManagerService> The logger service. cancellationToken CancellationToken The cancellation token that can be used to cancel the work. Exceptions VectorizationException The exception thrown when the initialization of the instance fails. Methods Run() Runs the vectorization requests processing cycle. public Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html",
    "title": "Class MemoryRequestSourceService | FoundationaLLM",
    "keywords": "Class MemoryRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements an in-memory request source, suitable for testing and quick prototyping. public class MemoryRequestSourceService : IRequestSourceService Inheritance object MemoryRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryRequestSourceService(RequestSourceServiceSettings, ILogger<MemoryRequestSourceService>) Implements an in-memory request source, suitable for testing and quick prototyping. public MemoryRequestSourceService(RequestSourceServiceSettings settings, ILogger<MemoryRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The settings used to initialize the request source. logger ILogger<MemoryRequestSourceService> The logger instnce used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string requestId, string popReceipt) Parameters requestId string The identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string) before the timeout expires. public Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt)>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt)>> A collection of tuples containg a VectorizationRequest object, a message id and a pop receipt. The message id and pop receipt will be used to delete the message from the request source after it has been processed. SubmitRequest(VectorizationRequest) Submits a new vectorization request to the source. public Task SubmitRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest item describing the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html",
    "title": "Class RequestSourcesBuilder | FoundationaLLM",
    "keywords": "Class RequestSourcesBuilder Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). public class RequestSourcesBuilder Inheritance object RequestSourcesBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestSourcesBuilder() Constructs a new instance of the builder. public RequestSourcesBuilder() Methods Build() Builds the dictionary of request source. public Dictionary<string, IRequestSourceService> Build() Returns Dictionary<string, IRequestSourceService> The dictionary of IRequestSourceService instances, hashed by the identifier of the request source. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for the request sources. public RequestSourcesBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the request sources. public RequestSourcesBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuing(VectorizationQueuing) Specifies the type of queuing used by the request sources. public RequestSourcesBuilder WithQueuing(VectorizationQueuing queuing) Parameters queuing VectorizationQueuing The VectorizationQueuing value defining the type of queuing. Returns RequestSourcesBuilder The updated instance of the builder. WithSettings(List<RequestSourceServiceSettings>?) Specifies the settings for each IRequestSourceService instance to be built. public RequestSourcesBuilder WithSettings(List<RequestSourceServiceSettings>? settings) Parameters settings List<RequestSourceServiceSettings> The list of RequestSourceServiceSettings objects providing the settings for the request sources. Returns RequestSourcesBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html",
    "title": "Class RequestSourcesCache | FoundationaLLM",
    "keywords": "Class RequestSourcesCache Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public class RequestSourcesCache : IRequestSourcesCache Inheritance object RequestSourcesCache Implements IRequestSourcesCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the cache. Constructors RequestSourcesCache(IOptions<VectorizationWorkerSettings>, IConfigurationSection, ILoggerFactory) Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public RequestSourcesCache(IOptions<VectorizationWorkerSettings> vectorizationWorkerOptions, IConfigurationSection queuesConfiguration, ILoggerFactory loggerFactory) Parameters vectorizationWorkerOptions IOptions<VectorizationWorkerSettings> The IOptions instance containing the VectorizationWorkerSettings instance. queuesConfiguration IConfigurationSection loggerFactory ILoggerFactory The ILoggerFactory used to create new loggers for child objects. Remarks Creates a new instance of the cache. Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. public Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html",
    "title": "Class StorageQueueRequestSourceService | FoundationaLLM",
    "keywords": "Class StorageQueueRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll public class StorageQueueRequestSourceService : IRequestSourceService Inheritance object StorageQueueRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageQueueRequestSourceService(RequestSourceServiceSettings, ILogger<StorageQueueRequestSourceService>) public StorageQueueRequestSourceService(RequestSourceServiceSettings settings, ILogger<StorageQueueRequestSourceService> logger) Parameters settings RequestSourceServiceSettings logger ILogger<StorageQueueRequestSourceService> Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string requestId, string popReceipt) Parameters requestId string The identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string) before the timeout expires. public Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt)>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<(VectorizationRequest Request, string MessageId, string PopReceipt)>> A collection of tuples containg a VectorizationRequest object, a message id and a pop receipt. The message id and pop receipt will be used to delete the message from the request source after it has been processed. SubmitRequest(VectorizationRequest) Submits a new vectorization request to the source. public Task SubmitRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest item describing the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.RequestSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.RequestSources Classes MemoryRequestSourceService Implements an in-memory request source, suitable for testing and quick prototyping. RequestSourcesBuilder Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). RequestSourcesCache Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. StorageQueueRequestSourceService"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationService.html",
    "title": "Class VectorizationService | FoundationaLLM",
    "keywords": "Class VectorizationService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.dll Implements the IVectorizationService interface. public class VectorizationService : IVectorizationService Inheritance object VectorizationService Implements IVectorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the VectorizationService service. Constructors VectorizationService(IRequestSourcesCache, ILogger<VectorizationService>) Implements the IVectorizationService interface. public VectorizationService(IRequestSourcesCache requestSourcesCache, ILogger<VectorizationService> logger) Parameters requestSourcesCache IRequestSourcesCache The IRequestSourcesCache cache of request sources. logger ILogger<VectorizationService> The logger instance used for logging. Remarks Creates a new instance of the VectorizationService service. Methods ProcessRequest(VectorizationRequest) Processes an incoming vectorization request. public Task ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html",
    "title": "Class BlobStorageVectorizationStateService | FoundationaLLM",
    "keywords": "Class BlobStorageVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll public class BlobStorageVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase BlobStorageVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.HashContentIdentifier(VectorizationContentIdentifier) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BlobStorageVectorizationStateService(IOptions<BlobStorageVectorizationStateServiceSettings>) public BlobStorageVectorizationStateService(IOptions<BlobStorageVectorizationStateServiceSettings> options) Parameters options IOptions<BlobStorageVectorizationStateServiceSettings> Methods GetPersistenceIdentifier(VectorizationContentIdentifier) protected override string GetPersistenceIdentifier(VectorizationContentIdentifier contentIdentifier) Parameters contentIdentifier VectorizationContentIdentifier Returns string HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html",
    "title": "Class MemoryVectorizationStateService | FoundationaLLM",
    "keywords": "Class MemoryVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll public class MemoryVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase MemoryVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.HashContentIdentifier(VectorizationContentIdentifier) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPersistenceIdentifier(VectorizationContentIdentifier) protected override string GetPersistenceIdentifier(VectorizationContentIdentifier contentIdentifier) Parameters contentIdentifier VectorizationContentIdentifier Returns string HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html",
    "title": "Class VectorizationStateServiceBase | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceBase Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll public abstract class VectorizationStateServiceBase Inheritance object VectorizationStateServiceBase Derived BlobStorageVectorizationStateService MemoryVectorizationStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPersistenceIdentifier(VectorizationContentIdentifier) protected abstract string GetPersistenceIdentifier(VectorizationContentIdentifier contentIdentifier) Parameters contentIdentifier VectorizationContentIdentifier Returns string HashContentIdentifier(VectorizationContentIdentifier) protected static string HashContentIdentifier(VectorizationContentIdentifier contentIdentifier) Parameters contentIdentifier VectorizationContentIdentifier Returns string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Classes BlobStorageVectorizationStateService MemoryVectorizationStateService VectorizationStateServiceBase"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services Namespaces FoundationaLLM.Vectorization.Services.ContentSources FoundationaLLM.Vectorization.Services.RequestSources FoundationaLLM.Vectorization.Services.VectorizationStates Classes RequestManagerService Manages vectorization requests originating from a specific request source. VectorizationService Implements the IVectorizationService interface."
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html",
    "title": "Class VectorizationWorker | FoundationaLLM",
    "keywords": "Class VectorizationWorker Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.dll public class VectorizationWorker Inheritance object VectorizationWorker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorker(IVectorizationStateService, IDictionary<string, IRequestSourceService>, IEnumerable<IRequestManagerService>, ILogger<VectorizationWorker>, CancellationToken) public VectorizationWorker(IVectorizationStateService vectorizationStateService, IDictionary<string, IRequestSourceService> requestSourceServices, IEnumerable<IRequestManagerService> requestManagerServices, ILogger<VectorizationWorker> logger, CancellationToken cancellationToken) Parameters vectorizationStateService IVectorizationStateService requestSourceServices IDictionary<string, IRequestSourceService> requestManagerServices IEnumerable<IRequestManagerService> logger ILogger<VectorizationWorker> cancellationToken CancellationToken Methods Run() public Task Run() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html",
    "title": "Class VectorizationWorkerBuilder | FoundationaLLM",
    "keywords": "Class VectorizationWorkerBuilder Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.dll Implements a builder for a vectorization worker. public class VectorizationWorkerBuilder Inheritance object VectorizationWorkerBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorkerBuilder() Constructs a new instance of the builder. public VectorizationWorkerBuilder() Methods Build() Builds the vectorization worker. public VectorizationWorker Build() Returns VectorizationWorker The vectorization worker instance. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithCancellationToken(CancellationToken) Specifies the cancellation token used to signal stopping the vectorization worker. public VectorizationWorkerBuilder WithCancellationToken(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken used to signal stopping. Returns VectorizationWorkerBuilder The updated instance of the builder. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for child objects. public VectorizationWorkerBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns VectorizationWorkerBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the vectorization worker. public VectorizationWorkerBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithSettings(VectorizationWorkerSettings) Specifies the settings used to build the vectorization worker. public VectorizationWorkerBuilder WithSettings(VectorizationWorkerSettings settings) Parameters settings VectorizationWorkerSettings The VectorizationWorkerSettingsobject providing the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStateService(IVectorizationStateService) Specifies the vectorization state service that manages vectorization states. public VectorizationWorkerBuilder WithStateService(IVectorizationStateService stateService) Parameters stateService IVectorizationStateService The IVectorizationStateService service managing state. Returns VectorizationWorkerBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Vectorization.Worker.Controllers Assembly FoundationaLLM.Vectorization.Worker.dll Methods for managing vectorization requests. [ApiVersion(1, null)] [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetWorkerStatus() Gets the status of the vectorization worker. [HttpGet] public Task<bool> GetWorkerStatus() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Worker.Controllers Classes StatusController Methods for managing vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html",
    "title": "Class Worker | FoundationaLLM",
    "keywords": "Class Worker Namespace FoundationaLLM.Vectorization.Worker Assembly FoundationaLLM.Vectorization.Worker.dll The background service used to run the worker. public class Worker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService Worker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the worker. Constructors Worker(IVectorizationStateService, IOptions<VectorizationWorkerSettings>, IConfigurationSection, ILoggerFactory) The background service used to run the worker. public Worker(IVectorizationStateService stateService, IOptions<VectorizationWorkerSettings> settings, IConfigurationSection queuesConfiguration, ILoggerFactory loggerFactory) Parameters stateService IVectorizationStateService The IVectorizationStateService used to manage the vectorization state. settings IOptions<VectorizationWorkerSettings> The VectorizationWorkerSettings options holding the vectorization worker settings. queuesConfiguration IConfigurationSection The IConfigurationSection containing the settings for the queues. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers in child objects. Remarks Creates a new instance of the worker. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Worker Namespaces FoundationaLLM.Vectorization.Worker.Controllers Classes Worker The background service used to run the worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.html",
    "title": "Namespace FoundationaLLM.Vectorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization Namespaces FoundationaLLM.Vectorization.API.Controllers FoundationaLLM.Vectorization.Exceptions FoundationaLLM.Vectorization.Handlers FoundationaLLM.Vectorization.Interfaces FoundationaLLM.Vectorization.Models FoundationaLLM.Vectorization.Services FoundationaLLM.Vectorization.Worker Classes VectorizationWorker VectorizationWorkerBuilder Implements a builder for a vectorization worker."
  },
  "api/dotnet/FoundationaLLM.html": {
    "href": "api/dotnet/FoundationaLLM.html",
    "title": "Namespace FoundationaLLM | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM Namespaces FoundationaLLM.AgentFactory FoundationaLLM.Common FoundationaLLM.Core FoundationaLLM.Gatekeeper FoundationaLLM.Management FoundationaLLM.SemanticKernel FoundationaLLM.Vectorization"
  },
  "api/dotnet/index.html": {
    "href": "api/dotnet/index.html",
    "title": ".NET API | FoundationaLLM",
    "keywords": ".NET API Use the navigation on the left to browse the .NET API documentation."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API documentation | FoundationaLLM",
    "keywords": "API documentation FoundationaLLM has both .NET and Python and Python APIs: .NET API Python API"
  },
  "api/python/index.html": {
    "href": "api/python/index.html",
    "title": "Python API | FoundationaLLM",
    "keywords": "Python API Use the navigation on the left to browse the Python API documentation."
  },
  "deployment/app-configuration-values.html": {
    "href": "deployment/app-configuration-values.html",
    "title": "Azure App Configuration values | FoundationaLLM",
    "keywords": "Azure App Configuration values FoundationaLLM uses Azure App Configuration to store configuration values, Key Vault secret references, and feature flags. Doing so helps reduce duplication and provides a convenient way to manage these settings in one place. It also allows you to change the settings without having to redeploy the solution. Since several settings can be shared by multiple projects, we do not specify the project name in the configuration key names. Configuration values Key Default Value Description FoundationaLLM:AgentHub:AgentMetadata:StorageContainer agents FoundationaLLM:AgentHub:StorageManager:BlobStorage:ConnectionString Key Vault secret name: foundationallm-agenthub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:APIs:AgentFactoryAPI:APIKey Key Vault secret name: foundationallm-apis-agentfactoryapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:AgentFactoryAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:AgentFactoryAPI:ForceHttpsRedirection true By default, the Agent Factory API forces HTTPS redirection. To override this behavior and allow it to handle HTTP requests, set this value to false. FoundationaLLM:APIs:AgentHubAPI:APIKey Key Vault secret name: foundationallm-apis-agenthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:AgentHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:DataSourceHubAPI:APIKey Key Vault secret name: foundationallm-apis-datasourcehubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:DataSourceHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety true By default, the Gatekeeper API has Azure Content Safety integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio true By default, the Gatekeeper API has Microsoft Presidio integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:ForceHttpsRedirection true By default, the Gatekeeper API forces HTTPS redirection. To override this behavior and allow it to handle HTTP requests, set this value to false. FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperintegrationapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:LangChainAPI:APIKey Key Vault secret name: foundationallm-apis-langchainapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:ManagementAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:ManagementAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:PromptHubAPI:APIKey Key Vault secret name: foundationallm-apis-prompthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:PromptHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIKey Key Vault secret name: foundationallm-apis-semantickernelapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:AzureContentSafety:APIKey Key Vault secret name: foundationallm-azurecontentsafety-apikey This is a Key Vault reference. FoundationaLLM:AzureContentSafety:APIUrl Enter the URL to the service. FoundationaLLM:AzureContentSafety:HateSeverity 2 FoundationaLLM:AzureContentSafety:SelfHarmSeverity 2 FoundationaLLM:AzureContentSafety:SexualSeverity 2 FoundationaLLM:AzureContentSafety:ViolenceSeverity 2 FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName completions FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens 8096 FoundationaLLM:AzureOpenAI:API:Completions:ModelName gpt-35-turbo FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion 0301 FoundationaLLM:AzureOpenAI:API:Completions:Temperature 0 FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName embeddings FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens 8191 FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName text-embedding-ada-002 FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature 0 FoundationaLLM:AzureOpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:AzureOpenAI:API:Key Key Vault secret name: foundationallm-azureopenai-api-key This is a Key Vault reference. FoundationaLLM:AzureOpenAI:API:Version 2023-05-15 FoundationaLLM:BlobStorageMemorySource:BlobStorageConnection Key Vault secret name: foundationallm-blobstoragememorysource-blobstorageconnection This is a Key Vault reference. FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer memory-source FoundationaLLM:BlobStorageMemorySource:ConfigFilePath BlobMemorySourceConfig.json FoundationaLLM:Branding:AccentColor #fff FoundationaLLM:Branding:AllowAgentSelection default, SDZWA These are merely sample agent names. Define one or more agents configured for your environment. Note: This value corresponds with the FoundationaLLM-AllowAgentHint feature flag. If the feature flag is true, then the User Portal UI uses these values to provide agent hints to the Agent Hub in completions-based requests. Otherwise, these values are ignored. FoundationaLLM:Branding:BackgroundColor #fff FoundationaLLM:Branding:CompanyName FoundationaLLM FoundationaLLM:Branding:FavIconUrl favicon.ico FoundationaLLM:Branding:KioskMode false FoundationaLLM:Branding:LogoText FoundationaLLM:Branding:LogoUrl foundationallm-logo-white.svg FoundationaLLM:Branding:PageTitle FoundationaLLM Chat Copilot FoundationaLLM:Branding:PrimaryColor #131833 FoundationaLLM:Branding:PrimaryTextColor #fff FoundationaLLM:Branding:SecondaryColor #334581 FoundationaLLM:Branding:SecondaryTextColor #fff FoundationaLLM:Chat:Entra:CallbackPath /signin-oidc FoundationaLLM:Chat:Entra:ClientId FoundationaLLM:Chat:Entra:ClientSecret Key Vault secret name: foundationallm-chat-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Chat:Entra:Instance Enter the URL to the service. FoundationaLLM:Chat:Entra:Scopes api://FoundationaLLM-Auth/Data.Read FoundationaLLM:Chat:Entra:TenantId FoundationaLLM:CognitiveSearch:EndPoint Enter the URL to the service. FoundationaLLM:CognitiveSearch:IndexName vector-index FoundationaLLM:CognitiveSearch:Key Key Vault secret name: foundationallm-cognitivesearch-key This is a Key Vault reference. FoundationaLLM:CognitiveSearch:MaxVectorSearchResults 10 FoundationaLLM:CognitiveSearchMemorySource:BlobStorageConnection Key Vault secret name: foundationallm-cognitivesearchmemorysource-blobstorageconnection This is a Key Vault reference. FoundationaLLM:CognitiveSearchMemorySource:BlobStorageContainer memory-source FoundationaLLM:CognitiveSearchMemorySource:ConfigFilePath ACSMemorySourceConfig.json FoundationaLLM:CognitiveSearchMemorySource:EndPoint Enter the URL to the service. FoundationaLLM:CognitiveSearchMemorySource:IndexName vector-index FoundationaLLM:CognitiveSearchMemorySource:Key Key Vault secret name: foundationallm-cognitivesearchmemorysource-key This is a Key Vault reference. FoundationaLLM:CoreAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:CoreAPI:Entra:ClientId FoundationaLLM:CoreAPI:Entra:ClientSecret Key Vault secret name: foundationallm-coreapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:CoreAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:CoreAPI:Entra:Scopes Data.Read FoundationaLLM:CoreAPI:Entra:TenantId FoundationaLLM:CoreWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer leases FoundationaLLM:CosmosDB:Containers Sessions, UserSessions FoundationaLLM:CosmosDB:Database database FoundationaLLM:CosmosDB:Endpoint Enter the URL to the service. FoundationaLLM:CosmosDB:Key Key Vault secret name: foundationallm-cosmosdb-key This is a Key Vault reference. FoundationaLLM:CosmosDB:MonitoredContainers Sessions FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer data-sources FoundationaLLM:DataSourceHub:StorageManager:BlobStorage:ConnectionString Key Vault secret name: foundationallm-datasourcehub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:DataSources:AboutFoundationaLLM:BlobStorage:ConnectionString Key Vault secret name: foundationallm-datasourcehub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:DurableSystemPrompt:BlobStorageConnection Key Vault secret name: foundationallm-durablesystemprompt-blobstorageconnection This is a Key Vault reference. FoundationaLLM:DurableSystemPrompt:BlobStorageContainer system-prompt FoundationaLLM:LangChain:CSVFile:URL Key Vault secret name: foundationallm-langchain-csvfile-url This is a Key Vault reference. FoundationaLLM:LangChain:SQLDatabase:TestDB:Password Key Vault secret name: foundationallm-langchain-sqldatabase-testdb-password This is a Key Vault reference. FoundationaLLM:LangChain:Summary:MaxTokens 4097 FoundationaLLM:LangChain:Summary:ModelName gpt-35-turbo FoundationaLLM:LangChainAPI:Key Key Vault secret name: foundationallm-langchainapi-key This is a Key Vault reference. FoundationaLLM:Management:Entra:CallbackPath /signin-oidc FoundationaLLM:Management:Entra:ClientId FoundationaLLM:Management:Entra:ClientSecret Key Vault secret name: foundationallm-management-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Management:Entra:Instance Enter the URL to the service. FoundationaLLM:Management:Entra:Scopes api://FoundationaLLM-Management-Auth/Data.Manage FoundationaLLM:Management:Entra:TenantId FoundationaLLM:ManagementAPI:Entra:ClientId FoundationaLLM:ManagementAPI:Entra:ClientSecret Key Vault secret name: foundationallm-managementapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:ManagementAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:ManagementAPI:Entra:Scopes Data.Manage FoundationaLLM:ManagementAPI:Entra:TenantId FoundationaLLM:OpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:OpenAI:API:Key Key Vault secret name: foundationallm-openai-api-key This is a Key Vault reference. FoundationaLLM:OpenAI:API:Temperature 0 FoundationaLLM:PromptHub:PromptMetadata:StorageContainer system-prompt FoundationaLLM:PromptHub:StorageManager:BlobStorage:ConnectionString Key Vault secret name: foundationallm-prompthub-storagemanager-blobstorage-connectionstring This is a Key Vault reference. FoundationaLLM:Refinement FoundationaLLM:SemanticKernelAPI:OpenAI:Key Key Vault secret name: foundationallm-semantickernelapi-openai-key This is a Key Vault reference. FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName RetailAssistant.Default FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment completions FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens 8096 FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment embeddings FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens 8191 FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint Enter the URL to the service. FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens 300 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens 50 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens 100 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName Summarizer.TwoWords FoundationaLLM:Vectorization:WorkerSettings {\"RequestManagers\": [{ \"RequestSourceName\": \"extract\", \"MaxHandlerInstances\": 1 }], \"QueuingEngine\": 1 } Feature flags Key Default Value Description FoundationaLLM-AllowAgentHint false Used for demo purposes. If the feature is enabled, the User Portal UI displays an agent hint selector for a chat session and sends an X-AGENT-HINT header with the selected agent name (if applicable) to all HTTP requests to the Core API. This header flows downstream to the Agent Hub, forcing the resolver to use the specified agent. The Agent Hub only uses this header value if this feature flag is enabled, as an added protective measure."
  },
  "deployment/authentication/core-authentication-setup-entra.html": {
    "href": "deployment/authentication/core-authentication-setup-entra.html",
    "title": "Core API and User Portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Core API and User Portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the chat interface. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Core API and user portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the user portal chat interface to authenticate users. An API application that will be used by the Core API to authenticate users. Pre-requisites Note Make sure that you have deployed the solution before proceeding with the steps below. Setup App Configuration access Sign in to the Azure portal as at least a Contributor. Navigate to the Resource Group that was created as part of the deployment. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the App Configuration resource and select Configuration explorer to view the values. If you cannot access the configurations, add your user account as an App Configuration Data Owner through Access Control (IAM). You need this role in order to update the configurations as a required part of the authentication setup. To add your user account to the appropriate role, follow the instructions in the Configure access control for services document. Obtain the URL for the chat UI application You need this URL to assign the redirect URI for the client application. If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter a name for your application, such as FoundationaLLM-Client. You should indicate that this is for the chat client (User Portal) application by appending -Client to the name. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js chat application. Add a Redirect URI under Single-page application for your deployed Vue.js application. Enter <YOUR_CHAT_APP_URL>/signin-oidc, replacing <YOUR_CHAT_APP_URL> with the chat UI application URL obtained in the Pre-requisites section above. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002chatuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the Vue.js application: http://localhost:3000/signin-oidc. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Client secret for the client application Under Manage, select Certificates & secrets. Under Client secrets, select + New client secret. For Description, enter a description for the secret. For example, enter FoundationaLLM-Client. Select a desired expiration date. Select Add. Record the secret value to add to your App Configuration settings later. Do this by selecting the Copy to clipboard icon next to the secret value. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Client secret for the API application Under Manage, select Certificates & secrets. Under Client secrets, select + New client secret. For Description, enter a description for the secret. For example, enter FoundationaLLM. Select a desired expiration date. Select Add. Record the secret value to add to your App Configuration settings later. Do this by selecting the Copy to clipboard icon next to the secret value. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Read Who can consent?: Admins and users Admin consent display name: Read data on behalf of users Admin consent description: Allows the app to read data on behalf of the signed-in user. User consent display name: Read data on behalf of the user User consent description: Allows the app to read data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://d85a09ce067141d5807a/Data.Read. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Read authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-Client application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM API application. Select the Data.Read scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following: Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Chat:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Chat:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. For example, it should look something like api://d85a09ce067141d5807a/Data.Read. FoundationaLLM:Chat:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:CoreAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:CoreAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Chat:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Chat:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:CoreAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:Scopes: Should be Data.Read. Select Apply to save the changes. Update Key Vault secrets Key Vault stores the secrets for the client and API applications. You need to update the secrets with the values that you recorded earlier. Return to the Azure portal. Navigate to the resource group that was created as part of the deployment. Select the Key Vault resource and select Secrets. If you cannot see the secrets, add your user account as a Key Vault Secrets Officer through Access Control (IAM). You need this role in order to access the secrets and update them as a required part of the authentication setup. Open the foundationallm-chat-entra-clientsecret secret, then select + New Version. Within the Secret value field, enter the Client secret of the client application that you created earlier, then select Create. Open the foundationallm-coreapi-entra-clientsecret secret, then select + New Version. Within the Secret value field, enter the Client secret of the API application that you created earlier, then select Create. Next steps Now that Entra authentication is fully configured, restart the Core API and chat applications to apply the changes. Navigate to your chat application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account. Restart Core API and Chat UI applications in an ACA Deployment To restart the Core API and Chat applications in an Azure Container Apps (ACA) deployment, you will need to navigate to the Core API and Chat applications and restart their container revisions, as indicated in the following Azure Portal screenshot: From the Revisions blade in the left navigation panel of the Core API or Chat UI container app detail page in Azure Portal, select the name of the running revision. A dialog panel titled Revision details should appear on the right side of the browser with a Restart button at the top. Select the Restart button to restart the running container. Restarting in this manner will need to be performed for both the Core API container app and the Chat UI container app. Restart Core API and Chat UI applications in an AKS Deployment To restart the Core API and Chat applications in an Azure Kubernetes Service (AKS) deployment, you will need to navigate to the AKS detail page in Azure Portal and perform the following: Select the Workloads blade from the left navigation panel. Select the Pods tab from the Workloads detail page. Select the Core API and Chat UI pods from the list (it helps if you select default in the Filter by namespace dropdown first). Select the Delete button to terminate the currently running pods. New pods will be instantiated to take their place."
  },
  "deployment/authentication/index.html": {
    "href": "deployment/authentication/index.html",
    "title": "Authentication | FoundationaLLM",
    "keywords": "Authentication FoundationaLLM uses the Microsoft Entra ID service to authenticate users and applications. Check back for additional authentication providers in the future. Microsoft Entra ID Core API and user portal authentication setup - Microsoft Entra ID Management API and portal authentication setup - Microsoft Entra ID"
  },
  "deployment/authentication/management-authentication-setup-entra.html": {
    "href": "deployment/authentication/management-authentication-setup-entra.html",
    "title": "Management API and portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Management API and portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the management portal. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Management API and portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the management portal to authenticate users. An API application that will be used by the Management API to authenticate users. Pre-requisites Note Make sure that you have deployed the solution before proceeding with the steps below. Setup App Configuration access Sign in to the Azure portal as at least a Contributor. Navigate to the Resource Group that was created as part of the deployment. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the App Configuration resource and select Configuration explorer to view the values. If you cannot access the configurations, add your user account as an App Configuration Data Owner through Access Control (IAM). You need this role in order to update the configurations as a required part of the authentication setup. To add your user account to the appropriate role, follow the instructions in the Configure access control for services document. Obtain the URL for the Management Portal application You need this URL to assign the redirect URI for the client application. If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: TODO If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: TODO Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter a name for your application, such as FoundationaLLM-ManagementClient. You should indicate that this is for the management client application by appending -ManagementClient to the name. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js management application. Add a Redirect URI under Single-page application for your deployed Vue.js management application. Enter <YOUR_MANAGEMENT_APP_URL>/signin-oidc, replacing <YOUR_MANAGEMENT_APP_URL> with the management UI application URL obtained in the Pre-requisites section above. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002managementuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the management portal Vue.js application: http://localhost:3001/signin-oidc. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Client secret for the client application Under Manage, select Certificates & secrets. Under Client secrets, select + New client secret. For Description, enter a description for the secret. For example, enter FoundationaLLM-ManagementClient. Select a desired expiration date. Select Add. Record the secret value to add to your App Configuration settings later. Do this by selecting the Copy to clipboard icon next to the secret value. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM-Management. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Client secret for the API application Under Manage, select Certificates & secrets. Under Client secrets, select + New client secret. For Description, enter a description for the secret. For example, enter FoundationaLLM. Select a desired expiration date. Select Add. Record the secret value to add to your App Configuration settings later. Do this by selecting the Copy to clipboard icon next to the secret value. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Manage Who can consent?: Admins and users Admin consent display name: Manage data on behalf of users Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://c79a09ce067141d5832b/Data.Manage. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Manage authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-ManagementClient application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM-Management API application. Select the Data.Manage scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following: Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Management:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Management:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. For example, it should look something like api://d85a09ce067141d5807a/Data.Manage. FoundationaLLM:Management:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:ManagementAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:ManagementAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Management:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Management:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Scopes: Should be Data.Manage. Select Apply to save the changes. Update Key Vault secrets Key Vault stores the secrets for the client and API applications. You need to update the secrets with the values that you recorded earlier. Return to the Azure portal. Navigate to the resource group that was created as part of the deployment. Select the Key Vault resource and select Secrets. If you cannot see the secrets, add your user account as a Key Vault Secrets Officer through Access Control (IAM). You need this role in order to access the secrets and update them as a required part of the authentication setup. Open the foundationallm-management-entra-clientsecret secret, then select + New Version. Within the Secret value field, enter the Client secret of the client application that you created earlier, then select Create. Open the foundationallm-managementapi-entra-clientsecret secret, then select + New Version. Within the Secret value field, enter the Client secret of the API application that you created earlier, then select Create. Next steps Now that Entra authentication is fully configured, restart the Management API and management portal applications to apply the changes. Navigate to your management portal application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account. Restart Management API and Management Portal UI applications in an ACA Deployment To restart the Management API and management portal applications in an Azure Container Apps (ACA) deployment, you will need to navigate to the Management API and management portal applications and restart their container revisions, as indicated in the following Azure Portal screenshot: TODO Restarting in this manner will need to be performed for both the Management API container app and the management portal container app. Restart Management API and Management Portal UI applications in an AKS Deployment To restart the Management API and management portal applications in an Azure Kubernetes Service (AKS) deployment, you will need to navigate to the AKS detail page in Azure Portal and perform the following: TODO"
  },
  "deployment/configure-access-control-for-services.html": {
    "href": "deployment/configure-access-control-for-services.html",
    "title": "Configure access control for services | FoundationaLLM",
    "keywords": "Configure access control for services FoundationaLLM takes a least privilege approach to access control. This means that by default, users have no access to any resources. You must explicitly grant access to users for each resource they need to access. This guide walks you through the process of granting access to users as needed. Prerequisites You have a FoundationaLLM solution deployed and running. You have a user account with the Contributor role on the Azure resource group or subscription where the solution is deployed. Azure App Configuration service The Azure App Configuration service provides FoundationaLLM solution components with a centralized location to store and manage application settings and feature flags. Role-based access controls (RBAC) are used to control access to the App Configuration service for managing settings and feature flags, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read application settings and feature flags. You can use the same approach to grant access to users as needed. App Configuration roles The following table summarizes the roles FoundationaLLM uses for the App Configuration service: Role Description Target Users App Configuration Data Reader Allows users to read settings and feature flags. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. App Configuration Data Owner Allows users to read and write settings and feature flags. Administrators that need to manage settings and feature flags. Grant access to the App Configuration service Use the steps below to grant access to the App Configuration service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the App Configuration resource. The name should end with -appconfig. Select Access Control (IAM) in the left-hand menu. Select + Add and then Add role assignment. Select the App Configuration Data Reader or the App Configuration Data Owner role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment. Azure Key Vault service The Azure Key Vault service provides FoundationaLLM solution components with a centralized location to store and manage secrets. Role-based access controls (RBAC) are used to control access to the Key Vault service for managing secrets, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read secrets. You can use the same approach to grant access to users as needed. Key Vault roles The following table summarizes the roles FoundationaLLM uses for the Key Vault service: Role Description Target Users Key Vault Secrets User Allows users to read secrets. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. Key Vault Secrets Officer Allows users to read and write secrets. Administrators that need to manage secrets. Grant access to the Key Vault service Use the steps below to grant access to the Key Vault service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. Select the Key Vault resource. The name should end with -kv. Select Access Control (IAM) in the left-hand menu. Select + Add and then Add role assignment. Select the Key Vault Secrets User or the Key Vault Secrets Officer role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment."
  },
  "deployment/deployment-configuration.html": {
    "href": "deployment/deployment-configuration.html",
    "title": "Configuration for deployment | FoundationaLLM",
    "keywords": "Configuration for deployment Configuration settings used by the FoundationaLLM platform Name Default Type Area Used by Description foundationallm-core-api-url Environment variable User Portal ChatThread.vue, index.vue The URL of the FoundationaLLM Core API. foundationallm-core-api-keyvault-name Environment variable Core API The name of the Azure Key Vault used by the Core API. foundationallm-core-api-entra-instance https://login.microsoftonline.com/ Environment variable Core API The Entra instance used by the Core API. foundationallm-core-api-entra-tenant-id View the Entra setup document for instructions Environment variable Core API The Entra tenant ID used by the Core API. foundationallm-core-api-entra-client-id Environment variable Core API The Entra client ID used by the Core API. foundationallm-core-api-entra-client-secret-name Key Vault secret Core API Name of the Entra client secret used by the Core API. foundationallm-core-api-entra-callback-path /signin-oidc Environment variable Core API The Entra callback path used by the Core API. foundationallm-core-api-entra-scopes Environment variable Core API The Entra scopes used by the Core API. foundationallm-core-api-gatekeeper-api-url Environment variable Core API The URL of the Gatekeeper API used by the Core API. foundationallm-gatekeeper-api-keyvault-name Environment variable Gatekeeper API The name of the Azure Key Vault used by the Gatekeeper API. foundationallm-gatekeeper-api-key Key Vault secret Gatekeeper API The first Gatekeeper API key. foundationallm-gatekeeper-api-agentfactory-api-url Environment variable Gatekeeper API The URL of the Agent Factory API used by the Gatekeeper API. foundationallm-agentfactory-api-keyvault-name Environment variable Agent Factory API The name of the Azure Key Vault used by the Agent Factory API. foundationallm-agentfactory-api-key Key Vault secret Agent Factory API The first Agent Factory API key. foundationallm-agentfactory-api-agenthub-api-url Environment variable Agent Factory API The URL of the Agent Hub API used by the Agent Factory API. foundationallm-agentfactory-api-prompthub-api-url Environment variable Agent Factory API The URL of the Prompt Hub API used by the Agent Factory API. foundationallm-agentfactory-api-datasourcehub-api-url Environment variable Agent Factory API The URL of the Data Source Hub API used by the Agent Factory API. foundationallm-agentfactory-api-langchain-api-url Environment variable Agent Factory API The URL of the LangChain API used by the Agent Factory API. foundationallm-agentfactory-api-semantickernel-api-url Environment variable Agent Factory API The URL of the Semantic Kernel API used by the Agent Factory API. foundationallm-agenthub-api-key Key Vault secret Agent Hub API APIKeyValidator (SDK) The Agent Hub API key. foundationallm-prompthub-api-key Key Vault secret Prompt Hub API APIKeyValidator (SDK) The Prompt Hub API key. foundationallm-datasourcehub-api-key Key Vault secret Data Source Hub API APIKeyValidator (SDK) The Data Source Hub API key. foundationallm-langchain-api-key Key Vault secret LangChain API APIKeyValidator (SDK) The first LangChain API key. foundationallm-langchain-sqldb-testdb-server-name Environment variable LangChain API SqlDbConfig (SDK) The name of the Azure SQL Server used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-name Environment variable LangChain API SqlDbConfig (SDK) The name of the database used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-username Environment variable LangChain API SqlDbConfig (SDK) The user name used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-password Key Vault Secret LangChain API SqlDbConfig (SDK) The user password used by the LangChain testdb SQL agent. foundationallm-azure-openai-api-url Environment variable LangChain API AzureChatLLM (SDK) The URL of the Azure OpenAI API. foundationallm-azure-openai-api-completions-deployment Environment variable LangChain API AzureChatLLM (SDK) The name of the completions Azure Open AI deployment used by LangChain API. foundationallm-azure-openai-api-completions-model-version Environment variable LangChain API AzureChatLLM (SDK) The version of the completions model used by LangChain API. foundationallm-azure-openai-api-version Environment variable LangChain API AzureChatLLM (SDK) The version of the Azure Open AI API used by LangChain API. foundationallm-azure-openai-api-key Key Vault secret LangChain API AzureChatLLM (SDK) The key of the Azure Open AI API used by LangChain API. foundationallm-langchain-summary-model-name gpt-35-turbo Environment variable LangChain API SummaryAgent (SDK) The name of the summary model used by the LangChain summary agent. foundationallm-langchain-summary-max-tokens 4097 Environment variable LangChain API SummaryAgent (SDK) The maximum number of input tokens used by the LangChain summary agent. foundationallm-keyvault-name Environment variable LangChain API, PythonSDK AgentHub(SDK), DataSourceHub(SDK),PromptHub(SDK) The name of the Azure Key Vault used by the FoundationaLLM platform. foundationallm-configuration-allow-environment-variables Environment variable PythonSDK Configuration(SDK) When True checks environment first then key vault, otherwise checks App config (not yet implemented) then key vault foundationallm-storage-connection-string Key Vault secret PythonSDK PromptHubStorageManager(SDK), DataSourceHubStorageManager(SDK), AgentHubStorageManager(SDK) The connection string of the Azure Blob Storage account used by the FoundationaLLM platform. foundationallm-prompt-metadata-storage-container Environment variable PythonSDK PromptHubStorageManager(SDK) The name of the Azure Blob Storage container where prompt metadata is stored. foundationallm-datasource-metadata-storage-container Environment variable PythonSDK DataSourceHubStorageManager(SDK) The name of the Azure Blob Storage container where data source metadata is stored. foundationallm-agent-metadata-storage-container Environment variable PythonSDK AgentHubStorageManager(SDK) The name of the Azure Blob Storage container where agent metadata is stored. Temporary configuration settings used by the FoundationaLLM platform NOTE: These configuration settings are temporary and will be removed in the future. Name Type Area Used by Description foundationallm-langchain-csv-file-url Environment variable LangChain API CSVAgent (SDK) The URL (including the SAS token) of the CSV file used by the LangChain CSV agent."
  },
  "deployment/deployment-starter.html": {
    "href": "deployment/deployment-starter.html",
    "title": "Deployment - Starter | FoundationaLLM",
    "keywords": "Deployment - Starter FoundationaLLM deploys into your own Azure Subscription. By default it will deploy to Azure Container Apps (ACA) that make it fast to get started. When you want to deploy to production at scale, you can also deploy to Azure Kubernetes Service (AKS). Given that there are Azure Subscription quota limits to the number of Azure OpenAI Service resources you can deploy, you can choose to use an existing Azure OpenAI Service resource instead of a creating a new one with your deployment. Prerequisites Azure Subscription (Subscription needs to be whitelisted for Azure OpenAI). Subscription access to Azure OpenAI service. Start here to Request Access to Azure OpenAI Service. .NET 8 SDK. Docker Desktop. Azure CLI (v2.51.0 or greater). Helm (v3.11.1 or greater). Visual Studio 2022 (only needed if you plan to run/debug the solution locally). Minimum quota of 65 CPUs across all VM family types. Start here to Manage VM Quotas. Two App Registrations created in the Entra ID tenant (Azure Active Directory). User with the following role assignments: Owner on the target subscription; Owner on the two app registrations. Deployment steps Follow the steps below to deploy the solution to your Azure subscription. You will be prompted to log in to your Azure account during the deployment process. Ensure all the prerequisites are met, and that Docker Desktop is running. From a PowerShell prompt, execute the following to clone the repository: git clone https://github.com/solliancenet/foundationallm.git Open a PowerShell instance and run the following script to provision the infrastructure and deploy the API and frontend. This will provision all of the required infrastructure, deploy the API and web app services, and import data into Cosmos DB. Option 1: Full deployment using Microsoft Azure Container Apps (ACA) cd foundationallm ./deploy/scripts/Unified-Deploy.ps1 -resourceGroup <rg_name> -location <location> -subscription <target_subscription_id> NOTE: Make sure to set the <location> value to a region that supports Azure OpenAI services. See Azure OpenAI service regions for more information. Option 2: Full deployment using Microsoft Azure Kubernetes Service (AKS) To deploy to an AKS environment instead, run the same script with the added argument -deployAks 1, as shown below. This will provision all of the required infrastructure, deploy the API and web app services as pods in an AKS cluster, and import data into Cosmos DB. cd foundationallm ./deploy/scripts/Unified-Deploy.ps1 -resourceGroup <rg_name> -location <location> -subscription <target_subscription_id> -deployAks 1 Option 3: Deployment using an existing Azure OpenAI resource To deploy using an already provisioned Azure OpenAI resource, add the following parameters: Parameter Description -openAiRg The name of the resource group containing the Azure OpenAI resource. -openAiName The name of the Azure OpenAI resource. -openAiCompletionsDeployment The name given to the deployment of a completions model deployed within the Azure OpenAI resource, eg. completions -openAiEmbeddingsDeployment The name given to the deployment of an embeddings model deployed within the Azure OpenAI resource, eg. embeddings ACA: cd foundationallm ./deploy/scripts/Unified-Deploy.ps1 -resourceGroup <rg_name> -location <location> -subscription <target_subscription_id> -openAiRg <openai_rg_name> -openAiName <openai_resource_name> -openAiCompletionsDeployment <completions_deployment_name> -openAiEmbeddingsDeployment <embeddings_deployment_name> AKS: cd foundationallm ./deploy/scripts/Unified-Deploy.ps1 -resourceGroup <rg_name> -location <location> -subscription <target_subscription_id> -deployAks 1 -openAiRg <openai_rg_name> -openAiName <openai_resource_name> -openAiCompletionsDeployment <completions_deployment_name> -openAiEmbeddingsDeployment <embeddings_deployment_name> Post-deployment configuration Authentication setup Follow the instructions in the Authentication setup document to configure authentication for the solution. Update individual APIs or portals Update individual APIs or portals when using Microsoft Azure Container Apps (ACA) To update an individual API or portal, you can use the following commands: Login with your Entra ID account: az login Set the target subscription: az account set --subscription <target_subscription_id> Navigate to the root folder of the repository, and checkout the branch you want to deploy: cd <path_to_repository> git checkout <branch_name> git pull Update the docker-compose.yml file located in deploy\\docker so that it lists only the images you are planning to update. Build and push the Docker images to the Azure Container Registry (ACR) using the following command (BuildPush.ps1 is located in the scripts folder): .\\BuildPush.ps1 -resourceGroup <resource_group_name> -acrName <acr_name> where <resource_group_name> is the name of the resource group where the Azure Container Registry is located, and <acr_name> is the name of the Azure Container Registry. For each ACA you want to update, run the following script: az containerapp update --name <aca_name> --resource-group <resource_group_name> --image <image_name> where <aca_name> is the name of the ACA, <resource_group_name> is the name of the resource group where the ACA is located, and <image_name> is the name of the image you want to update (the structure of the image name is <acr_name>.azurecr.io/<image_name>:latest, where <acr_name> is the name of the Azure Container Registry, and <image_name> is the name of the Docker image)."
  },
  "deployment/index.html": {
    "href": "deployment/index.html",
    "title": "Deployment | FoundationaLLM",
    "keywords": "Deployment Deployment choices The following table summarizes the deployment choices available for the solution: Deployment type Description When to use Starter Use your local development environment to deploy the solution to your Azure subscription. Best suited for situations where you need the flexibility of a full development environment (e.g. to customize the solution) and you have a local development environment available. CloudShell Coming Soon - Use Azure CloudShell to deploy the solution using only a browser. Best suited for situations where you want to deploy without needing to install anything in your local development environment. Select the links in the table above to learn more about each deployment choice. Post-deployment configuration Authentication setup Follow the instructions in the Authentication setup document to configure authentication for the solution."
  },
  "development/contributing/git-workflow.html": {
    "href": "development/contributing/git-workflow.html",
    "title": "Git workflow | FoundationaLLM",
    "keywords": "Git workflow The general process for working with FoundationaLLM is: Fork on GitHub Clone your fork locally Configure the upstream repo (git remote add upstream git://github.com/solliancenet/foundationallm) Switch to the default branch (e.g. main, using git checkout main) Create a local branch from that (git checkout -b myBranch) Work on your feature Rebase if required (see below) Push the branch up to GitHub (git push origin myBranch) Send a Pull Request on GitHub - the PR should target (have as base branch) the default branch (e.g. main). You should never work on a clone of the default branch, and you should never send a pull request from it - always from a branch. The reasons for this are detailed below. Learning Git Workflow For an introduction to Git, check out GitHub Guides. For more information about GitHub Flow, please head over to the Understanding the GitHub Flow illustrated guide, both by the awesome people at GitHub. Handling Updates from the default branch While you're working away in your branch, it's quite possible that the upstream target branch may be updated. If this happens you should: Stash any uncommitted changes you need to git checkout vX_Y_Z git pull upstream main git rebase main myBranch git push origin main - (optional) this this makes sure your remote main branch is up to date This ensures that your history is \"clean\" i.e. you have one branch off from main followed by your changes in a straight line. Failing to do this ends up with several \"messy\" merges in your history, which we don't want. This is the reason why you should always work in a branch and you should never be working in, or sending pull requests from, main. Rebasing public commits is very problematic, which is why we require you to rebase any updates from upstream/main. If you're working on a long running feature then you may want to do this quite often, rather than run the risk of potential merge issues further down the line. Sending a Pull Request While working on your feature you may well create several branches, which is fine, but before you send a pull request you should ensure that you have rebased back to a single \"Feature branch\" - we care about your commits, and we care about your feature branch; but we don't care about how many or which branches you created while you were working on it :) When you're ready to go you should confirm that you are up to date and rebased with upstream (see \"Handling Updates from the default branch\" above), and then: git push origin myBranch Send a descriptive Pull Request on GitHub - making sure you have selected the correct branch in the GitHub UI!"
  },
  "development/contributing/index.html": {
    "href": "development/contributing/index.html",
    "title": "Contributing to FoundationaLLM | FoundationaLLM",
    "keywords": "Contributing to FoundationaLLM We are happy to accept contributions to the FoundationaLLM project in the form of feedback, bug reports, and pull requests. If you want to make code contributions, please be sure to branch from the head of the default branch. For GitHub workflow guidance, please review the Git workflow document. Style guide Please abide by the style guide when contributing to the project."
  },
  "development/contributing/repro.html": {
    "href": "development/contributing/repro.html",
    "title": "Bug report reproduction guide | FoundationaLLM",
    "keywords": "Bug report reproduction guide When customers plan to report an issue with FoundationaLLM, we will most likely ask them to provide a so called minimal reproduction project (repro). This serves two purposes: It helps issue reporters validate their assumptions by trying to recreate the behavior in a new project. It helps eliminate ambiguity and speeds up investigations. We may also be able to provide workarounds in certain scenarios. This document describes what a minimal repro project is, and why it's important to us. What is a minimal repro project? A repro (or a reproduction) is a project, which can be used to reproduce the reported behavior with minimal effort from a product team, which has the minimum code required to demonstrate the concerning behavior. Please provide a project hosted in a public GitHub repository as described below: Create a new project with the simplest structure you can get by with to reproduce your issue. Add the minimum amount of code necessary to reproduce the behavior you are reporting on this newly created project. Make sure you do not add any dependencies that are irrelevant to the behavior. Include sample data, if relevant. Host the project as a public repository on GitHub. Make sure you haven't included any binaries in your project (this is usually about the bin and obj folders in your project) Note: that this step is important and we won't be able to open zip attachments in your issues. Zip files are potential attack vectors that we try to avoid at all cost. Important considerations Never include any sensitive information in your reproduction project. Never include any code that is not intended to be public in a repro. Do not reference any external services or data sources."
  },
  "development/contributing/style-guide.html": {
    "href": "development/contributing/style-guide.html",
    "title": "Style guide | FoundationaLLM",
    "keywords": "Style guide FoundationaLLM is a growing project with many contributors. To ensure that the code is consistent and easy to read, we have created this style guide. Please follow these guidelines when contributing to the project. General The solution contains different languages and frameworks. The following guidelines apply to all of them: Simple, clean, and readable is always better Dependency Injection is the name of the game Avoid passing data structures around, always use strongly-typed classes Use the latest language features Use well-established design patterns Always think about the bigger picture (how will my choice potentially impact everyone else?) When introducing a new pattern/approach in your code, share with the rest of the team Measure 10 times, cut once (i.e. design before you code) Primarily, we strive to use a uniform approach across all the modules of the platform. Commenting Use comments to explain why you are doing something, not what you are doing. Apply comments to all public classes, methods, and properties. Comments should be written in complete sentences with proper casing and punctuation. Add a space after the comment delimiter (//, #, etc.). Do: // If the Azure Cognitive Search index does not exists, create the index. Don't: //Create index C# Follow the C# identifier naming rules and conventions. Follow the standard C# coding conventions. Python Abide by the Python naming and coding rules (PEP (Python Enhancement Proposal) 8)."
  },
  "development/development-approach.html": {
    "href": "development/development-approach.html",
    "title": "FoundationaLLM DevOps rules and guidelines | FoundationaLLM",
    "keywords": "FoundationaLLM DevOps rules and guidelines FoundationaLLM adheres to the trunk-based development philosophy. If you are a member of the FoundationaLLM core development team or you want to contribute to the code, we strongly encourage you to go through the following materials: Microsoft's Azure DevOps team branching strategy How Microsoft develops modern software with DevOps DORA's research program (Google) The state of DevOps - 2021 edition (DORA, Google) Trunk-based development (Google Cloud Architecture Center) Trunk-based development e-book by Paul Hammant Our move to trunk-based development is driven by the vision to build and deliver the FoundationaLLM solution using a solid DevOps process centered on a Git-centric release flow. How? The core rules of development: When a developer starts working on a feature or a bug fix, a new branch gets created from main. When the work ends, a PR is created to bring the work back into main. We encourage a granular approach, where each individual feature or bug fix has it's own branch. Work should be moved back into the trunk via a PR as soon as possible. NOTE: Committing directly into main is not allowed. All changes are merged via PRs which allows for consistent review, validation, and testing processes. When a sprint ends, a release branch is created. The release branch will be used to deploy the changes to production. Work on main ca resume right after the release branch was created. The release branch will live until the next release branch is created. In the case of critical bug fixes, the process will follow the same approach as described above at step 1. Once the PR is approved and the code merged to main, it will also be cherry-picked into the current release branch. From there, it will be deployed into production. NOTE: This approach ensures that no matter how critical a bug fix is and no matter how much pressure there is to fix an issue in production, the code for the fix always ends up in main. Why? Analysis of DevOps Research and Assessment (DORA) data from 2016, 2017 shows that teams achieve higher levels of software delivery and operational performance (delivery speed, stability, and availability) if they follow these practices: Have three or fewer active branches in the application's code repository. Merge branches to trunk at least once a day. Don't have code freezes and don't have integration phases. Common pitfalls Some common obstacles to full adoption of trunk-based development include the following: An overly heavy code-review process. Many organizations have a heavyweight code review process that requires multiple approvals before changes can be merged into trunk. When code review is laborious and takes hours or days, developers avoid working in small batches and instead batch up many changes. This in turn leads to a downward spiral where reviewers procrastinate with large code reviews due to their complexity. Consequently, merge requests often languish because developers avoid them. Because it is hard to reason about the impact of large changes on a system through inspection, defects are likely to escape the attention of reviewers, and the benefits of trunk-based development are diminished. Performing code reviews asynchronously. If your team practices pair programming, then the code has already been reviewed by a second person. If further reviews are required, they should be performed synchronously: when the developer is ready to commit the code, they should ask somebody else on the team to review the code right then. They should not ask for asynchronous review—for example, by submitting a request into a tool and then starting on a new task while waiting for the review. The longer a merge is delayed, the more likely it is to create merge conflicts and associated issues. Implementing synchronous reviews requires the agreement of the team to prioritize reviewing each others' code over other work. Not running automated tests before committing code. In order to ensure trunk is kept in a working state, it's essential that tests are run against code changes before commit. This can be done on developer workstations, and many tools also provide a facility to run tests remotely against local changes and then commit automatically when they pass. When developers know that they can get their code into trunk without a great deal of ceremony, the result is small code changes that are easy to understand, review, test, and which can be moved into production faster. Actions to take Develop in small batches (even smaller than we are used to) Speed up code review so that commits do not need to wait long times to get into main. Have comprehensive, automated testing Have a fast build Metrics Metric Goal Number of active branches (not including the ones developers create for their tasks) Three or less Code freeze periods (merge, stabilization, etc.) No code freeze Frequency of merging branches/forks to trunk At least once per day Time spent in code review (includes time waiting for code review) Average code review time per PR less than 30 min We strongly encourage you to go through the following: A synthetic description of the journey of our goals - sourced from https://devops.paulhammant.com/trunk-correlated-practices-chart/ A tool to calculate the DevOps performance our our team - sourced from https://paulhammant.com/2021/10/08/software-project-guidelines/ Feature flags To be used extensively to control the stability of the releases in production."
  },
  "development/development-local.html": {
    "href": "development/development-local.html",
    "title": "Configure local development environment | FoundationaLLM",
    "keywords": "Configure local development environment Prerequisites Environment variables: Create an environment variable for the Application Configuration Service connection string named FoundationaLLM:AppConfig:ConnectionString. This is used by the .NET projects. Create an environment variable for the Application Configuration Service URI named foundationallm-app-configuration-uri. This is used by the Python projects. Follow the instructions in Configure access control for services to grant your user account access to the Azure App Configuration and Key Vault services. You may need an Azure admin to perform these steps on your behalf. Backend (APIs and worker services): Visual Studio 2022 17.8 or later (required for passthrough Visual Studio authentication for the Docker container and .NET 8 support) with the Python workload installed .NET 8 SDK or greater Python 3.11 or greater (learn more about Python environments in Visual Studio) Docker Desktop (with WSL for Windows machines) (Mac install or Windows install) Azure CLI (v2.51.0 or greater) Microsoft Azure PowerShell Helm 3.11.1 or greater Frontend (Vue.js (Nuxt) web app) Visual Studio Code (recommended for development) Node.js v18.0.0 or newer NPM Recommended way to install the latest version of NPM and node.js on Windows: Install NVM from https://github.com/coreybutler/nvm-windows Run nvm install latest Run nvm list (to see the versions of NPM/node.js available) Run nvm use latest (to use the latest available version) UI User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/UserPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM:AppConfig:ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. .NET projects Core API Core API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"GatekeeperAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7180/ } } } } CoreWorker The CoreWorker project is a .NET worker service that acts as the Cosmos DB change feed processor. When you debug it locally, it runs within a Docker container. Because of this, it is important to make sure the App Configuration service connection string is set in the appsettings.Development.json file. This is because the Docker container will not have access to the environment variable. CoreWorker app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"<...>\" } } } Gatekeeper API Gatekeeper API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"AgentFactoryAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7324/ }, \"GatekeeperIntegrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8042/ } } } } Agent Factory API Agent Factory API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"LangChainAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8765/ }, \"SemanticKernelAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7062/ }, \"AgentHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8742/ }, \"PromptHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8642/ }, \"DataSourceHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8842/ } } } } Semantic Kernel API Semantic Kernel API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"CognitiveSearch\": { \"IndexName\": \"vector-index\", \"MaxVectorSearchResults\": 10 }, \"OpenAI\": { \"CompletionsDeployment\": \"completions\", \"CompletionsDeploymentMaxTokens\": 8096, \"EmbeddingsDeployment\": \"embeddings\", \"EmbeddingsDeploymentMaxTokens\": 8191, \"ChatCompletionPromptName\": \"RetailAssistant.Default\", \"ShortSummaryPromptName\": \"Summarizer.TwoWords\", \"PromptOptimization\": { \"CompletionsMinTokens\": 50, \"CompletionsMaxTokens\": 300, \"SystemMaxTokens\": 1500, \"MemoryMinTokens\": 1500, \"MemoryMaxTokens\": 3000, \"MessagesMinTokens\": 100, \"MessagesMaxTokens\": 3000 } }, \"DurableSystemPrompt\": { \"BlobStorageContainer\": \"prompts\" }, \"CognitiveSearchMemorySource\": { \"IndexName\": \"vector-index\", \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"ACSMemorySourceConfig.json\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"BlobMemorySourceConfig.json\" }, \"SemanticKernelOrchestration\": { \"APIKeySecretName\": \"foundationallm-semantickernel-api-key\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"CognitiveSearch\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\" }, \"OpenAI\": { \"Endpoint\": \"https://<...>-openai.openai.azure.com/\", \"Key\": \"<...>\" }, \"DurableSystemPrompt\": { \"BlobStorageConnection\": \"<...>\" }, \"CognitiveSearchMemorySource\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\", \"ConfigBlobStorageConnection\": \"<...>\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageConnection\": \"<...>\" } } } Python projects Python Environment Variables Create a local environment variable named foundationallm-app-configuration-uri. The value should be the URI of the Azure App Configuration service and not the connection string. We use role-based access controls (RBAC) to access the Azure App Configuration service, so the connection string is not required. Name Value Description foundationallm-app-configuration-uri REDACTED Azure App Configuration URI Agent Hub API Agent Hub API Environment Variables Name Value Description Data Source Hub API Data Source Hub API Environment Variables Name Value Description Gatekeeper Integration API Gatekeeper Integration API Environment Variables Name Value Description Prompt Hub API Prompt Hub API Environment Variables Name Value Description LangChain API LangChain API Environment Variables Name Value Description Running the solution locally Configure and run the backend components The backend components consist of the .NET projects and the Python projects. The .NET projects are all ASP.NET Core Web API projects. The Python projects are all FastAPI projects. Open the solution in Visual Studio 2022 17.6 or later. The solution file is located at /src/FoundationaLLM.sln. Reference the API sections above to configure the app settings for each project. This primarily involves just creating the appsettings.development.json file for each of the .NET (located under the dotnet solution folder) API projects and adding the documented values within. For local development, use the localhost URLs for each of the API projects. Note The appsettings.development.json files are excluded from source control. This is to prevent sensitive information from being committed to source control. You will need to create these files locally. Expand the python solution folder. Expand the AgentHubAPI project, then expand the Python Environments folder underneath it. You will likely see a warning icon next to an environment named env. This is because the Python environment has not been created yet. Right-click the Python Environments folder and select Add Environment.... Ensure the Name field is set to env and the Version field is set to Python 3.11 (or your latest version). Also make sure the Install packages from file field is set to the requirements.txt file for the project. This will install the required Python packages after creating the environment. Click Create. You should now see the env environment listed under the Python Environments folder. The warning icon should be gone. Complete steps 4-7 for the DataSourceHubAPI, LangChainAPI, PromptHubAPI, and PythonSDK projects. You may optionally complete these steps for the Python test projects as well. Right-click the Solution in Visual Studio, then select Configure Startup Projects.... Select the Multiple startup projects option, then set the Action for the following projects to Start. Click OK. AgentFactoryAPI AgentHubAPI CoreAPI CoreWorker DataSourceHubAPI GatekeeperAPI GatekeeperIntegrationAPI LangChainAPI PromptHubAPI SemanticKernelAPI Press F5 to start debugging the solution. This will start all of the .NET projects and the Python projects. The Vue.js (Nuxt) web app will not be started by default. To start it, follow the steps below. Configure and run the frontend components The frontend components consist of the Vue.js (Nuxt) web app. Open the /src/ui/UserPortal folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3000."
  },
  "development/index.html": {
    "href": "development/index.html",
    "title": "Development | FoundationaLLM",
    "keywords": "Development Development approach Are you interested in contributing to the code? We would love your help! However, we do have some guidelines that we need contributors to follow so that we can keep things running smoothly. Please review the FoundationaLLM DevOps rules and guidelines document. Set up your development environment To successfully build and run the solution, you need to set up your development environment. Follow the instructions in the Configure local development environment document."
  },
  "documentation-generation.html": {
    "href": "documentation-generation.html",
    "title": "Documentation generation | FoundationaLLM",
    "keywords": "Documentation generation There are various layers of documentation for this project. This document describes the different layers and how they are generated. Documentation layers The following layers of documentation are available for this project: Markdown files - These are the source files for FoundationaLLM documentation. They are located in the docs folder in the main branch of the repository. API documentation - This is the documentation for the FoundationaLLM API. Language-specific API documentation is generated using tools (more on tools below). GitHub Pages - This is the primary documentation for the project. It is generated from the markdown files in the docs folder. It also includes the API documentation. Documentation tools We use a number of tools to generate the documentation for this project. The following table lists the tools and their purpose: Tool Purpose DocFX Generates the .NET API documentation for the FoundationaLLM API. It also generates the docs website, which includes custom documentation (markdown files) and the combined .NET and Python API documentation. Sphinx Generates the Python API documentation for the FoundationaLLM API. Sphinx DocFX YAML Generates the DocFX YAML files for the Python API documentation. This allows the DocFx build process to incorporate the Python documentation as well. GitHub Pages Hosts the documentation website. It is configured to use the gh-pages branch of the repository as the source for the website. DocFX Execute the following command from the repository root to generate the .NET API documentation: docfx docs/docfx.json"
  },
  "index.html": {
    "href": "index.html",
    "title": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots | FoundationaLLM",
    "keywords": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots FoundationaLLM simplifies and streamlines building knowledge management (e.g., question/answer agents) and analytic (e.g., self-service business intelligence) copilots over the data sources present across your enterprise. FoundationaLLM deploys a secure, comprehensive and highly configurable copilot platform to your Azure cloud environment: Simplifies integration with enterprise data sources used by agent for in-context learning (e.g., enabling RAG, CoT, ReAct and inner monologue patterns). Provides defense in depth with fine-grain security controls over data used by agent and pre/post completion filters that guard against attack. Hardened solution attacked by an LLM red team from inception. Scalable solution load balances across multiple LLM endpoints. Extensible to new data sources, new LLM orchestrators and LLMs. What do WE mean by \"copilot\" It's a rapidly evolving AI world out there, so let's level set on what we mean when we say copilot as this is concept core to FoundationaLLM. At its most basic, a copilot uses enterprise supplied knowledge and generative AI models to author text, write code or render images, often by reasoning over human supplied prompts. Across these modalities, the AI is used to assist a human directly with a specific task. That's what makes it a copilot. This basic capability emerges in copilots which power these scenarios: Knowledge Management: Help users quickly find the information they seek and deliver at the right level and in the right format. Examples include summarization, rephrasing or retargeting to address a persona (e.g., explain it like I'm five), sentiment analysis and recommendations. Analytics: Help users quickly get to the data driven insights they seek. Examples include recommendations, predictions, anomaly detection, statistical analysis and data querying and reporting. Why is FoundationaLLM Needed? Simply put we saw lot of folks reinventing the wheel just to get a customized copilot that was grounded and bases its responses in their own data as opposed to the trained parametric knowledge of the model. Many of the solutions we saw made for great demos, but were effectively toys wrapping calls to OpenAI endpoints- they were not something intended or ready to take into production. We built FoundationaLLM to provide a continous journey, one that was quick to get started with so folks could experiment quickly with LLM's but not fall off a cliff after that with a solution that would be insecure, unlicensed, inflexible and not fully featured enough to grow from the prototype into a production solution without having to start all over. The core problems to deliver enterprise copilots are: Enterprise grade copilots are complex and have lots of moving parts (not to mention infrastructure). The industry has a skills gap when it comes to filling the roles needed to deliver these complex copilot solutions. The top AI risks (inaccuracy, cybersecurity, compliance, explainability, privacy) are not being mitigated. Delivery of a copilot solution is time consuming, expensive and frustrating. Getting Started FoundationalLLM provides a simple command line driven approach to getting your first deployment up and running. Basically, it's two commands. After that, you can customize the solution, run it locally on your machine and update the deployment with your customizations. Follow the Starter Deployment instructions to get FoundationaLLM deployed in your Azure subscription. If you want to run the solution locally, follow the Local Development instructions. You can browse the documentation using the sidebar or visit the API section for the reference documentation."
  },
  "setup-guides/agents/index.html": {
    "href": "setup-guides/agents/index.html",
    "title": "Agents | FoundationaLLM",
    "keywords": "Agents FoundationaLLM (FLLM) agents are the core of the solution. They are responsible for orchestrating the interaction between the user and the underlying data sources. There are several components that comprise an agent through configuration as an agent consists of metadata that describes the agent and its data sources, the data sources themselves, and the LLMs that are used to generate responses. Below is a list of the different types of agents that can be configured in FLLM: SQL database agents Azure AI Search Service agents"
  },
  "setup-guides/agents/search-service-agent.html": {
    "href": "setup-guides/agents/search-service-agent.html",
    "title": "Search Service Agent | FoundationaLLM",
    "keywords": "Search Service Agent This agent is used to perform a hybrid search against an index in Azure AI Search. Backend configuration Backend configuration includes adding Azure AI Search key value into Azure Key Vault and Azure App Configuration. Access the Azure AI Search service in the Azure portal to retrieve its access key and endpoint values. Add Key Vault secret for Azure AI Search The key can be named anything relevant to the Azure AI Search Service resource and the role it plays in the organization. Use the following as an example of adding a secret to the Key Vault: Name: foundationallm-cognitivesearch-key Value: The value of the Azure AI Search Service access key. Add setting to App Configuration A new key vault reference app configuration value must be added to Azure App Configuration. This key vault reference can be named anything relevant to the role of the Azure AI Search resource in your organization, the following is an example: Key: FoundationaLLM:CognitiveSearch:Key Secret: The key vault reference should should point to the key vault secret created above. Blob storage files The following metadata files should be added to blob storage, and will be used to assemble the agent and underlying data store. Data source JSON To configure the connection to the underlying Azure AI Search Index, a JSON file should be added into the data-sources container in blob storage with the following structure. The file should be saved with a name of {data-source-name}.json, where {data-source-name} reflects the name of the index being queried or a shortened version of it. As an example, for an index named sotu, the data source name could be sotu-ds. { \"name\": \"{data-source-name}\", \"underlying_implementation\": \"search-service\", \"authentication\": { \"endpoint\": \"{search-service-endpoint}\", \"key_secret\": \"{access-key-secret-name}\" }, \"index_name\": \"{index-name}\", \"top_n\" : {number-of-vector-results}, \"embedding_field_name\": \"{embedding-field-name}\", \"text_field_name\": \"{text-field-name}\", \"description\": \"{description-of-index}\" } Field Description {data-source-name} The name of the data source. {search-service-endpoint} The endpoint of the Azure AI Search service. {access-key-secret-name} The name of the access key configuration in App Configuration. {index-name} The name of the index to query. {number-of-vector-results} Limits the number of results to return from the Azure AI Search index. {embedding-field-name} The name of the field in the Azure AI Search index that contains the vector embeddings. {text-field-name} The name of the field in the Azure AI Search index that contains the text to be searched. {description-of-index} A general description of the index. Agent JSON A JSON file should be added into the agents container in blob storage. The name of the file should be the {agent-name}.json. For Azure AI Search Service agents, the file should look like the following: { \"name\": \"{agent-name}\", \"type\": \"search-service\", \"description\": \"{agent-description}\", \"allowed_data_source_names\": [ {data-source-name} ], \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0, \"use_chat\": true }, \"embedding_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"deployment\": \"embeddings\", \"model\": \"text-embedding-ada-002\", \"chunk_size\": 10 }, \"orchestrator\": \"LangChain\" } The names added to the allowed_data_source_names list should be valid data source files in the data_sources container, minus the .json. For example, if there is a data source file named sotu-ds.json, the string entered into the allowed_data_source_names list would be \"sotu-ds\". The temperature value can be a float between 0.0 and 1.0. The language model and embedding model can be replaced depending on the environment. These entries are reflective of the default installation of FoundationaLLM. Prompt text file The prompt for the agent should be added as a file named default.txt into a folder that matches the {agent-name} within the prompts container. In the prompt, describe the function of the agent in detail, providing any guidelines and instructions in a clear and concise way. The following is an example of a prompt for an agent that searches the State of the Union addresses: You are a political science professional named Baldwin. You are responsible for answering questions regarding the February 2023 State of the Union Address. Answer only questions about the February 2023 State of the Union address. Use only the information provided in the context. Provide concise answers that are polite and professional."
  },
  "setup-guides/agents/sql-database-agents.html": {
    "href": "setup-guides/agents/sql-database-agents.html",
    "title": "SQL database agent setup procedures | FoundationaLLM",
    "keywords": "SQL database agent setup procedures The following steps should be followed to set up and a SQL database agent with a connection to a SQL database. The supported SQL database types are: Microsoft SQL Server PostgreSQL MYSQL MariaDB Backend configuration Backend configuration includes adding database password values into Azure Key Vault and Azure App Configuration. Add Key Vault secret for database A new secret must be added to Key Vault: Name: foundationallm-langchain-sqldatabase-{database-name}-password, where {database-name} is the name of your database Value: The password for the target PostgreSQL database. Add setting to App Configuration A new key vault reference app configuration value must be added to Azure App Configuration: Key: FoundationaLLM:LangChain:SQLDatabase:{DatabaseName}:Password, where {DatabaseName} is the name of the target database. Secret: The key vault reference should should point to the key vault secret created above. Blob storage files The following metadata files should be added to blob storage, and will be used to assemble the agent and underlying data store. Data source JSON To configure the connection to the underlying SQL database, a JSON file should be added into the data-sources container in blob storage with the following structure. The file should be saved with a name of {data-source-name}.json, where {data-source-name} reflects the name of the database or a shortened version of it. As an example, for a database named weatherdb, the data source name could be weather-ds. { \"name\": \"{data-source-name}\", \"underlying_implementation\": \"sql\", \"description\": \"{database-description}\", \"authentication\": { \"authentication_type\": \"username-password\", \"host\": \"{database-server-host-name}\", \"port\": {port-number}, \"database\": \"{database-name}\", \"username\": \"{database-username}\", \"password_secret\": \"{app-configuration-key-name}\" }, \"dialect\": \"{sql-dialect}\", \"few_shot_example_count\": 2, \"row_level_security_enabled\": false } Acceptable values for authentication.authentication_type are: username-password connection-string The password_secret value should be the Key value of the App Configuration setting created above. Acceptable values for dialect are: mariadb : Use with MariaDB databases mssql : Use with MS SQL Server database and Azure SQL mysql postgresql Agent JSON A JSON file should be added into the agents container in blob storage. The name of the file should be the {agent-name}.json. For SQL database agents, the file should look like the following: { \"name\": \"{agent-name}\", \"type\": \"sql\", \"description\": \"{agent-description}\", \"allowed_data_source_names\": [ {list-of-data-source-names} ], \"language_model\": { \"model_type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.5, \"use_chat\": true } } The names added to the allowed_data_source_names list should be valid data source files in the data_sources container, minus the .json. For example, if there is a data source file named weather-ds.json, the string entered into the allowed_data_source_names list would be \"weather-ds\". The temperature value can be a float between 0.0 and 1.0. Prompt text file The prompt for the agent should be added as a file named default.txt into a folder that matches the {agent-name} within the prompts container. For SQL databases, the prompt should look similar to the following, where {enter-description-of-database-and-its-contents} is replaced with a description of the database and the types of data it contains. You are a helpful agent designed to {enter-description-of-database-and-its-contents}. Given an input question, first create a syntactically correct {dialect} query to run, then look at the results of the query and return the answer to the input question. Unless the user specifies a specific number of examples they wish to obtain, always limit your query to at most {top_k} results using the TOP clause as per {dialect}. You can order the results by a relevant column to return the most interesting examples in the database. Never query for all the columns from a specific table, only ask for the relevant columns given the question. You MUST double check your query before executing it. If you get an error while executing a query, rewrite the query and try again. DO NOT make any DML statements (INSERT, UPDATE, DELETE, DROP etc.) to the database. If the input question is not related to the database, answer with your name and details about the types of questions you can address. You have access to tools for interacting with the database. Only use the below tools. Only use the information returned by the below tools to construct your final answer. Starting with Given an input question..., updates to the prompt text should be targeted and tested thoroughly, as changes below this point can have significant impacts on the completion responses returned by the agent."
  },
  "setup-guides/index.html": {
    "href": "setup-guides/index.html",
    "title": "Setup guides | FoundationaLLM",
    "keywords": "Setup guides After deploying FoundationaLLM, you can customize the solution components to adapt it for your needs. Set up FLLM agents to define a persona and connect to your data sources to generate responses."
  }
}